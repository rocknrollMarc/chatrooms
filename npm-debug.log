0 info it worked if it ends with ok
1 verbose cli [ 'node', '/usr/local/bin/npm', 'install', '-g', 'coffee-script' ]
2 info using npm@1.4.9
3 info using node@v0.10.28
4 verbose node symlink /usr/local/bin/node
5 verbose cache add [ 'coffee-script', null ]
6 verbose cache add name=undefined spec="coffee-script" args=["coffee-script",null]
7 verbose parsed url { protocol: null,
7 verbose parsed url   slashes: null,
7 verbose parsed url   auth: null,
7 verbose parsed url   host: null,
7 verbose parsed url   port: null,
7 verbose parsed url   hostname: null,
7 verbose parsed url   hash: null,
7 verbose parsed url   search: null,
7 verbose parsed url   query: null,
7 verbose parsed url   pathname: 'coffee-script',
7 verbose parsed url   path: 'coffee-script',
7 verbose parsed url   href: 'coffee-script' }
8 silly lockFile ab358269-coffee-script coffee-script
9 verbose lock coffee-script /Users/marc.bluemner/.npm/ab358269-coffee-script.lock
10 silly lockFile ab358269-coffee-script coffee-script
11 silly lockFile ab358269-coffee-script coffee-script
12 verbose addNamed [ 'coffee-script', '' ]
13 verbose addNamed [ null, '*' ]
14 silly lockFile 53951495-coffee-script coffee-script@
15 verbose lock coffee-script@ /Users/marc.bluemner/.npm/53951495-coffee-script.lock
16 silly addNameRange { name: 'coffee-script', range: '*', hasData: false }
17 verbose registry.get coffee-script not expired, no request
18 silly addNameRange number 2 { name: 'coffee-script', range: '*', hasData: true }
19 silly addNameRange versions [ 'coffee-script',
19 silly addNameRange   [ '0.7.0',
19 silly addNameRange     '0.7.1',
19 silly addNameRange     '0.7.2',
19 silly addNameRange     '0.9.0',
19 silly addNameRange     '0.9.1',
19 silly addNameRange     '0.9.2',
19 silly addNameRange     '0.9.3',
19 silly addNameRange     '0.9.4',
19 silly addNameRange     '0.9.5',
19 silly addNameRange     '0.9.6',
19 silly addNameRange     '1.0.0',
19 silly addNameRange     '1.0.1',
19 silly addNameRange     '1.1.0',
19 silly addNameRange     '1.1.1',
19 silly addNameRange     '1.1.2',
19 silly addNameRange     '1.1.3',
19 silly addNameRange     '1.2.0',
19 silly addNameRange     '1.3.0',
19 silly addNameRange     '1.3.1',
19 silly addNameRange     '1.3.2',
19 silly addNameRange     '1.3.3',
19 silly addNameRange     '1.4.0',
19 silly addNameRange     '1.5.0',
19 silly addNameRange     '1.6.0',
19 silly addNameRange     '1.6.1',
19 silly addNameRange     '1.6.2',
19 silly addNameRange     '1.6.3',
19 silly addNameRange     '1.7.0',
19 silly addNameRange     '1.7.1' ] ]
20 verbose addNamed [ 'coffee-script', '1.7.1' ]
21 verbose addNamed [ '1.7.1', '1.7.1' ]
22 silly lockFile 66cb63a1-coffee-script-1-7-1 coffee-script@1.7.1
23 verbose lock coffee-script@1.7.1 /Users/marc.bluemner/.npm/66cb63a1-coffee-script-1-7-1.lock
24 silly lockFile 66cb63a1-coffee-script-1-7-1 coffee-script@1.7.1
25 silly lockFile 66cb63a1-coffee-script-1-7-1 coffee-script@1.7.1
26 silly lockFile 53951495-coffee-script coffee-script@
27 silly lockFile 53951495-coffee-script coffee-script@
28 silly resolved [ { name: 'coffee-script',
28 silly resolved     description: 'Unfancy JavaScript',
28 silly resolved     keywords: [ 'javascript', 'language', 'coffeescript', 'compiler' ],
28 silly resolved     author: { name: 'Jeremy Ashkenas' },
28 silly resolved     version: '1.7.1',
28 silly resolved     license: 'MIT',
28 silly resolved     engines: { node: '>=0.8.0' },
28 silly resolved     directories: { lib: './lib/coffee-script' },
28 silly resolved     main: './lib/coffee-script/coffee-script',
28 silly resolved     bin: { coffee: './bin/coffee', cake: './bin/cake' },
28 silly resolved     scripts: { test: 'node ./bin/cake test' },
28 silly resolved     homepage: 'http://coffeescript.org',
28 silly resolved     bugs: { url: 'https://github.com/jashkenas/coffee-script/issues' },
28 silly resolved     repository:
28 silly resolved      { type: 'git',
28 silly resolved        url: 'git://github.com/jashkenas/coffee-script.git' },
28 silly resolved     devDependencies:
28 silly resolved      { 'uglify-js': '~2.2',
28 silly resolved        jison: '>=0.2.0',
28 silly resolved        'highlight.js': '~8.0.0',
28 silly resolved        underscore: '~1.5.2' },
28 silly resolved     dependencies: { mkdirp: '~0.3.5' },
28 silly resolved     readme: '            {\n         }   }   {\n        {   {  }  }\n         }   }{  {\n        {  }{  }  }                    _____       __  __\n       { }{ }{  { }                   / ____|     / _|/ _|\n     .- { { }  { }} -.               | |     ___ | |_| |_ ___  ___\n    (  { } { } { } }  )              | |    / _ \\|  _|  _/ _ \\/ _ \\\n    |`-..________ ..-\'|              | |___| (_) | | | ||  __/  __/\n    |                 |               \\_____\\___/|_| |_| \\___|\\___|\n    |                 ;--.\n    |                (__  \\            _____           _       _\n    |                 | )  )          / ____|         (_)     | |\n    |                 |/  /          | (___   ___ _ __ _ _ __ | |_\n    |                 (  /            \\___ \\ / __| \'__| | \'_ \\| __|\n    |                 |/              ____) | (__| |  | | |_) | |_\n    |                 |              |_____/ \\___|_|  |_| .__/ \\__|\n     `-.._________..-\'                                  | |\n                                                        |_|\n\n\n  CoffeeScript is a little language that compiles into JavaScript.\n\n  If you have the Node Package Manager installed:\n  npm install -g coffee-script\n  (Leave off the -g if you don\'t wish to install globally.)\n\n  Or, if you don\'t wish to use npm:\n  sudo bin/cake install\n\n  Execute a script:\n  coffee /path/to/script.coffee\n\n  Compile a script:\n  coffee -c /path/to/script.coffee\n\n  For documentation, usage, and examples, see:\n  http://coffeescript.org/\n\n  To suggest a feature, report a bug, or general discussion:\n  http://github.com/jashkenas/coffee-script/issues/\n\n  If you\'d like to chat, drop by #coffeescript on Freenode IRC,\n  or on webchat.freenode.net.\n\n  The source repository:\n  git://github.com/jashkenas/coffee-script.git\n\n  Top 100 contributors are listed here:\n  http://github.com/jashkenas/coffee-script/contributors\n',
28 silly resolved     readmeFilename: 'README',
28 silly resolved     _id: 'coffee-script@1.7.1',
28 silly resolved     _from: 'coffee-script@' } ]
29 info install coffee-script@1.7.1 into /usr/local/lib
30 info installOne coffee-script@1.7.1
31 info /usr/local/lib/node_modules/coffee-script unbuild
32 info preuninstall coffee-script@1.7.1
33 info uninstall coffee-script@1.7.1
34 verbose true,/usr/local/lib/node_modules,/usr/local/lib/node_modules unbuild coffee-script@1.7.1
35 verbose /usr/local/bin,[object Object] binRoot
36 info postuninstall coffee-script@1.7.1
37 verbose tar unpack /Users/marc.bluemner/.npm/coffee-script/1.7.1/package.tgz
38 silly lockFile 865d9b08-l-lib-node-modules-coffee-script tar:///usr/local/lib/node_modules/coffee-script
39 verbose lock tar:///usr/local/lib/node_modules/coffee-script /Users/marc.bluemner/.npm/865d9b08-l-lib-node-modules-coffee-script.lock
40 silly lockFile 2f014c50--coffee-script-1-7-1-package-tgz tar:///Users/marc.bluemner/.npm/coffee-script/1.7.1/package.tgz
41 verbose lock tar:///Users/marc.bluemner/.npm/coffee-script/1.7.1/package.tgz /Users/marc.bluemner/.npm/2f014c50--coffee-script-1-7-1-package-tgz.lock
42 silly gunzTarPerm modes [ '755', '644' ]
43 silly gunzTarPerm extractEntry package.json
44 silly gunzTarPerm extractEntry .npmignore
45 silly gunzTarPerm extractEntry README
46 silly gunzTarPerm extractEntry LICENSE
47 silly gunzTarPerm extractEntry register.js
48 silly gunzTarPerm extractEntry CNAME
49 silly gunzTarPerm extractEntry CONTRIBUTING.md
50 silly gunzTarPerm extractEntry bin/cake
51 silly gunzTarPerm extractEntry bin/coffee
52 silly gunzTarPerm extractEntry lib/coffee-script/browser.js
53 silly gunzTarPerm extractEntry lib/coffee-script/grammar.js
54 silly gunzTarPerm extractEntry lib/coffee-script/helpers.js
55 silly gunzTarPerm extractEntry lib/coffee-script/index.js
56 silly gunzTarPerm extractEntry lib/coffee-script/lexer.js
57 silly gunzTarPerm extractEntry lib/coffee-script/command.js
58 silly gunzTarPerm extractEntry lib/coffee-script/optparse.js
59 silly gunzTarPerm extractEntry lib/coffee-script/parser.js
60 silly gunzTarPerm extractEntry lib/coffee-script/register.js
61 silly gunzTarPerm extractEntry lib/coffee-script/repl.js
62 silly gunzTarPerm extractEntry lib/coffee-script/rewriter.js
63 silly gunzTarPerm extractEntry lib/coffee-script/coffee-script.js
64 silly gunzTarPerm extractEntry lib/coffee-script/scope.js
65 silly gunzTarPerm extractEntry lib/coffee-script/cake.js
66 silly gunzTarPerm extractEntry lib/coffee-script/sourcemap.js
67 silly gunzTarPerm extractEntry lib/coffee-script/nodes.js
68 silly lockFile 865d9b08-l-lib-node-modules-coffee-script tar:///usr/local/lib/node_modules/coffee-script
69 silly lockFile 865d9b08-l-lib-node-modules-coffee-script tar:///usr/local/lib/node_modules/coffee-script
70 silly lockFile 2f014c50--coffee-script-1-7-1-package-tgz tar:///Users/marc.bluemner/.npm/coffee-script/1.7.1/package.tgz
71 silly lockFile 2f014c50--coffee-script-1-7-1-package-tgz tar:///Users/marc.bluemner/.npm/coffee-script/1.7.1/package.tgz
72 info preinstall coffee-script@1.7.1
73 verbose readDependencies using package.json deps
74 verbose readDependencies using package.json deps
75 verbose cache add [ 'mkdirp@~0.3.5', null ]
76 verbose cache add name=undefined spec="mkdirp@~0.3.5" args=["mkdirp@~0.3.5",null]
77 verbose parsed url { protocol: null,
77 verbose parsed url   slashes: null,
77 verbose parsed url   auth: null,
77 verbose parsed url   host: null,
77 verbose parsed url   port: null,
77 verbose parsed url   hostname: null,
77 verbose parsed url   hash: null,
77 verbose parsed url   search: null,
77 verbose parsed url   query: null,
77 verbose parsed url   pathname: 'mkdirp@~0.3.5',
77 verbose parsed url   path: 'mkdirp@~0.3.5',
77 verbose parsed url   href: 'mkdirp@~0.3.5' }
78 verbose cache add name="mkdirp" spec="~0.3.5" args=["mkdirp","~0.3.5"]
79 verbose parsed url { protocol: null,
79 verbose parsed url   slashes: null,
79 verbose parsed url   auth: null,
79 verbose parsed url   host: null,
79 verbose parsed url   port: null,
79 verbose parsed url   hostname: null,
79 verbose parsed url   hash: null,
79 verbose parsed url   search: null,
79 verbose parsed url   query: null,
79 verbose parsed url   pathname: '~0.3.5',
79 verbose parsed url   path: '~0.3.5',
79 verbose parsed url   href: '~0.3.5' }
80 verbose addNamed [ 'mkdirp', '~0.3.5' ]
81 verbose addNamed [ null, '>=0.3.5-0 <0.4.0-0' ]
82 silly lockFile c3f0fe9b-mkdirp-0-3-5 mkdirp@~0.3.5
83 verbose lock mkdirp@~0.3.5 /Users/marc.bluemner/.npm/c3f0fe9b-mkdirp-0-3-5.lock
84 silly addNameRange { name: 'mkdirp', range: '>=0.3.5-0 <0.4.0-0', hasData: false }
85 verbose registry.get mkdirp not expired, no request
86 silly addNameRange number 2 { name: 'mkdirp', range: '>=0.3.5-0 <0.4.0-0', hasData: true }
87 silly addNameRange versions [ 'mkdirp',
87 silly addNameRange   [ '0.0.1',
87 silly addNameRange     '0.0.2',
87 silly addNameRange     '0.0.3',
87 silly addNameRange     '0.0.4',
87 silly addNameRange     '0.0.5',
87 silly addNameRange     '0.0.6',
87 silly addNameRange     '0.0.7',
87 silly addNameRange     '0.1.0',
87 silly addNameRange     '0.2.0',
87 silly addNameRange     '0.2.1',
87 silly addNameRange     '0.2.2',
87 silly addNameRange     '0.3.0',
87 silly addNameRange     '0.3.1',
87 silly addNameRange     '0.3.2',
87 silly addNameRange     '0.3.3',
87 silly addNameRange     '0.3.4',
87 silly addNameRange     '0.3.5',
87 silly addNameRange     '0.4.0',
87 silly addNameRange     '0.4.1',
87 silly addNameRange     '0.4.2',
87 silly addNameRange     '0.5.0' ] ]
88 verbose addNamed [ 'mkdirp', '0.3.5' ]
89 verbose addNamed [ '0.3.5', '0.3.5' ]
90 silly lockFile 67d2df2a-mkdirp-0-3-5 mkdirp@0.3.5
91 verbose lock mkdirp@0.3.5 /Users/marc.bluemner/.npm/67d2df2a-mkdirp-0-3-5.lock
92 silly lockFile 67d2df2a-mkdirp-0-3-5 mkdirp@0.3.5
93 silly lockFile 67d2df2a-mkdirp-0-3-5 mkdirp@0.3.5
94 silly lockFile c3f0fe9b-mkdirp-0-3-5 mkdirp@~0.3.5
95 silly lockFile c3f0fe9b-mkdirp-0-3-5 mkdirp@~0.3.5
96 silly resolved [ { name: 'mkdirp',
96 silly resolved     description: 'Recursively mkdir, like `mkdir -p`',
96 silly resolved     version: '0.3.5',
96 silly resolved     author:
96 silly resolved      { name: 'James Halliday',
96 silly resolved        email: 'mail@substack.net',
96 silly resolved        url: 'http://substack.net' },
96 silly resolved     main: './index',
96 silly resolved     keywords: [ 'mkdir', 'directory' ],
96 silly resolved     repository:
96 silly resolved      { type: 'git',
96 silly resolved        url: 'http://github.com/substack/node-mkdirp.git' },
96 silly resolved     scripts: { test: 'tap test/*.js' },
96 silly resolved     devDependencies: { tap: '~0.4.0' },
96 silly resolved     license: 'MIT',
96 silly resolved     readme: '# mkdirp\n\nLike `mkdir -p`, but in node.js!\n\n[![build status](https://secure.travis-ci.org/substack/node-mkdirp.png)](http://travis-ci.org/substack/node-mkdirp)\n\n# example\n\n## pow.js\n\n```js\nvar mkdirp = require(\'mkdirp\');\n    \nmkdirp(\'/tmp/foo/bar/baz\', function (err) {\n    if (err) console.error(err)\n    else console.log(\'pow!\')\n});\n```\n\nOutput\n\n```\npow!\n```\n\nAnd now /tmp/foo/bar/baz exists, huzzah!\n\n# methods\n\n```js\nvar mkdirp = require(\'mkdirp\');\n```\n\n## mkdirp(dir, mode, cb)\n\nCreate a new directory and any necessary subdirectories at `dir` with octal\npermission string `mode`.\n\nIf `mode` isn\'t specified, it defaults to `0777 & (~process.umask())`.\n\n`cb(err, made)` fires with the error or the first directory `made`\nthat had to be created, if any.\n\n## mkdirp.sync(dir, mode)\n\nSynchronously create a new directory and any necessary subdirectories at `dir`\nwith octal permission string `mode`.\n\nIf `mode` isn\'t specified, it defaults to `0777 & (~process.umask())`.\n\nReturns the first directory that had to be created, if any.\n\n# install\n\nWith [npm](http://npmjs.org) do:\n\n```\nnpm install mkdirp\n```\n\n# license\n\nMIT\n',
96 silly resolved     readmeFilename: 'readme.markdown',
96 silly resolved     bugs: { url: 'https://github.com/substack/node-mkdirp/issues' },
96 silly resolved     homepage: 'https://github.com/substack/node-mkdirp',
96 silly resolved     _id: 'mkdirp@0.3.5',
96 silly resolved     _from: 'mkdirp@~0.3.5' } ]
97 info install mkdirp@0.3.5 into /usr/local/lib/node_modules/coffee-script
98 info installOne mkdirp@0.3.5
99 info /usr/local/lib/node_modules/coffee-script/node_modules/mkdirp unbuild
100 verbose tar unpack /Users/marc.bluemner/.npm/mkdirp/0.3.5/package.tgz
101 silly lockFile 1c2cc2e0-offee-script-node-modules-mkdirp tar:///usr/local/lib/node_modules/coffee-script/node_modules/mkdirp
102 verbose lock tar:///usr/local/lib/node_modules/coffee-script/node_modules/mkdirp /Users/marc.bluemner/.npm/1c2cc2e0-offee-script-node-modules-mkdirp.lock
103 silly lockFile f3263d5d-ner-npm-mkdirp-0-3-5-package-tgz tar:///Users/marc.bluemner/.npm/mkdirp/0.3.5/package.tgz
104 verbose lock tar:///Users/marc.bluemner/.npm/mkdirp/0.3.5/package.tgz /Users/marc.bluemner/.npm/f3263d5d-ner-npm-mkdirp-0-3-5-package-tgz.lock
105 silly gunzTarPerm modes [ '755', '644' ]
106 silly gunzTarPerm extractEntry package.json
107 silly gunzTarPerm extractEntry .npmignore
108 silly gunzTarPerm extractEntry LICENSE
109 silly gunzTarPerm extractEntry index.js
110 silly gunzTarPerm extractEntry .travis.yml
111 silly gunzTarPerm extractEntry examples/pow.js
112 silly gunzTarPerm extractEntry readme.markdown
113 silly gunzTarPerm extractEntry test/chmod.js
114 silly gunzTarPerm extractEntry test/perm.js
115 silly gunzTarPerm extractEntry test/perm_sync.js
116 silly gunzTarPerm extractEntry test/race.js
117 silly gunzTarPerm extractEntry test/mkdirp.js
118 silly gunzTarPerm extractEntry test/return.js
119 silly gunzTarPerm extractEntry test/return_sync.js
120 silly gunzTarPerm extractEntry test/root.js
121 silly gunzTarPerm extractEntry test/sync.js
122 silly gunzTarPerm extractEntry test/umask.js
123 silly gunzTarPerm extractEntry test/clobber.js
124 silly gunzTarPerm extractEntry test/umask_sync.js
125 silly gunzTarPerm extractEntry test/rel.js
126 silly lockFile 1c2cc2e0-offee-script-node-modules-mkdirp tar:///usr/local/lib/node_modules/coffee-script/node_modules/mkdirp
127 silly lockFile 1c2cc2e0-offee-script-node-modules-mkdirp tar:///usr/local/lib/node_modules/coffee-script/node_modules/mkdirp
128 silly lockFile f3263d5d-ner-npm-mkdirp-0-3-5-package-tgz tar:///Users/marc.bluemner/.npm/mkdirp/0.3.5/package.tgz
129 silly lockFile f3263d5d-ner-npm-mkdirp-0-3-5-package-tgz tar:///Users/marc.bluemner/.npm/mkdirp/0.3.5/package.tgz
130 info preinstall mkdirp@0.3.5
131 verbose readDependencies using package.json deps
132 verbose readDependencies using package.json deps
133 silly resolved []
134 verbose about to build /usr/local/lib/node_modules/coffee-script/node_modules/mkdirp
135 info build /usr/local/lib/node_modules/coffee-script/node_modules/mkdirp
136 verbose linkStuff [ true,
136 verbose linkStuff   '/usr/local/lib/node_modules',
136 verbose linkStuff   false,
136 verbose linkStuff   '/usr/local/lib/node_modules/coffee-script/node_modules' ]
137 info linkStuff mkdirp@0.3.5
138 verbose linkBins mkdirp@0.3.5
139 verbose linkMans mkdirp@0.3.5
140 verbose rebuildBundles mkdirp@0.3.5
141 info install mkdirp@0.3.5
142 info postinstall mkdirp@0.3.5
143 verbose about to build /usr/local/lib/node_modules/coffee-script
144 info build /usr/local/lib/node_modules/coffee-script
145 verbose linkStuff [ true,
145 verbose linkStuff   '/usr/local/lib/node_modules',
145 verbose linkStuff   true,
145 verbose linkStuff   '/usr/local/lib/node_modules' ]
146 info linkStuff coffee-script@1.7.1
147 verbose linkBins coffee-script@1.7.1
148 verbose link bins [ { coffee: './bin/coffee', cake: './bin/cake' },
148 verbose link bins   '/usr/local/bin',
148 verbose link bins   true ]
149 verbose linkMans coffee-script@1.7.1
150 verbose rebuildBundles coffee-script@1.7.1
151 verbose rebuildBundles [ 'mkdirp' ]
152 info install coffee-script@1.7.1
153 info postinstall coffee-script@1.7.1
154 error peerinvalid The package generator-karma does not satisfy its siblings' peerDependencies requirements!
154 error peerinvalid Peer generator-angular@0.8.0 wants generator-karma@>=0.6.0
154 error peerinvalid Peer generator-angular-silex@0.1.2 wants generator-karma@~0.2.0
155 error System Darwin 13.1.0
156 error command "node" "/usr/local/bin/npm" "install" "-g" "coffee-script"
157 error cwd /Users/marc.bluemner/workspace/node/chatrooms
158 error node -v v0.10.28
159 error npm -v 1.4.9
160 error code EPEERINVALID
161 verbose exit [ 1, true ]
ormers', '2.1.0' ]
97 verbose addNamed [ '2.1.0', '2.1.0' ]
98 silly lockFile 8f87aaee-transformers-2-1-0 transformers@2.1.0
99 verbose lock transformers@2.1.0 /Users/marc.bluemner/.npm/8f87aaee-transformers-2-1-0.lock
100 verbose cache add [ 'commander@2.1.0', null ]
101 verbose cache add name=undefined spec="commander@2.1.0" args=["commander@2.1.0",null]
102 verbose parsed url { protocol: null,
102 verbose parsed url   slashes: null,
102 verbose parsed url   auth: null,
102 verbose parsed url   host: null,
102 verbose parsed url   port: null,
102 verbose parsed url   hostname: null,
102 verbose parsed url   hash: null,
102 verbose parsed url   search: null,
102 verbose parsed url   query: null,
102 verbose parsed url   pathname: 'commander@2.1.0',
102 verbose parsed url   path: 'commander@2.1.0',
102 verbose parsed url   href: 'commander@2.1.0' }
103 verbose cache add name="commander" spec="2.1.0" args=["commander","2.1.0"]
104 verbose parsed url { protocol: null,
104 verbose parsed url   slashes: null,
104 verbose parsed url   auth: null,
104 verbose parsed url   host: null,
104 verbose parsed url   port: null,
104 verbose parsed url   hostname: null,
104 verbose parsed url   hash: null,
104 verbose parsed url   search: null,
104 verbose parsed url   query: null,
104 verbose parsed url   pathname: '2.1.0',
104 verbose parsed url   path: '2.1.0',
104 verbose parsed url   href: '2.1.0' }
105 verbose addNamed [ 'commander', '2.1.0' ]
106 verbose addNamed [ '2.1.0', '2.1.0' ]
107 silly lockFile 43e0ae83-commander-2-1-0 commander@2.1.0
108 verbose lock commander@2.1.0 /Users/marc.bluemner/.npm/43e0ae83-commander-2-1-0.lock
109 verbose cache add [ 'mkdirp@~0.3.5', null ]
110 verbose cache add name=undefined spec="mkdirp@~0.3.5" args=["mkdirp@~0.3.5",null]
111 verbose parsed url { protocol: null,
111 verbose parsed url   slashes: null,
111 verbose parsed url   auth: null,
111 verbose parsed url   host: null,
111 verbose parsed url   port: null,
111 verbose parsed url   hostname: null,
111 verbose parsed url   hash: null,
111 verbose parsed url   search: null,
111 verbose parsed url   query: null,
111 verbose parsed url   pathname: 'mkdirp@~0.3.5',
111 verbose parsed url   path: 'mkdirp@~0.3.5',
111 verbose parsed url   href: 'mkdirp@~0.3.5' }
112 verbose cache add name="mkdirp" spec="~0.3.5" args=["mkdirp","~0.3.5"]
113 verbose parsed url { protocol: null,
113 verbose parsed url   slashes: null,
113 verbose parsed url   auth: null,
113 verbose parsed url   host: null,
113 verbose parsed url   port: null,
113 verbose parsed url   hostname: null,
113 verbose parsed url   hash: null,
113 verbose parsed url   search: null,
113 verbose parsed url   query: null,
113 verbose parsed url   pathname: '~0.3.5',
113 verbose parsed url   path: '~0.3.5',
113 verbose parsed url   href: '~0.3.5' }
114 verbose addNamed [ 'mkdirp', '~0.3.5' ]
115 verbose addNamed [ null, '>=0.3.5-0 <0.4.0-0' ]
116 silly lockFile c3f0fe9b-mkdirp-0-3-5 mkdirp@~0.3.5
117 verbose lock mkdirp@~0.3.5 /Users/marc.bluemner/.npm/c3f0fe9b-mkdirp-0-3-5.lock
118 verbose cache add [ 'character-parser@1.2.0', null ]
119 verbose cache add name=undefined spec="character-parser@1.2.0" args=["character-parser@1.2.0",null]
120 verbose parsed url { protocol: null,
120 verbose parsed url   slashes: null,
120 verbose parsed url   auth: null,
120 verbose parsed url   host: null,
120 verbose parsed url   port: null,
120 verbose parsed url   hostname: null,
120 verbose parsed url   hash: null,
120 verbose parsed url   search: null,
120 verbose parsed url   query: null,
120 verbose parsed url   pathname: 'character-parser@1.2.0',
120 verbose parsed url   path: 'character-parser@1.2.0',
120 verbose parsed url   href: 'character-parser@1.2.0' }
121 verbose cache add name="character-parser" spec="1.2.0" args=["character-parser","1.2.0"]
122 verbose parsed url { protocol: null,
122 verbose parsed url   slashes: null,
122 verbose parsed url   auth: null,
122 verbose parsed url   host: null,
122 verbose parsed url   port: null,
122 verbose parsed url   hostname: null,
122 verbose parsed url   hash: null,
122 verbose parsed url   search: null,
122 verbose parsed url   query: null,
122 verbose parsed url   pathname: '1.2.0',
122 verbose parsed url   path: '1.2.0',
122 verbose parsed url   href: '1.2.0' }
123 verbose addNamed [ 'character-parser', '1.2.0' ]
124 verbose addNamed [ '1.2.0', '1.2.0' ]
125 silly lockFile ae738bf0-character-parser-1-2-0 character-parser@1.2.0
126 verbose lock character-parser@1.2.0 /Users/marc.bluemner/.npm/ae738bf0-character-parser-1-2-0.lock
127 verbose cache add [ 'monocle@1.1.51', null ]
128 verbose cache add name=undefined spec="monocle@1.1.51" args=["monocle@1.1.51",null]
129 verbose parsed url { protocol: null,
129 verbose parsed url   slashes: null,
129 verbose parsed url   auth: null,
129 verbose parsed url   host: null,
129 verbose parsed url   port: null,
129 verbose parsed url   hostname: null,
129 verbose parsed url   hash: null,
129 verbose parsed url   search: null,
129 verbose parsed url   query: null,
129 verbose parsed url   pathname: 'monocle@1.1.51',
129 verbose parsed url   path: 'monocle@1.1.51',
129 verbose parsed url   href: 'monocle@1.1.51' }
130 verbose cache add name="monocle" spec="1.1.51" args=["monocle","1.1.51"]
131 verbose parsed url { protocol: null,
131 verbose parsed url   slashes: null,
131 verbose parsed url   auth: null,
131 verbose parsed url   host: null,
131 verbose parsed url   port: null,
131 verbose parsed url   hostname: null,
131 verbose parsed url   hash: null,
131 verbose parsed url   search: null,
131 verbose parsed url   query: null,
131 verbose parsed url   pathname: '1.1.51',
131 verbose parsed url   path: '1.1.51',
131 verbose parsed url   href: '1.1.51' }
132 verbose addNamed [ 'monocle', '1.1.51' ]
133 verbose addNamed [ '1.1.51', '1.1.51' ]
134 silly lockFile 8a719784-monocle-1-1-51 monocle@1.1.51
135 verbose lock monocle@1.1.51 /Users/marc.bluemner/.npm/8a719784-monocle-1-1-51.lock
136 verbose cache add [ 'with@~3.0.0', null ]
137 verbose cache add name=undefined spec="with@~3.0.0" args=["with@~3.0.0",null]
138 verbose parsed url { protocol: null,
138 verbose parsed url   slashes: null,
138 verbose parsed url   auth: null,
138 verbose parsed url   host: null,
138 verbose parsed url   port: null,
138 verbose parsed url   hostname: null,
138 verbose parsed url   hash: null,
138 verbose parsed url   search: null,
138 verbose parsed url   query: null,
138 verbose parsed url   pathname: 'with@~3.0.0',
138 verbose parsed url   path: 'with@~3.0.0',
138 verbose parsed url   href: 'with@~3.0.0' }
139 verbose cache add name="with" spec="~3.0.0" args=["with","~3.0.0"]
140 verbose parsed url { protocol: null,
140 verbose parsed url   slashes: null,
140 verbose parsed url   auth: null,
140 verbose parsed url   host: null,
140 verbose parsed url   port: null,
140 verbose parsed url   hostname: null,
140 verbose parsed url   hash: null,
140 verbose parsed url   search: null,
140 verbose parsed url   query: null,
140 verbose parsed url   pathname: '~3.0.0',
140 verbose parsed url   path: '~3.0.0',
140 verbose parsed url   href: '~3.0.0' }
141 verbose addNamed [ 'with', '~3.0.0' ]
142 verbose addNamed [ null, '>=3.0.0-0 <3.1.0-0' ]
143 silly lockFile 9512b4d0-with-3-0-0 with@~3.0.0
144 verbose lock with@~3.0.0 /Users/marc.bluemner/.npm/9512b4d0-with-3-0-0.lock
145 verbose cache add [ 'constantinople@~2.0.0', null ]
146 verbose cache add name=undefined spec="constantinople@~2.0.0" args=["constantinople@~2.0.0",null]
147 verbose parsed url { protocol: null,
147 verbose parsed url   slashes: null,
147 verbose parsed url   auth: null,
147 verbose parsed url   host: null,
147 verbose parsed url   port: null,
147 verbose parsed url   hostname: null,
147 verbose parsed url   hash: null,
147 verbose parsed url   search: null,
147 verbose parsed url   query: null,
147 verbose parsed url   pathname: 'constantinople@~2.0.0',
147 verbose parsed url   path: 'constantinople@~2.0.0',
147 verbose parsed url   href: 'constantinople@~2.0.0' }
148 verbose cache add name="constantinople" spec="~2.0.0" args=["constantinople","~2.0.0"]
149 verbose parsed url { protocol: null,
149 verbose parsed url   slashes: null,
149 verbose parsed url   auth: null,
149 verbose parsed url   host: null,
149 verbose parsed url   port: null,
149 verbose parsed url   hostname: null,
149 verbose parsed url   hash: null,
149 verbose parsed url   search: null,
149 verbose parsed url   query: null,
149 verbose parsed url   pathname: '~2.0.0',
149 verbose parsed url   path: '~2.0.0',
149 verbose parsed url   href: '~2.0.0' }
150 verbose addNamed [ 'constantinople', '~2.0.0' ]
151 verbose addNamed [ null, '>=2.0.0-0 <2.1.0-0' ]
152 silly lockFile 7b4a4597-constantinople-2-0-0 constantinople@~2.0.0
153 verbose lock constantinople@~2.0.0 /Users/marc.bluemner/.npm/7b4a4597-constantinople-2-0-0.lock
154 silly addNameRange { name: 'mkdirp', range: '>=0.3.5-0 <0.4.0-0', hasData: false }
155 silly addNameRange { name: 'with', range: '>=3.0.0-0 <3.1.0-0', hasData: false }
156 silly addNameRange { name: 'constantinople',
156 silly addNameRange   range: '>=2.0.0-0 <2.1.0-0',
156 silly addNameRange   hasData: false }
157 verbose url raw mkdirp
158 verbose url resolving [ 'https://registry.npmjs.org/', './mkdirp' ]
159 verbose url resolved https://registry.npmjs.org/mkdirp
160 info trying registry request attempt 1 at 19:03:57
161 verbose etag "ZX76IOCGNQ0Y4AWM9E9SZVM7"
162 http GET https://registry.npmjs.org/mkdirp
163 verbose url raw commander
164 verbose url resolving [ 'https://registry.npmjs.org/', './commander' ]
165 verbose url resolved https://registry.npmjs.org/commander
166 info trying registry request attempt 1 at 19:03:57
167 verbose etag "6AKDBJ08MK934OOHLX75EGZSF"
168 http GET https://registry.npmjs.org/commander
169 verbose url raw monocle
170 verbose url resolving [ 'https://registry.npmjs.org/', './monocle' ]
171 verbose url resolved https://registry.npmjs.org/monocle
172 info trying registry request attempt 1 at 19:03:57
173 verbose etag "DUAM7B2NYFQUHBP7X6VF59WOC"
174 http GET https://registry.npmjs.org/monocle
175 verbose url raw with
176 verbose url resolving [ 'https://registry.npmjs.org/', './with' ]
177 verbose url resolved https://registry.npmjs.org/with
178 info trying registry request attempt 1 at 19:03:57
179 verbose etag "AFKA12C7YPBSFFTNUEFHTIJCX"
180 http GET https://registry.npmjs.org/with
181 verbose url raw constantinople
182 verbose url resolving [ 'https://registry.npmjs.org/', './constantinople' ]
183 verbose url resolved https://registry.npmjs.org/constantinople
184 info trying registry request attempt 1 at 19:03:57
185 verbose etag "CP2HBCNYQWQZ53WU7RYAKKBY"
186 http GET https://registry.npmjs.org/constantinople
187 verbose url raw transformers
188 verbose url resolving [ 'https://registry.npmjs.org/', './transformers' ]
189 verbose url resolved https://registry.npmjs.org/transformers
190 info trying registry request attempt 1 at 19:03:57
191 verbose etag "7XFGBJILO29L5KGSN9X5YONF8"
192 http GET https://registry.npmjs.org/transformers
193 verbose url raw character-parser
194 verbose url resolving [ 'https://registry.npmjs.org/', './character-parser' ]
195 verbose url resolved https://registry.npmjs.org/character-parser
196 info trying registry request attempt 1 at 19:03:57
197 verbose etag "C396E8NPK9YG91F8AJ87BBXE9"
198 http GET https://registry.npmjs.org/character-parser
199 http 304 https://registry.npmjs.org/mkdirp
200 silly registry.get cb [ 304,
200 silly registry.get   { date: 'Mon, 26 May 2014 17:03:57 GMT',
200 silly registry.get     server: 'Apache',
200 silly registry.get     via: '1.1 varnish',
200 silly registry.get     'last-modified': 'Mon, 26 May 2014 17:03:57 GMT',
200 silly registry.get     'cache-control': 'max-age=1',
200 silly registry.get     etag: '"ZX76IOCGNQ0Y4AWM9E9SZVM7"',
200 silly registry.get     'x-served-by': 'cache-lcy1133-LCY',
200 silly registry.get     'x-cache': 'HIT',
200 silly registry.get     'x-cache-hits': '1',
200 silly registry.get     'x-timer': 'S1401123837.762395,VS0,VE0',
200 silly registry.get     vary: 'Accept',
200 silly registry.get     'content-length': '0',
200 silly registry.get     'keep-alive': 'timeout=10, max=50',
200 silly registry.get     connection: 'Keep-Alive' } ]
201 verbose etag mkdirp from cache
202 http 304 https://registry.npmjs.org/commander
203 silly registry.get cb [ 304,
203 silly registry.get   { date: 'Mon, 26 May 2014 17:03:57 GMT',
203 silly registry.get     server: 'Apache',
203 silly registry.get     via: '1.1 varnish',
203 silly registry.get     'last-modified': 'Mon, 26 May 2014 17:03:57 GMT',
203 silly registry.get     'cache-control': 'max-age=1',
203 silly registry.get     etag: '"6AKDBJ08MK934OOHLX75EGZSF"',
203 silly registry.get     'x-served-by': 'cache-lcy1134-LCY',
203 silly registry.get     'x-cache': 'HIT',
203 silly registry.get     'x-cache-hits': '1',
203 silly registry.get     'x-timer': 'S1401123837.771894,VS0,VE173',
203 silly registry.get     vary: 'Accept',
203 silly registry.get     'content-length': '0',
203 silly registry.get     'keep-alive': 'timeout=10, max=50',
203 silly registry.get     connection: 'Keep-Alive' } ]
204 verbose etag commander from cache
205 http 200 https://registry.npmjs.org/with
206 silly registry.get cb [ 200,
206 silly registry.get   { date: 'Mon, 26 May 2014 17:03:57 GMT',
206 silly registry.get     server: 'CouchDB/1.5.0 (Erlang OTP/R14B04)',
206 silly registry.get     etag: '"BHE9C9SB8R9PUPIIMBY7HBZRD"',
206 silly registry.get     'content-type': 'application/json',
206 silly registry.get     via: '1.1 varnish',
206 silly registry.get     'cache-control': 'max-age=1',
206 silly registry.get     'content-length': '10259',
206 silly registry.get     'accept-ranges': 'bytes',
206 silly registry.get     age: '645',
206 silly registry.get     'x-served-by': 'cache-v44-ASH, cache-lcy1122-LCY',
206 silly registry.get     'x-cache': 'HIT, HIT',
206 silly registry.get     'x-cache-hits': '1, 1',
206 silly registry.get     'x-timer': 'S1401123837.785301,VS0,VE170',
206 silly registry.get     vary: 'Accept',
206 silly registry.get     'keep-alive': 'timeout=10, max=50',
206 silly registry.get     connection: 'Keep-Alive' } ]
207 http 200 https://registry.npmjs.org/constantinople
208 silly registry.get cb [ 200,
208 silly registry.get   { date: 'Mon, 26 May 2014 17:03:57 GMT',
208 silly registry.get     server: 'CouchDB/1.5.0 (Erlang OTP/R14B04)',
208 silly registry.get     etag: '"F1LXZXTQ3LVNGHRP2HFN34FF0"',
208 silly registry.get     'content-type': 'application/json',
208 silly registry.get     via: '1.1 varnish',
208 silly registry.get     'cache-control': 'max-age=1',
208 silly registry.get     'content-length': '6489',
208 silly registry.get     'accept-ranges': 'bytes',
208 silly registry.get     age: '1008',
208 silly registry.get     'x-served-by': 'cache-v44-ASH, cache-lcy1127-LCY',
208 silly registry.get     'x-cache': 'HIT, HIT',
208 silly registry.get     'x-cache-hits': '1, 1',
208 silly registry.get     'x-timer': 'S1401123837.818802,VS0,VE156',
208 silly registry.get     vary: 'Accept',
208 silly registry.get     'keep-alive': 'timeout=10, max=50',
208 silly registry.get     connection: 'Keep-Alive' } ]
209 silly addNameRange number 2 { name: 'mkdirp', range: '>=0.3.5-0 <0.4.0-0', hasData: true }
210 silly addNameRange versions [ 'mkdirp',
210 silly addNameRange   [ '0.0.1',
210 silly addNameRange     '0.0.2',
210 silly addNameRange     '0.0.3',
210 silly addNameRange     '0.0.4',
210 silly addNameRange     '0.0.5',
210 silly addNameRange     '0.0.6',
210 silly addNameRange     '0.0.7',
210 silly addNameRange     '0.1.0',
210 silly addNameRange     '0.2.0',
210 silly addNameRange     '0.2.1',
210 silly addNameRange     '0.2.2',
210 silly addNameRange     '0.3.0',
210 silly addNameRange     '0.3.1',
210 silly addNameRange     '0.3.2',
210 silly addNameRange     '0.3.3',
210 silly addNameRange     '0.3.4',
210 silly addNameRange     '0.3.5',
210 silly addNameRange     '0.4.0',
210 silly addNameRange     '0.4.1',
210 silly addNameRange     '0.4.2',
210 silly addNameRange     '0.5.0' ] ]
211 verbose addNamed [ 'mkdirp', '0.3.5' ]
212 verbose addNamed [ '0.3.5', '0.3.5' ]
213 silly lockFile 67d2df2a-mkdirp-0-3-5 mkdirp@0.3.5
214 verbose lock mkdirp@0.3.5 /Users/marc.bluemner/.npm/67d2df2a-mkdirp-0-3-5.lock
215 silly addNameRange number 2 { name: 'with', range: '>=3.0.0-0 <3.1.0-0', hasData: true }
216 silly addNameRange versions [ 'with',
216 silly addNameRange   [ '1.0.0',
216 silly addNameRange     '1.0.1',
216 silly addNameRange     '1.0.2',
216 silly addNameRange     '1.0.3',
216 silly addNameRange     '1.0.4',
216 silly addNameRange     '1.1.0',
216 silly addNameRange     '1.1.1',
216 silly addNameRange     '2.0.0',
216 silly addNameRange     '3.0.0' ] ]
217 verbose addNamed [ 'with', '3.0.0' ]
218 verbose addNamed [ '3.0.0', '3.0.0' ]
219 silly lockFile 34315867-with-3-0-0 with@3.0.0
220 verbose lock with@3.0.0 /Users/marc.bluemner/.npm/34315867-with-3-0-0.lock
221 silly addNameRange number 2 { name: 'constantinople',
221 silly addNameRange   range: '>=2.0.0-0 <2.1.0-0',
221 silly addNameRange   hasData: true }
222 silly addNameRange versions [ 'constantinople', [ '1.0.0', '1.0.1', '1.0.2', '2.0.0' ] ]
223 verbose addNamed [ 'constantinople', '2.0.0' ]
224 verbose addNamed [ '2.0.0', '2.0.0' ]
225 silly lockFile 3915dbce-constantinople-2-0-0 constantinople@2.0.0
226 verbose lock constantinople@2.0.0 /Users/marc.bluemner/.npm/3915dbce-constantinople-2-0-0.lock
227 silly lockFile 67d2df2a-mkdirp-0-3-5 mkdirp@0.3.5
228 silly lockFile 67d2df2a-mkdirp-0-3-5 mkdirp@0.3.5
229 http 200 https://registry.npmjs.org/monocle
230 silly registry.get cb [ 200,
230 silly registry.get   { date: 'Mon, 26 May 2014 17:03:57 GMT',
230 silly registry.get     server: 'CouchDB/1.5.0 (Erlang OTP/R14B04)',
230 silly registry.get     etag: '"7DYXY8QEHI259N2SOGW75EJJG"',
230 silly registry.get     'content-type': 'application/json',
230 silly registry.get     via: '1.1 varnish',
230 silly registry.get     'cache-control': 'max-age=1',
230 silly registry.get     'content-length': '45798',
230 silly registry.get     'accept-ranges': 'bytes',
230 silly registry.get     age: '4829',
230 silly registry.get     'x-served-by': 'cache-v36-ASH, cache-lcy1134-LCY',
230 silly registry.get     'x-cache': 'HIT, HIT',
230 silly registry.get     'x-cache-hits': '1, 1',
230 silly registry.get     'x-timer': 'S1401123837.812188,VS0,VE173',
230 silly registry.get     vary: 'Accept',
230 silly registry.get     'keep-alive': 'timeout=10, max=50',
230 silly registry.get     connection: 'Keep-Alive' } ]
231 http 200 https://registry.npmjs.org/transformers
232 silly registry.get cb [ 200,
232 silly registry.get   { date: 'Mon, 26 May 2014 17:03:58 GMT',
232 silly registry.get     server: 'CouchDB/1.5.0 (Erlang OTP/R14B04)',
232 silly registry.get     etag: '"EJHDDM1TKO3FLRV315ZGMCFXQ"',
232 silly registry.get     'content-type': 'application/json',
232 silly registry.get     via: '1.1 varnish',
232 silly registry.get     'cache-control': 'max-age=1',
232 silly registry.get     'content-length': '36720',
232 silly registry.get     'accept-ranges': 'bytes',
232 silly registry.get     age: '291',
232 silly registry.get     'x-served-by': 'cache-v42-ASH, cache-lcy1133-LCY',
232 silly registry.get     'x-cache': 'HIT, HIT',
232 silly registry.get     'x-cache-hits': '1, 1',
232 silly registry.get     'x-timer': 'S1401123837.842196,VS0,VE177',
232 silly registry.get     vary: 'Accept',
232 silly registry.get     'keep-alive': 'timeout=10, max=49',
232 silly registry.get     connection: 'Keep-Alive' } ]
233 silly lockFile c3f0fe9b-mkdirp-0-3-5 mkdirp@~0.3.5
234 silly lockFile c3f0fe9b-mkdirp-0-3-5 mkdirp@~0.3.5
235 silly lockFile 62af640b-s-org-monocle-monocle-1-1-51-tgz https://registry.npmjs.org/monocle/-/monocle-1.1.51.tgz
236 verbose lock https://registry.npmjs.org/monocle/-/monocle-1.1.51.tgz /Users/marc.bluemner/.npm/62af640b-s-org-monocle-monocle-1-1-51-tgz.lock
237 silly lockFile 1cfed429-nsformers-transformers-2-1-0-tgz https://registry.npmjs.org/transformers/-/transformers-2.1.0.tgz
238 verbose lock https://registry.npmjs.org/transformers/-/transformers-2.1.0.tgz /Users/marc.bluemner/.npm/1cfed429-nsformers-transformers-2-1-0-tgz.lock
239 silly lockFile 43e0ae83-commander-2-1-0 commander@2.1.0
240 silly lockFile 43e0ae83-commander-2-1-0 commander@2.1.0
241 verbose addRemoteTarball [ 'https://registry.npmjs.org/monocle/-/monocle-1.1.51.tgz',
241 verbose addRemoteTarball   '22ed16e112e9b056769c5ccac920e375249d89c0' ]
242 verbose addRemoteTarball [ 'https://registry.npmjs.org/transformers/-/transformers-2.1.0.tgz',
242 verbose addRemoteTarball   '5d23cb35561dd85dc67fb8482309b47d53cce9a7' ]
243 info retry fetch attempt 1 at 19:03:58
244 verbose fetch to= /var/folders/ln/thz02fyj0ll9_055y0fs6534fq_3w0/T/npm-64780-CRGbDJLW/1401123838056-0.5522739465814084/tmp.tgz
245 info retry fetch attempt 1 at 19:03:58
246 verbose fetch to= /var/folders/ln/thz02fyj0ll9_055y0fs6534fq_3w0/T/npm-64780-CRGbDJLW/1401123838057-0.8724133661016822/tmp.tgz
247 http GET https://registry.npmjs.org/monocle/-/monocle-1.1.51.tgz
248 http GET https://registry.npmjs.org/transformers/-/transformers-2.1.0.tgz
249 silly lockFile 3915dbce-constantinople-2-0-0 constantinople@2.0.0
250 silly lockFile 3915dbce-constantinople-2-0-0 constantinople@2.0.0
251 silly lockFile 34315867-with-3-0-0 with@3.0.0
252 silly lockFile 34315867-with-3-0-0 with@3.0.0
253 silly lockFile 7b4a4597-constantinople-2-0-0 constantinople@~2.0.0
254 silly lockFile 7b4a4597-constantinople-2-0-0 constantinople@~2.0.0
255 silly lockFile 9512b4d0-with-3-0-0 with@~3.0.0
256 silly lockFile 9512b4d0-with-3-0-0 with@~3.0.0
257 http 200 https://registry.npmjs.org/character-parser
258 silly registry.get cb [ 200,
258 silly registry.get   { date: 'Mon, 26 May 2014 17:03:58 GMT',
258 silly registry.get     server: 'CouchDB/1.5.0 (Erlang OTP/R14B04)',
258 silly registry.get     etag: '"EO0MKTJ5JCATQWHNMG90U0JPN"',
258 silly registry.get     'content-type': 'application/json',
258 silly registry.get     via: '1.1 varnish',
258 silly registry.get     'cache-control': 'max-age=1',
258 silly registry.get     'content-length': '45584',
258 silly registry.get     'accept-ranges': 'bytes',
258 silly registry.get     age: '625',
258 silly registry.get     'x-served-by': 'cache-v43-ASH, cache-lcy1134-LCY',
258 silly registry.get     'x-cache': 'HIT, HIT',
258 silly registry.get     'x-cache-hits': '1, 1',
258 silly registry.get     'x-timer': 'S1401123838.020729,VS0,VE162',
258 silly registry.get     vary: 'Accept',
258 silly registry.get     'keep-alive': 'timeout=10, max=49',
258 silly registry.get     connection: 'Keep-Alive' } ]
259 silly lockFile ee3f3ddb-arser-character-parser-1-2-0-tgz https://registry.npmjs.org/character-parser/-/character-parser-1.2.0.tgz
260 verbose lock https://registry.npmjs.org/character-parser/-/character-parser-1.2.0.tgz /Users/marc.bluemner/.npm/ee3f3ddb-arser-character-parser-1-2-0-tgz.lock
261 verbose addRemoteTarball [ 'https://registry.npmjs.org/character-parser/-/character-parser-1.2.0.tgz',
261 verbose addRemoteTarball   '94134d6e5d870a39be359f7d22460935184ddef6' ]
262 info retry fetch attempt 1 at 19:03:58
263 verbose fetch to= /var/folders/ln/thz02fyj0ll9_055y0fs6534fq_3w0/T/npm-64780-CRGbDJLW/1401123838205-0.7395222689956427/tmp.tgz
264 http GET https://registry.npmjs.org/character-parser/-/character-parser-1.2.0.tgz
265 http 200 https://registry.npmjs.org/monocle/-/monocle-1.1.51.tgz
266 http 200 https://registry.npmjs.org/transformers/-/transformers-2.1.0.tgz
267 verbose tar unpack /var/folders/ln/thz02fyj0ll9_055y0fs6534fq_3w0/T/npm-64780-CRGbDJLW/1401123838056-0.5522739465814084/tmp.tgz
268 silly lockFile ca631744-emner-npm-monocle-1-1-51-package tar:///Users/marc.bluemner/.npm/monocle/1.1.51/package
269 verbose lock tar:///Users/marc.bluemner/.npm/monocle/1.1.51/package /Users/marc.bluemner/.npm/ca631744-emner-npm-monocle-1-1-51-package.lock
270 silly lockFile 1e3415c1-38056-0-5522739465814084-tmp-tgz tar:///var/folders/ln/thz02fyj0ll9_055y0fs6534fq_3w0/T/npm-64780-CRGbDJLW/1401123838056-0.5522739465814084/tmp.tgz
271 verbose lock tar:///var/folders/ln/thz02fyj0ll9_055y0fs6534fq_3w0/T/npm-64780-CRGbDJLW/1401123838056-0.5522739465814084/tmp.tgz /Users/marc.bluemner/.npm/1e3415c1-38056-0-5522739465814084-tmp-tgz.lock
272 http 200 https://registry.npmjs.org/character-parser/-/character-parser-1.2.0.tgz
273 silly gunzTarPerm modes [ '755', '644' ]
274 silly gunzTarPerm extractEntry package.json
275 silly gunzTarPerm extractEntry .npmignore
276 silly gunzTarPerm extractEntry README.md
277 silly gunzTarPerm extractEntry LICENSE
278 silly gunzTarPerm extractEntry monocle.js
279 silly lockFile ca631744-emner-npm-monocle-1-1-51-package tar:///Users/marc.bluemner/.npm/monocle/1.1.51/package
280 silly lockFile ca631744-emner-npm-monocle-1-1-51-package tar:///Users/marc.bluemner/.npm/monocle/1.1.51/package
281 verbose tar unpack /var/folders/ln/thz02fyj0ll9_055y0fs6534fq_3w0/T/npm-64780-CRGbDJLW/1401123838205-0.7395222689956427/tmp.tgz
282 silly lockFile 28c3e3db-m-character-parser-1-2-0-package tar:///Users/marc.bluemner/.npm/character-parser/1.2.0/package
283 verbose lock tar:///Users/marc.bluemner/.npm/character-parser/1.2.0/package /Users/marc.bluemner/.npm/28c3e3db-m-character-parser-1-2-0-package.lock
284 silly lockFile 19553969-38205-0-7395222689956427-tmp-tgz tar:///var/folders/ln/thz02fyj0ll9_055y0fs6534fq_3w0/T/npm-64780-CRGbDJLW/1401123838205-0.7395222689956427/tmp.tgz
285 verbose lock tar:///var/folders/ln/thz02fyj0ll9_055y0fs6534fq_3w0/T/npm-64780-CRGbDJLW/1401123838205-0.7395222689956427/tmp.tgz /Users/marc.bluemner/.npm/19553969-38205-0-7395222689956427-tmp-tgz.lock
286 verbose tar unpack /var/folders/ln/thz02fyj0ll9_055y0fs6534fq_3w0/T/npm-64780-CRGbDJLW/1401123838057-0.8724133661016822/tmp.tgz
287 silly lockFile cb38dc5b-r-npm-transformers-2-1-0-package tar:///Users/marc.bluemner/.npm/transformers/2.1.0/package
288 verbose lock tar:///Users/marc.bluemner/.npm/transformers/2.1.0/package /Users/marc.bluemner/.npm/cb38dc5b-r-npm-transformers-2-1-0-package.lock
289 silly lockFile cb523a87-38057-0-8724133661016822-tmp-tgz tar:///var/folders/ln/thz02fyj0ll9_055y0fs6534fq_3w0/T/npm-64780-CRGbDJLW/1401123838057-0.8724133661016822/tmp.tgz
290 verbose lock tar:///var/folders/ln/thz02fyj0ll9_055y0fs6534fq_3w0/T/npm-64780-CRGbDJLW/1401123838057-0.8724133661016822/tmp.tgz /Users/marc.bluemner/.npm/cb523a87-38057-0-8724133661016822-tmp-tgz.lock
291 silly lockFile 1e3415c1-38056-0-5522739465814084-tmp-tgz tar:///var/folders/ln/thz02fyj0ll9_055y0fs6534fq_3w0/T/npm-64780-CRGbDJLW/1401123838056-0.5522739465814084/tmp.tgz
292 silly lockFile 1e3415c1-38056-0-5522739465814084-tmp-tgz tar:///var/folders/ln/thz02fyj0ll9_055y0fs6534fq_3w0/T/npm-64780-CRGbDJLW/1401123838056-0.5522739465814084/tmp.tgz
293 silly lockFile 62af640b-s-org-monocle-monocle-1-1-51-tgz https://registry.npmjs.org/monocle/-/monocle-1.1.51.tgz
294 silly lockFile 62af640b-s-org-monocle-monocle-1-1-51-tgz https://registry.npmjs.org/monocle/-/monocle-1.1.51.tgz
295 silly lockFile 8a719784-monocle-1-1-51 monocle@1.1.51
296 silly lockFile 8a719784-monocle-1-1-51 monocle@1.1.51
297 silly gunzTarPerm modes [ '755', '644' ]
298 silly gunzTarPerm modes [ '755', '644' ]
299 silly gunzTarPerm extractEntry package.json
300 silly gunzTarPerm modified mode [ 'package.json', 438, 420 ]
301 silly gunzTarPerm extractEntry package.json
302 silly gunzTarPerm modified mode [ 'package.json', 438, 420 ]
303 silly gunzTarPerm extractEntry .npmignore
304 silly gunzTarPerm modified mode [ '.npmignore', 438, 420 ]
305 silly gunzTarPerm extractEntry README.md
306 silly gunzTarPerm modified mode [ 'README.md', 438, 420 ]
307 silly gunzTarPerm extractEntry .npmignore
308 silly gunzTarPerm modified mode [ '.npmignore', 438, 420 ]
309 silly gunzTarPerm extractEntry README.md
310 silly gunzTarPerm modified mode [ 'README.md', 438, 420 ]
311 silly gunzTarPerm extractEntry LICENSE
312 silly gunzTarPerm modified mode [ 'LICENSE', 438, 420 ]
313 silly gunzTarPerm extractEntry index.js
314 silly gunzTarPerm modified mode [ 'index.js', 438, 420 ]
315 silly gunzTarPerm extractEntry history.md
316 silly gunzTarPerm modified mode [ 'history.md', 438, 420 ]
317 silly gunzTarPerm extractEntry lib/shared.js
318 silly gunzTarPerm modified mode [ 'lib/shared.js', 438, 420 ]
319 silly gunzTarPerm extractEntry lib/transformers.js
320 silly gunzTarPerm modified mode [ 'lib/transformers.js', 438, 420 ]
321 silly lockFile 28c3e3db-m-character-parser-1-2-0-package tar:///Users/marc.bluemner/.npm/character-parser/1.2.0/package
322 silly lockFile 28c3e3db-m-character-parser-1-2-0-package tar:///Users/marc.bluemner/.npm/character-parser/1.2.0/package
323 silly lockFile 19553969-38205-0-7395222689956427-tmp-tgz tar:///var/folders/ln/thz02fyj0ll9_055y0fs6534fq_3w0/T/npm-64780-CRGbDJLW/1401123838205-0.7395222689956427/tmp.tgz
324 silly lockFile 19553969-38205-0-7395222689956427-tmp-tgz tar:///var/folders/ln/thz02fyj0ll9_055y0fs6534fq_3w0/T/npm-64780-CRGbDJLW/1401123838205-0.7395222689956427/tmp.tgz
325 silly lockFile ee3f3ddb-arser-character-parser-1-2-0-tgz https://registry.npmjs.org/character-parser/-/character-parser-1.2.0.tgz
326 silly lockFile ee3f3ddb-arser-character-parser-1-2-0-tgz https://registry.npmjs.org/character-parser/-/character-parser-1.2.0.tgz
327 silly lockFile ae738bf0-character-parser-1-2-0 character-parser@1.2.0
328 silly lockFile ae738bf0-character-parser-1-2-0 character-parser@1.2.0
329 silly lockFile cb38dc5b-r-npm-transformers-2-1-0-package tar:///Users/marc.bluemner/.npm/transformers/2.1.0/package
330 silly lockFile cb38dc5b-r-npm-transformers-2-1-0-package tar:///Users/marc.bluemner/.npm/transformers/2.1.0/package
331 silly lockFile cb523a87-38057-0-8724133661016822-tmp-tgz tar:///var/folders/ln/thz02fyj0ll9_055y0fs6534fq_3w0/T/npm-64780-CRGbDJLW/1401123838057-0.8724133661016822/tmp.tgz
332 silly lockFile cb523a87-38057-0-8724133661016822-tmp-tgz tar:///var/folders/ln/thz02fyj0ll9_055y0fs6534fq_3w0/T/npm-64780-CRGbDJLW/1401123838057-0.8724133661016822/tmp.tgz
333 silly lockFile 1cfed429-nsformers-transformers-2-1-0-tgz https://registry.npmjs.org/transformers/-/transformers-2.1.0.tgz
334 silly lockFile 1cfed429-nsformers-transformers-2-1-0-tgz https://registry.npmjs.org/transformers/-/transformers-2.1.0.tgz
335 silly lockFile 8f87aaee-transformers-2-1-0 transformers@2.1.0
336 silly lockFile 8f87aaee-transformers-2-1-0 transformers@2.1.0
337 silly resolved [ { name: 'mkdirp',
337 silly resolved     description: 'Recursively mkdir, like `mkdir -p`',
337 silly resolved     version: '0.3.5',
337 silly resolved     author:
337 silly resolved      { name: 'James Halliday',
337 silly resolved        email: 'mail@substack.net',
337 silly resolved        url: 'http://substack.net' },
337 silly resolved     main: './index',
337 silly resolved     keywords: [ 'mkdir', 'directory' ],
337 silly resolved     repository:
337 silly resolved      { type: 'git',
337 silly resolved        url: 'http://github.com/substack/node-mkdirp.git' },
337 silly resolved     scripts: { test: 'tap test/*.js' },
337 silly resolved     devDependencies: { tap: '~0.4.0' },
337 silly resolved     license: 'MIT',
337 silly resolved     readme: '# mkdirp\n\nLike `mkdir -p`, but in node.js!\n\n[![build status](https://secure.travis-ci.org/substack/node-mkdirp.png)](http://travis-ci.org/substack/node-mkdirp)\n\n# example\n\n## pow.js\n\n```js\nvar mkdirp = require(\'mkdirp\');\n    \nmkdirp(\'/tmp/foo/bar/baz\', function (err) {\n    if (err) console.error(err)\n    else console.log(\'pow!\')\n});\n```\n\nOutput\n\n```\npow!\n```\n\nAnd now /tmp/foo/bar/baz exists, huzzah!\n\n# methods\n\n```js\nvar mkdirp = require(\'mkdirp\');\n```\n\n## mkdirp(dir, mode, cb)\n\nCreate a new directory and any necessary subdirectories at `dir` with octal\npermission string `mode`.\n\nIf `mode` isn\'t specified, it defaults to `0777 & (~process.umask())`.\n\n`cb(err, made)` fires with the error or the first directory `made`\nthat had to be created, if any.\n\n## mkdirp.sync(dir, mode)\n\nSynchronously create a new directory and any necessary subdirectories at `dir`\nwith octal permission string `mode`.\n\nIf `mode` isn\'t specified, it defaults to `0777 & (~process.umask())`.\n\nReturns the first directory that had to be created, if any.\n\n# install\n\nWith [npm](http://npmjs.org) do:\n\n```\nnpm install mkdirp\n```\n\n# license\n\nMIT\n',
337 silly resolved     readmeFilename: 'readme.markdown',
337 silly resolved     bugs: { url: 'https://github.com/substack/node-mkdirp/issues' },
337 silly resolved     homepage: 'https://github.com/substack/node-mkdirp',
337 silly resolved     _id: 'mkdirp@0.3.5',
337 silly resolved     _from: 'mkdirp@~0.3.5' },
337 silly resolved   { name: 'commander',
337 silly resolved     version: '2.1.0',
337 silly resolved     description: 'the complete solution for node.js command-line programs',
337 silly resolved     keywords: [ 'command', 'option', 'parser', 'prompt', 'stdin' ],
337 silly resolved     author: { name: 'TJ Holowaychuk', email: 'tj@vision-media.ca' },
337 silly resolved     repository:
337 silly resolved      { type: 'git',
337 silly resolved        url: 'https://github.com/visionmedia/commander.js.git' },
337 silly resolved     devDependencies: { should: '>= 0.0.1' },
337 silly resolved     scripts: { test: 'make test' },
337 silly resolved     main: 'index',
337 silly resolved     engines: { node: '>= 0.6.x' },
337 silly resolved     files: [ 'index.js' ],
337 silly resolved     readme: '# Commander.js\n\n  The complete solution for [node.js](http://nodejs.org) command-line interfaces, inspired by Ruby\'s [commander](https://github.com/visionmedia/commander).\n\n [![Build Status](https://secure.travis-ci.org/visionmedia/commander.js.png)](http://travis-ci.org/visionmedia/commander.js)\n\n## Installation\n\n    $ npm install commander\n\n## Option parsing\n\n Options with commander are defined with the `.option()` method, also serving as documentation for the options. The example below parses args and options from `process.argv`, leaving remaining args as the `program.args` array which were not consumed by options.\n\n```js\n#!/usr/bin/env node\n\n/**\n * Module dependencies.\n */\n\nvar program = require(\'commander\');\n\nprogram\n  .version(\'0.0.1\')\n  .option(\'-p, --peppers\', \'Add peppers\')\n  .option(\'-P, --pineapple\', \'Add pineapple\')\n  .option(\'-b, --bbq\', \'Add bbq sauce\')\n  .option(\'-c, --cheese [type]\', \'Add the specified type of cheese [marble]\', \'marble\')\n  .parse(process.argv);\n\nconsole.log(\'you ordered a pizza with:\');\nif (program.peppers) console.log(\'  - peppers\');\nif (program.pineapple) console.log(\'  - pineapple\');\nif (program.bbq) console.log(\'  - bbq\');\nconsole.log(\'  - %s cheese\', program.cheese);\n```\n\n Short flags may be passed as a single arg, for example `-abc` is equivalent to `-a -b -c`. Multi-word options such as "--template-engine" are camel-cased, becoming `program.templateEngine` etc.\n\n## Automated --help\n\n The help information is auto-generated based on the information commander already knows about your program, so the following `--help` info is for free:\n\n```  \n $ ./examples/pizza --help\n\n   Usage: pizza [options]\n\n   Options:\n\n     -V, --version        output the version number\n     -p, --peppers        Add peppers\n     -P, --pineapple      Add pineapple\n     -b, --bbq            Add bbq sauce\n     -c, --cheese <type>  Add the specified type of cheese [marble]\n     -h, --help           output usage information\n\n```\n\n## Coercion\n\n```js\nfunction range(val) {\n  return val.split(\'..\').map(Number);\n}\n\nfunction list(val) {\n  return val.split(\',\');\n}\n\nprogram\n  .version(\'0.0.1\')\n  .usage(\'[options] <file ...>\')\n  .option(\'-i, --integer <n>\', \'An integer argument\', parseInt)\n  .option(\'-f, --float <n>\', \'A float argument\', parseFloat)\n  .option(\'-r, --range <a>..<b>\', \'A range\', range)\n  .option(\'-l, --list <items>\', \'A list\', list)\n  .option(\'-o, --optional [value]\', \'An optional value\')\n  .parse(process.argv);\n\nconsole.log(\' int: %j\', program.integer);\nconsole.log(\' float: %j\', program.float);\nconsole.log(\' optional: %j\', program.optional);\nprogram.range = program.range || [];\nconsole.log(\' range: %j..%j\', program.range[0], program.range[1]);\nconsole.log(\' list: %j\', program.list);\nconsole.log(\' args: %j\', program.args);\n```\n\n## Custom help\n\n You can display arbitrary `-h, --help` information\n by listening for "--help". Commander will automatically\n exit once you are done so that the remainder of your program\n does not execute causing undesired behaviours, for example\n in the following executable "stuff" will not output when\n `--help` is used.\n\n```js\n#!/usr/bin/env node\n\n/**\n * Module dependencies.\n */\n\nvar program = require(\'../\');\n\nfunction list(val) {\n  return val.split(\',\').map(Number);\n}\n\nprogram\n  .version(\'0.0.1\')\n  .option(\'-f, --foo\', \'enable some foo\')\n  .option(\'-b, --bar\', \'enable some bar\')\n  .option(\'-B, --baz\', \'enable some baz\');\n\n// must be before .parse() since\n// node\'s emit() is immediate\n\nprogram.on(\'--help\', function(){\n  console.log(\'  Examples:\');\n  console.log(\'\');\n  console.log(\'    $ custom-help --help\');\n  console.log(\'    $ custom-help -h\');\n  console.log(\'\');\n});\n\nprogram.parse(process.argv);\n\nconsole.log(\'stuff\');\n```\n\nyielding the following help output:\n\n```\n\nUsage: custom-help [options]\n\nOptions:\n\n  -h, --help     output usage information\n  -V, --version  output the version number\n  -f, --foo      enable some foo\n  -b, --bar      enable some bar\n  -B, --baz      enable some baz\n\nExamples:\n\n  $ custom-help --help\n  $ custom-help -h\n\n```\n\n## .outputHelp()\n\n  Output help information without exiting.\n\n## .help()\n\n  Output help information and exit immediately.\n\n## Links\n\n - [API documentation](http://visionmedia.github.com/commander.js/)\n - [ascii tables](https://github.com/LearnBoost/cli-table)\n - [progress bars](https://github.com/visionmedia/node-progress)\n - [more progress bars](https://github.com/substack/node-multimeter)\n - [examples](https://github.com/visionmedia/commander.js/tree/master/examples)\n\n## License \n\n(The MIT License)\n\nCopyright (c) 2011 TJ Holowaychuk &lt;tj@vision-media.ca&gt;\n\nPermission is hereby granted, free of charge, to any person obtaining\na copy of this software and associated documentation files (the\n\'Software\'), to deal in the Software without restriction, including\nwithout limitation the rights to use, copy, modify, merge, publish,\ndistribute, sublicense, and/or sell copies of the Software, and to\npermit persons to whom the Software is furnished to do so, subject to\nthe following conditions:\n\nThe above copyright notice and this permission notice shall be\nincluded in all copies or substantial portions of the Software.\n\nTHE SOFTWARE IS PROVIDED \'AS IS\', WITHOUT WARRANTY OF ANY KIND,\nEXPRESS OR IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF\nMERCHANTABILITY, FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT.\nIN NO EVENT SHALL THE AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY\nCLAIM, DAMAGES OR OTHER LIABILITY, WHETHER IN AN ACTION OF CONTRACT,\nTORT OR OTHERWISE, ARISING FROM, OUT OF OR IN CONNECTION WITH THE\nSOFTWARE OR THE USE OR OTHER DEALINGS IN THE SOFTWARE.\n',
337 silly resolved     readmeFilename: 'Readme.md',
337 silly resolved     bugs: { url: 'https://github.com/visionmedia/commander.js/issues' },
337 silly resolved     homepage: 'https://github.com/visionmedia/commander.js',
337 silly resolved     _id: 'commander@2.1.0',
337 silly resolved     _from: 'commander@2.1.0' },
337 silly resolved   { name: 'constantinople',
337 silly resolved     version: '2.0.0',
337 silly resolved     description: 'Determine whether a JavaScript expression evaluates to a constant (using UglifyJS)',
337 silly resolved     keywords: [],
337 silly resolved     dependencies: { 'uglify-js': '~2.4.0' },
337 silly resolved     devDependencies: { mocha: '*' },
337 silly resolved     scripts: { test: 'mocha -R spec' },
337 silly resolved     repository:
337 silly resolved      { type: 'git',
337 silly resolved        url: 'https://github.com/ForbesLindesay/constantinople.git' },
337 silly resolved     author: { name: 'ForbesLindesay' },
337 silly resolved     license: 'MIT',
337 silly resolved     readme: '# constantinople\r\n\r\nDetermine whether a JavaScript expression evaluates to a constant (using UglifyJS).  Here it is assumed to be safe to underestimate how constant something is.\r\n\r\n[![Build Status](https://travis-ci.org/ForbesLindesay/constantinople.png?branch=master)](https://travis-ci.org/ForbesLindesay/constantinople)\r\n[![Dependency Status](https://gemnasium.com/ForbesLindesay/constantinople.png)](https://gemnasium.com/ForbesLindesay/constantinople)\r\n[![NPM version](https://badge.fury.io/js/constantinople.png)](http://badge.fury.io/js/constantinople)\r\n\r\n## Installation\r\n\r\n    npm install constantinople\r\n\r\n## Usage\r\n\r\n```js\r\nvar isConstant = require(\'constantinople\')\r\n\r\nif (isConstant(\'"foo" + 5\')) {\r\n  console.dir(isConstant.toConstant(\'"foo" + 5\'))\r\n}\r\nif (isConstant(\'Math.floor(10.5)\', {Math: Math})) {\r\n  console.dir(isConstant.toConstant(\'Math.floor(10.5)\', {Math: Math}))\r\n}\r\n```\r\n\r\n## API\r\n\r\n### isConstant(src, [constants])\r\n\r\nReturns `true` if `src` evaluates to a constant, `false` otherwise.  It will also return `false` if there is a syntax error, which makes it safe to use on potentially ES6 code.\r\n\r\nConstants is an object mapping strings to values, where those values should be treated as constants.  Note that this makes it a pretty bad idea to have `Math` in there if the user might make use of `Math.random` and a pretty bad idea to have `Date` in there.\r\n\r\n### toConstant(src, [constants])\r\n\r\nReturns the value resulting from evaluating `src`.  This method throws an error if the expression is not constant.  e.g. `toConstant("Math.random()")` would throw an error.\r\n\r\nConstants is an object mapping strings to values, where those values should be treated as constants.  Note that this makes it a pretty bad idea to have `Math` in there if the user might make use of `Math.random` and a pretty bad idea to have `Date` in there.\r\n\r\n## License\r\n\r\n  MIT',
337 silly resolved     readmeFilename: 'README.md',
337 silly resolved     bugs: { url: 'https://github.com/ForbesLindesay/constantinople/issues' },
337 silly resolved     homepage: 'https://github.com/ForbesLindesay/constantinople',
337 silly resolved     _id: 'constantinople@2.0.0',
337 silly resolved     _shasum: '0558c3f340095a43acf2386149e5537074330e49',
337 silly resolved     _from: 'constantinople@~2.0.0',
337 silly resolved     _resolved: 'https://registry.npmjs.org/constantinople/-/constantinople-2.0.0.tgz' },
337 silly resolved   { name: 'with',
337 silly resolved     version: '3.0.0',
337 silly resolved     description: 'Compile time `with` for strict mode JavaScript',
337 silly resolved     main: 'index.js',
337 silly resolved     scripts: { test: 'mocha -R spec' },
337 silly resolved     repository:
337 silly resolved      { type: 'git',
337 silly resolved        url: 'https://github.com/ForbesLindesay/with.git' },
337 silly resolved     author: { name: 'ForbesLindesay' },
337 silly resolved     license: 'MIT',
337 silly resolved     dependencies: { 'uglify-js': '~2.4.12' },
337 silly resolved     devDependencies: { mocha: '~1.12.0' },
337 silly resolved     readme: '# with\r\n\r\nCompile time `with` for strict mode JavaScript\r\n\r\n[![build status](https://secure.travis-ci.org/ForbesLindesay/with.png)](http://travis-ci.org/ForbesLindesay/with)\r\n[![Dependency Status](https://gemnasium.com/ForbesLindesay/with.png)](https://gemnasium.com/ForbesLindesay/with)\r\n[![NPM version](https://badge.fury.io/js/with.png)](http://badge.fury.io/js/with)\r\n\r\n## Installation\r\n\r\n    $ npm install with\r\n\r\n## Usage\r\n\r\n```js\r\nvar addWith = require(\'with\')\r\n\r\naddWith(\'obj\', \'console.log(a)\')\r\n// => \';(function (console, a) {\r\n//       console.log(a)\r\n//     }("console" in obj ? obj.console :\r\n//                          typeof console!=="undefined" ? console : undefined,\r\n//       "a" in obj ? obj.a :\r\n//                    typeof a !== "undefined" ? a : undefined));\'\r\n\r\naddWith(\'obj\', \'console.log(a)\', [\'console\'])\r\n// => \';(function (console, a) {\r\n//       console.log(a)\r\n//     }("a" in obj ? obj.a :\r\n//                    typeof a !== "undefined" ? a : undefined));\'\r\n```\r\n\r\n## API\r\n\r\n### addWith(obj, src[, exclude])\r\n\r\nThe idea is that this is roughly equivallent to:\r\n\r\n```js\r\nwith (obj) {\r\n  src\r\n}\r\n```\r\n\r\nThere are a few differences though.  For starters, assignments to variables will always remain contained within the with block.\r\n\r\ne.g.\r\n\r\n```js\r\nvar foo = \'foo\'\r\nwith ({}) {\r\n  foo = \'bar\'\r\n}\r\nassert(foo === \'bar\')// => This fails for compile time with but passes for native with\r\n\r\nvar obj = {foo: \'foo\'}\r\nwith ({}) {\r\n  foo = \'bar\'\r\n}\r\nassert(obj.foo === \'bar\')// => This fails for compile time with but passes for native with\r\n```\r\n\r\nIt also makes everything be declared, so you can always do:\r\n\r\n```js\r\nif (foo === undefined)\r\n```\r\n\r\ninstead of\r\n\r\n```js\r\nif (typeof foo === \'undefined\')\r\n```\r\n\r\nThis is not the case if foo is in `exclude`.  If a variable is excluded, we ignore it entirely.  This is useful if you know a variable will be global as it can lead to efficiency improvements.\r\n\r\nIt is also safe to use in strict mode (unlike `with`) and it minifies properly (`with` disables virtually all minification).\r\n\r\n## License\r\n\r\n  MIT',
337 silly resolved     readmeFilename: 'README.md',
337 silly resolved     bugs: { url: 'https://github.com/ForbesLindesay/with/issues' },
337 silly resolved     homepage: 'https://github.com/ForbesLindesay/with',
337 silly resolved     _id: 'with@3.0.0',
337 silly resolved     _shasum: '38f5d5859bb974c9dad8812372b51dae4b9594cc',
337 silly resolved     _from: 'with@~3.0.0',
337 silly resolved     _resolved: 'https://registry.npmjs.org/with/-/with-3.0.0.tgz' },
337 silly resolved   { name: 'monocle',
337 silly resolved     version: '1.1.51',
337 silly resolved     description: 'a tool for watching directories for file changes',
337 silly resolved     main: 'monocle.js',
337 silly resolved     directories: { test: 'test' },
337 silly resolved     dependencies: { readdirp: '~0.2.3' },
337 silly resolved     devDependencies: { mocha: '1.8.1' },
337 silly resolved     scripts: { test: 'mocha test -R spec -t 2000' },
337 silly resolved     repository: { type: 'git', url: 'https://github.com/samccone/monocle.git' },
337 silly resolved     bugs: { url: 'https://github.com/samccone/monocle/issues' },
337 silly resolved     keywords: [ 'watch', 'filesystem', 'folders', 'fs' ],
337 silly resolved     author: { name: 'Sam Saccone' },
337 silly resolved     license: 'BSD',
337 silly resolved     readme: '[![Build Status](https://travis-ci.org/samccone/monocle.png?branch=master)](https://travis-ci.org/samccone/monocle)\n\n# Monocle -- a tool for watching things\n\n[![logo](https://raw.github.com/samccone/monocle/master/logo.png)](https://raw.github.com/samccone/monocle/master/logo.png)\n\nHave you ever wanted to watch a folder and all of its files/nested folders for changes. well now you can!\n\n## Installation\n\n```\nnpm install monocle\n```\n\n## Usage\n\n### Watch a directory:\n\n```js\nvar monocle = require(\'monocle\')()\nmonocle.watchDirectory({\n  root: <root directory>,\n  fileFilter: <optional>,\n  directoryFilter: <optional>,\n  listener: fn(fs.stat+ object), //triggered on file change / addition\n  complete: <fn> //file watching all set up\n});\n```\n\nThe listener will recive an object with the following\n\n```js\n  name: <filename>,\n  path: <filepath-relative>,\n  fullPath: <filepath-absolute>,\n  parentDir: <parentDir-relative>,\n  fullParentDir: <parentDir-absolute>,\n  stat: <see fs.stats>\n```\n\n[fs.stats](http://nodejs.org/api/fs.html#fs_class_fs_stats)\n\nWhen a new file is added to the directoy it triggers a file change and thus will be passed to your specified listener.\n\nThe two filters are passed through to `readdirp`.  More documentation can be found [here](https://github.com/thlorenz/readdirp#filters)\n\n### Watch a list of files:\n\n```js\nMonocle.watchFiles({\n  files: [], //path of file(s)\n  listener: <fn(fs.stat+ object)>, //triggered on file / addition\n  complete: <fn> //file watching all set up\n});\n```\n\n### Just watch path\n\nJust an alias of `watchFiles` and `watchDirectory` so you don\'t need to tell if that\'s a file or a directory by yourself. Parameter passed to `path` can be a `string` or a `array` of `string`.\n\n```js\nMonocle.watchPaths({\n  path: [], //list of paths, or a string of path\n  fileFilter: <optional>, // `*.js` for example\n  listener: <fn(fs.stat+ object)>, //triggered on file / addition\n  complete: <fn> //file watching all set up\n});\n```\n\n### Force to use fs.watch\n\nYou can use the USE_FS_WATCH env variable set to true, to force this behavior regardless of platform.\n\n## Why not just use fs.watch ?\n\n  - file watching is really bad cross platforms in node\n  - you need to be smart when using fs.watch as compared to fs.watchFile\n  - Monocle takes care of this logic for you!\n  - windows systems use fs.watch\n  - osx and linux uses fs.watchFile\n\n## License\n\nBSD\n',
337 silly resolved     readmeFilename: 'README.md',
337 silly resolved     homepage: 'https://github.com/samccone/monocle',
337 silly resolved     _id: 'monocle@1.1.51',
337 silly resolved     _shasum: '22ed16e112e9b056769c5ccac920e375249d89c0',
337 silly resolved     _from: 'monocle@1.1.51',
337 silly resolved     _resolved: 'https://registry.npmjs.org/monocle/-/monocle-1.1.51.tgz' },
337 silly resolved   { name: 'character-parser',
337 silly resolved     version: '1.2.0',
337 silly resolved     description: 'Parse JavaScript one character at a time to look for snippets in Templates.  This is not a validator, it\'s just designed to allow you to have sections of JavaScript delimited by brackets robustly.',
337 silly resolved     main: 'index.js',
337 silly resolved     scripts: { test: 'mocha -R spec' },
337 silly resolved     repository:
337 silly resolved      { type: 'git',
337 silly resolved        url: 'https://github.com/ForbesLindesay/character-parser.git' },
337 silly resolved     keywords:
337 silly resolved      [ 'parser',
337 silly resolved        'JavaScript',
337 silly resolved        'bracket',
337 silly resolved        'nesting',
337 silly resolved        'comment',
337 silly resolved        'string',
337 silly resolved        'escape',
337 silly resolved        'escaping' ],
337 silly resolved     author: { name: 'ForbesLindesay' },
337 silly resolved     license: 'MIT',
337 silly resolved     devDependencies: { 'better-assert': '~1.0.0', mocha: '~1.9.0' },
337 silly resolved     readme: '# character-parser\r\n\r\nParse JavaScript one character at a time to look for snippets in Templates.  This is not a validator, it\'s just designed to allow you to have sections of JavaScript delimited by brackets robustly.\r\n\r\n[![Build Status](https://travis-ci.org/ForbesLindesay/character-parser.png?branch=master)](https://travis-ci.org/ForbesLindesay/character-parser)\r\n\r\n## Installation\r\n\r\n    npm install character-parser\r\n\r\n## Usage\r\n\r\nWork out how much depth changes:\r\n\r\n```js\r\nvar state = parse(\'foo(arg1, arg2, {\\n  foo: [a, b\\n\');\r\nassert(state.roundDepth === 1);\r\nassert(state.curlyDepth === 1);\r\nassert(state.squareDepth === 1);\r\nparse(\'    c, d]\\n  })\', state);\r\nassert(state.squareDepth === 0);\r\nassert(state.curlyDepth === 0);\r\nassert(state.roundDepth === 0);\r\n```\r\n\r\n### Bracketed Expressions\r\n\r\nFind all the contents of a bracketed expression:\r\n\r\n```js\r\nvar section = parser.parseMax(\'foo="(", bar="}") bing bong\');\r\nassert(section.start === 0);\r\nassert(section.end === 16);//exclusive end of string\r\nassert(section.src = \'foo="(", bar="}"\');\r\n\r\n\r\nvar section = parser.parseMax(\'{foo="(", bar="}"} bing bong\', {start: 1});\r\nassert(section.start === 1);\r\nassert(section.end === 17);//exclusive end of string\r\nassert(section.src = \'foo="(", bar="}"\');\r\n```\r\n\r\nThe bracketed expression parsing simply parses up to but excluding the first unmatched closed bracket (`)`, `}`, `]`).  It is clever enough to ignore brackets in comments or strings.\r\n\r\n\r\n### Custom Delimited Expressions\r\n\r\nFind code up to a custom delimiter:\r\n\r\n```js\r\nvar section = parser.parseUntil(\'foo.bar("%>").baz%> bing bong\', \'%>\');\r\nassert(section.start === 0);\r\nassert(section.end === 17);//exclusive end of string\r\nassert(section.src = \'foo.bar("%>").baz\');\r\n\r\nvar section = parser.parseUntil(\'<%foo.bar("%>").baz%> bing bong\', \'%>\', {start: 2});\r\nassert(section.start === 2);\r\nassert(section.end === 19);//exclusive end of string\r\nassert(section.src = \'foo.bar("%>").baz\');\r\n```\r\n\r\nDelimiters are ignored if they are inside strings or comments.\r\n\r\n## API\r\n\r\n### parse(str, state = defaultState(), options = {start: 0, end: src.length})\r\n\r\nParse a string starting at the index start, and return the state after parsing that string.\r\n\r\nIf you want to parse one string in multiple sections you should keep passing the resulting state to the next parse operation.\r\n\r\nReturns a `State` object.\r\n\r\n### parseMax(src, options = {start: 0})\r\n\r\nParses the source until the first unmatched close bracket (any of `)`, `}`, `]`).  It returns an object with the structure:\r\n\r\n```js\r\n{\r\n  start: 0,//index of first character of string\r\n  end: 13,//index of first character after the end of string\r\n  src: \'source string\'\r\n}\r\n```\r\n\r\n### parseUntil(src, delimiter, options = {start: 0, includeLineComment: false})\r\n\r\nParses the source until the first occurence of `delimiter` which is not in a string or a comment.  If `includeLineComment` is `true`, it will still count if the delimiter occurs in a line comment, but not in a block comment.  It returns an object with the structure:\r\n\r\n```js\r\n{\r\n  start: 0,//index of first character of string\r\n  end: 13,//index of first character after the end of string\r\n  src: \'source string\'\r\n}\r\n```\r\n\r\n### parseChar(character, state = defaultState())\r\n\r\nParses the single character and returns the state.  See `parse` for the structure of the returned state object.  N.B. character must be a single character not a multi character string.\r\n\r\n### defaultState()\r\n\r\nGet a default starting state.\r\n\r\n### isPunctuator(character)\r\n\r\nReturns `true` if `character` represents punctuation in JavaScript.\r\n\r\n### isKeyword(name)\r\n\r\nReturns `true` if `name` is a keyword in JavaScript.\r\n\r\n## State\r\n\r\nA state is an object with the following structure\r\n\r\n```js\r\n{\r\n  lineComment: false, //true if inside a line comment\r\n  blockComment: false, //true if inside a block comment\r\n\r\n  singleQuote: false, //true if inside a single quoted string\r\n  doubleQuote: false, //true if inside a double quoted string\r\n  regexp:      false, //true if inside a regular expression\r\n  escaped: false, //true if in a string and the last character was an escape character\r\n\r\n  roundDepth: 0, //number of un-closed open `(` brackets\r\n  curlyDepth: 0, //number of un-closed open `{` brackets\r\n  squareDepth: 0 //number of un-closed open `[` brackets\r\n}\r\n```\r\n\r\nIt also has the following useful methods:\r\n\r\n- `.isString()` returns `true` if the current location is inside a string.\r\n- `.isComment()` returns `true` if the current location is inside a comment.\r\n- `isNesting()` returns `true` if the current location is anything but at the top level, i.e. with no nesting.\r\n\r\n## License\r\n\r\nMIT',
337 silly resolved     readmeFilename: 'README.md',
337 silly resolved     bugs: { url: 'https://github.com/ForbesLindesay/character-parser/issues' },
337 silly resolved     homepage: 'https://github.com/ForbesLindesay/character-parser',
337 silly resolved     _id: 'character-parser@1.2.0',
337 silly resolved     _shasum: '94134d6e5d870a39be359f7d22460935184ddef6',
337 silly resolved     _from: 'character-parser@1.2.0',
337 silly resolved     _resolved: 'https://registry.npmjs.org/character-parser/-/character-parser-1.2.0.tgz' },
337 silly resolved   { name: 'transformers',
337 silly resolved     version: '2.1.0',
337 silly resolved     description: 'String/Data transformations for use in templating libraries, static site generators and web frameworks',
337 silly resolved     main: 'lib/transformers.js',
337 silly resolved     scripts:
337 silly resolved      { pretest: 'node test/update-package && npm install',
337 silly resolved        test: 'mocha test/test.js -R spec' },
337 silly resolved     repository:
337 silly resolved      { type: 'git',
337 silly resolved        url: 'https://github.com/ForbesLindesay/transformers.git' },
337 silly resolved     author: { name: 'ForbesLindesay' },
337 silly resolved     license: 'MIT',
337 silly resolved     readmeFilename: 'README.md',
337 silly resolved     gitHead: '4b46e72cba3ad3403fd5ed3802d5472dcfa77311',
337 silly resolved     devDependencies:
337 silly resolved      { mocha: '~1.8',
337 silly resolved        'expect.js': '~0.2',
337 silly resolved        swig: '*',
337 silly resolved        atpl: '*',
337 silly resolved        liquor: '*',
337 silly resolved        ejs: '*',
337 silly resolved        eco: '*',
337 silly resolved        jqtpl: '*',
337 silly resolved        hamljs: '*',
337 silly resolved        'haml-coffee': '*',
337 silly resolved        whiskers: '*',
337 silly resolved        'hogan.js': '*',
337 silly resolved        handlebars: '*',
337 silly resolved        underscore: '*',
337 silly resolved        walrus: '*',
337 silly resolved        mustache: '*',
337 silly resolved        mote: '*',
337 silly resolved        toffee: '*',
337 silly resolved        just: '*',
337 silly resolved        ect: '*',
337 silly resolved        jade: '*',
337 silly resolved        'then-jade': '*',
337 silly resolved        dust: '*',
337 silly resolved        'dustjs-linkedin': '*',
337 silly resolved        jazz: '*',
337 silly resolved        qejs: '*',
337 silly resolved        less: '*',
337 silly resolved        stylus: '*',
337 silly resolved        sass: '*',
337 silly resolved        marked: '*',
337 silly resolved        supermarked: '*',
337 silly resolved        'markdown-js': '*',
337 silly resolved        markdown: '*',
337 silly resolved        'coffee-script': '*',
337 silly resolved        cson: '*',
337 silly resolved        coffeekup: '*',
337 silly resolved        coffeecup: '*',
337 silly resolved        templayed: '*',
337 silly resolved        plates: '*',
337 silly resolved        dot: '*',
337 silly resolved        'component-builder': '*',
337 silly resolved        html2jade: '*',
337 silly resolved        'highlight.js': '*' },
337 silly resolved     dependencies: { promise: '~2.0', css: '~1.0.8', 'uglify-js': '~2.2.5' },
337 silly resolved     readme: '[![Build Status](https://travis-ci.org/ForbesLindesay/transformers.png?branch=master)](https://travis-ci.org/ForbesLindesay/transformers)\r\n# transformers\r\n\r\n  String/Data transformations for use in templating libraries, static site generators and web frameworks.  This gathers the most useful transformations you can apply to text or data into one library with a consistent API.  Transformations can be pretty much anything but most are either compilers or templating engines.\r\n\r\n## Supported transforms\r\n\r\n  To use each of these transforms you will also need to install the associated npm module for that transformer.\r\n\r\n### Template engines\r\n\r\n  - [atpl](http://documentup.com/soywiz/atpl.js) - Compatible with twig templates\r\n  - [coffeecup](http://documentup.com/gradus/coffeecup) - pure coffee-script templates (fork of coffeekup)\r\n  - [dot](http://documentup.com/olado/doT) [(website)](https://github.com/Katahdin/dot-packer) - focused on speed\r\n  - [dust](http://documentup.com/akdubya/dustjs) [(website)](http://akdubya.github.com/dustjs/) - asyncronous templates\r\n  - [eco](http://documentup.com/sstephenson/eco) - Embedded CoffeeScript templates\r\n  - [ect](http://documentup.com/baryshev/ect) [(website)](http://ectjs.com/) - Embedded CoffeeScript templates\r\n  - [ejs](http://documentup.com/visionmedia/ejs) - Embedded JavaScript templates\r\n  - [haml](http://documentup.com/visionmedia/haml.js) [(website)](http://haml-lang.com/) - dry indented markup\r\n  - [haml-coffee](http://documentup.com/netzpirat/haml-coffee/) [(website)](http://haml-lang.com/) - haml with embedded CoffeeScript\r\n  - [handlebars](http://documentup.com/wycats/handlebars.js/) [(website)](http://handlebarsjs.com/) - extension of mustache templates\r\n  - [hogan](http://documentup.com/twitter/hogan.js) [(website)](http://twitter.github.com/hogan.js/) - Mustache templates\r\n  - [jade](http://documentup.com/visionmedia/jade) [(website)](http://jade-lang.com/) - robust, elegant, feature rich template engine\r\n  - [jazz](http://documentup.com/shinetech/jazz)\r\n  - [jqtpl](http://documentup.com/kof/jqtpl) [(website)](http://api.jquery.com/category/plugins/templates/) - extensible logic-less templates\r\n  - [JUST](http://documentup.com/baryshev/just) - EJS style template with some special syntax for layouts/partials etc.\r\n  - [liquor](http://documentup.com/chjj/liquor) - extended EJS with significant white space\r\n  - [mustache](http://documentup.com/janl/mustache.js) - logic less templates\r\n  - [QEJS](http://documentup.com/jepso/QEJS) - Promises + EJS for async templating\r\n  - [swig](http://documentup.com/paularmstrong/swig) [(website)](http://paularmstrong.github.com/swig/) - Django-like templating engine\r\n  - [templayed](http://documentup.com/archan937/templayed.js/) [(website)](http://archan937.github.com/templayed.js/) - Mustache focused on performance\r\n  - [toffee](http://documentup.com/malgorithms/toffee) - templating language based on coffeescript\r\n  - [underscore](http://documentup.com/documentcloud/underscore) [(website)](http://documentcloud.github.com/underscore/)\r\n  - [walrus](http://documentup.com/jeremyruppel/walrus) - A bolder kind of mustache\r\n  - [whiskers](http://documentup.com/gsf/whiskers.js/tree/) - logic-less focused on readability\r\n\r\n### Stylesheet Languages\r\n\r\n  - [less](http://documentup.com/cloudhead/less.js) [(website)](http://lesscss.org/) - LESS extends CSS with dynamic behavior such as variables, mixins, operations and functions.\r\n  - [stylus](http://documentup.com/learnboost/stylus) [(website)](http://learnboost.github.com/stylus/) - revolutionary CSS generator making braces optional\r\n  - [sass](http://documentup.com/visionmedia/sass.js) [(website)](http://sass-lang.com/) - Sassy CSS\r\n\r\n### Minifiers\r\n\r\n  - [uglify-js](http://documentup.com/mishoo/UglifyJS2) - No need to install anything, just minifies/beautifies JavaScript\r\n  - [uglify-css](https://github.com/visionmedia/css) - No need to install anything, just minifies/beautifies CSS\r\n  - ugilify-json - No need to install anything, just minifies/beautifies JSON\r\n\r\n### Other\r\n\r\n  - cdata - No need to install anything, just wraps input as `<![CDATA[${INPUT_STRING]]>` with the standard escape for `]]>` (`]]]]><![CDATA[>`).\r\n  - cdata-js - as `cdata`, but with surrounding comments suitable for inclusion into a HTML/JavaScript `<script>` block: `//<![CDATA[\\n${INPUT_STRING\\n//]]>`.\r\n  - cdata-css - as `cdata`, but with surrounding comments suitable for inclusion into a HTML/CSS `<style>` block: `/*<![CDATA[*/\\n${INPUT_STRING\\n/*]]>*/`.\r\n  - verbatim - No need to install anything, acts as a verbatim passthrough `${INPUT_STRING}`\r\n  - [coffee-script](http://coffeescript.org/) - `npm install coffee-script`\r\n  - [cson](https://github.com/bevry/cson) - coffee-script based JSON format\r\n  - markdown - You can use `marked`, `supermarked`, `markdown-js` or `markdown`\r\n  - [component-js](http://documentup.com/component/component) [(website)](http://component.io) - `npm install component-builder` options: `{development: false}`\r\n  - [component-css](http://documentup.com/component/component) [(website)](http://component.io) - `npm install component-builder` options: `{development: false}`\r\n  - [html2jade](http://documentup.com/donpark/html2jade) [(website)](http://html2jade.aaron-powell.com/) - `npm install html2jade` - Converts HTML back into jade\r\n\r\nPull requests to add more transforms will always be accepted providing they are open-source, come with unit tests, and don\'t cause any of the tests to fail.\r\n\r\n## API\r\n\r\n  The exported object `transformers` is a collection of named transformers.  To access an individual transformer just do:\r\n\r\n  ```javascript\r\n  var transformer = require(\'transformers\')[\'transformer-name\']\r\n  ```\r\n\r\n### Transformer\r\n\r\n  The following options are given special meaning by `transformers`:\r\n\r\n   - `filename` is set by transformers automatically if using the `renderFile` APIs.  It is used if `cache` is enabled.\r\n   - `cache` if true, the template function will be cached where possible (templates are still updated if you provide new options, so this can be used in most live applications).\r\n   - `sudoSync` used internally to put some asyncronous transformers into "sudo syncronous" mode.  Don\'t touch this.\r\n   - `minify` if set to true on a transformer that isn\'t a minifier, it will cause the output to be minified.  e.g. `coffeeScript.renderSync(str, {minify: true})` will result in minified JavaScript.\r\n\r\n#### Transformer.engines\r\n\r\n  Returns an array of engines that can be used to power this transformer.  The first of these that\'s installed will be used for the transformation.\r\n\r\n  To enable a transformation just take `[engine] = Transformer.engines[0]` and then do `npm install [engine]`.  If `[engine]` is `.` there is no need to install an engine from npm to use the transformer.\r\n\r\n#### Transformer.render(str, options, cb)\r\n\r\n  Tranform the string `str` using the `Transformer` with the provided options and call the callback `cb(err, res)`.\r\n\r\n  If no `cb` is provided, this method returns a [promises/A+](http://promises-aplus.github.com/promises-spec/) promise.\r\n\r\n#### Transformer.renderSync(str, options)\r\n\r\n  Synchronous version of `Transformer.render`\r\n\r\n#### Transformer.renderFile(filename, options, cb)\r\n\r\n  Reads the file at filename into `str` and sets `options.filename = filename` then calls `Transform.render(str, options, cb)`.\r\n\r\n  If no `cb` is provided, this method returns a [promises/A+](http://promises-aplus.github.com/promises-spec/) promise.\r\n\r\n#### Tranformer.renderFileSync(filename, options)\r\n\r\n  Synchronous version of `Tranformer.renderFile`\r\n\r\n#### Transformer.outputFormat\r\n\r\n  A string, one of:\r\n\r\n   - `\'xml\'`\r\n   - `\'css\'`\r\n   - `\'js\'`\r\n   - `\'json\'`\r\n   - `\'text\'`\r\n\r\nAdding to this list will **not** result in a major version change, so you should handle unexpected types gracefully (I\'d suggest default to assuming `\'text\'`).\r\n\r\n#### Transformer.sync\r\n\r\n  `true` if the transformer can be used syncronously, `false` otherwise.\r\n\r\n## Libraries that don\'t work synchronously\r\n\r\n  The following transformations will always throw an exception if you attempt to run them synchronously:\r\n\r\n   1. dust\r\n   2. qejs\r\n   3. html2jade\r\n\r\nThe following transformations sometimes throw an exception if run syncronously, typically they only throw an exception if you are doing something like including another file.  If you are not doing the things that cause them to fail then they are consistently safe to use syncronously.\r\n\r\n   - jade (only when using `then-jade` instead of `jade`)\r\n   - less (when `@import` is used with a url instead of a filename)\r\n   - jazz (When one of the functions passed as locals is asyncronous)\r\n\r\nThe following libraries look like they might sometimes throw exceptions when used syncronously (if you read the source) but they never actually do so:\r\n\r\n   - just\r\n   - ect\r\n   - stylus',
337 silly resolved     bugs: { url: 'https://github.com/ForbesLindesay/transformers/issues' },
337 silly resolved     homepage: 'https://github.com/ForbesLindesay/transformers',
337 silly resolved     _id: 'transformers@2.1.0',
337 silly resolved     _shasum: '5d23cb35561dd85dc67fb8482309b47d53cce9a7',
337 silly resolved     _from: 'transformers@2.1.0',
337 silly resolved     _resolved: 'https://registry.npmjs.org/transformers/-/transformers-2.1.0.tgz' } ]
338 info install mkdirp@0.3.5 into /usr/local/lib/node_modules/jade
339 info install commander@2.1.0 into /usr/local/lib/node_modules/jade
340 info install constantinople@2.0.0 into /usr/local/lib/node_modules/jade
341 info install with@3.0.0 into /usr/local/lib/node_modules/jade
342 info install monocle@1.1.51 into /usr/local/lib/node_modules/jade
343 info install character-parser@1.2.0 into /usr/local/lib/node_modules/jade
344 info install transformers@2.1.0 into /usr/local/lib/node_modules/jade
345 info installOne mkdirp@0.3.5
346 info installOne commander@2.1.0
347 info installOne constantinople@2.0.0
348 info installOne with@3.0.0
349 info installOne monocle@1.1.51
350 info installOne character-parser@1.2.0
351 info installOne transformers@2.1.0
352 info /usr/local/lib/node_modules/jade/node_modules/mkdirp unbuild
353 info /usr/local/lib/node_modules/jade/node_modules/commander unbuild
354 info /usr/local/lib/node_modules/jade/node_modules/constantinople unbuild
355 info /usr/local/lib/node_modules/jade/node_modules/with unbuild
356 info /usr/local/lib/node_modules/jade/node_modules/monocle unbuild
357 info /usr/local/lib/node_modules/jade/node_modules/character-parser unbuild
358 info /usr/local/lib/node_modules/jade/node_modules/transformers unbuild
359 verbose tar unpack /Users/marc.bluemner/.npm/mkdirp/0.3.5/package.tgz
360 silly lockFile 1f7bcf80-modules-jade-node-modules-mkdirp tar:///usr/local/lib/node_modules/jade/node_modules/mkdirp
361 verbose lock tar:///usr/local/lib/node_modules/jade/node_modules/mkdirp /Users/marc.bluemner/.npm/1f7bcf80-modules-jade-node-modules-mkdirp.lock
362 silly lockFile f3263d5d-ner-npm-mkdirp-0-3-5-package-tgz tar:///Users/marc.bluemner/.npm/mkdirp/0.3.5/package.tgz
363 verbose lock tar:///Users/marc.bluemner/.npm/mkdirp/0.3.5/package.tgz /Users/marc.bluemner/.npm/f3263d5d-ner-npm-mkdirp-0-3-5-package-tgz.lock
364 verbose tar unpack /Users/marc.bluemner/.npm/commander/2.1.0/package.tgz
365 silly lockFile 40c78323-ules-jade-node-modules-commander tar:///usr/local/lib/node_modules/jade/node_modules/commander
366 verbose lock tar:///usr/local/lib/node_modules/jade/node_modules/commander /Users/marc.bluemner/.npm/40c78323-ules-jade-node-modules-commander.lock
367 silly lockFile 907486f7--npm-commander-2-1-0-package-tgz tar:///Users/marc.bluemner/.npm/commander/2.1.0/package.tgz
368 verbose lock tar:///Users/marc.bluemner/.npm/commander/2.1.0/package.tgz /Users/marc.bluemner/.npm/907486f7--npm-commander-2-1-0-package-tgz.lock
369 verbose tar unpack /Users/marc.bluemner/.npm/constantinople/2.0.0/package.tgz
370 silly lockFile 9dd8c57d-jade-node-modules-constantinople tar:///usr/local/lib/node_modules/jade/node_modules/constantinople
371 verbose lock tar:///usr/local/lib/node_modules/jade/node_modules/constantinople /Users/marc.bluemner/.npm/9dd8c57d-jade-node-modules-constantinople.lock
372 silly lockFile c95495f4-constantinople-2-0-0-package-tgz tar:///Users/marc.bluemner/.npm/constantinople/2.0.0/package.tgz
373 verbose lock tar:///Users/marc.bluemner/.npm/constantinople/2.0.0/package.tgz /Users/marc.bluemner/.npm/c95495f4-constantinople-2-0-0-package-tgz.lock
374 verbose tar unpack /Users/marc.bluemner/.npm/with/3.0.0/package.tgz
375 silly lockFile 3469eae3-e-modules-jade-node-modules-with tar:///usr/local/lib/node_modules/jade/node_modules/with
376 verbose lock tar:///usr/local/lib/node_modules/jade/node_modules/with /Users/marc.bluemner/.npm/3469eae3-e-modules-jade-node-modules-with.lock
377 silly lockFile 9ab82dec-emner-npm-with-3-0-0-package-tgz tar:///Users/marc.bluemner/.npm/with/3.0.0/package.tgz
378 verbose lock tar:///Users/marc.bluemner/.npm/with/3.0.0/package.tgz /Users/marc.bluemner/.npm/9ab82dec-emner-npm-with-3-0-0-package-tgz.lock
379 verbose tar unpack /Users/marc.bluemner/.npm/monocle/1.1.51/package.tgz
380 silly lockFile e7b1f5cf-odules-jade-node-modules-monocle tar:///usr/local/lib/node_modules/jade/node_modules/monocle
381 verbose lock tar:///usr/local/lib/node_modules/jade/node_modules/monocle /Users/marc.bluemner/.npm/e7b1f5cf-odules-jade-node-modules-monocle.lock
382 silly lockFile dff21f7e-r-npm-monocle-1-1-51-package-tgz tar:///Users/marc.bluemner/.npm/monocle/1.1.51/package.tgz
383 verbose lock tar:///Users/marc.bluemner/.npm/monocle/1.1.51/package.tgz /Users/marc.bluemner/.npm/dff21f7e-r-npm-monocle-1-1-51-package-tgz.lock
384 verbose tar unpack /Users/marc.bluemner/.npm/character-parser/1.2.0/package.tgz
385 silly lockFile 6d46453f-de-node-modules-character-parser tar:///usr/local/lib/node_modules/jade/node_modules/character-parser
386 verbose lock tar:///usr/local/lib/node_modules/jade/node_modules/character-parser /Users/marc.bluemner/.npm/6d46453f-de-node-modules-character-parser.lock
387 silly lockFile 0d651421-aracter-parser-1-2-0-package-tgz tar:///Users/marc.bluemner/.npm/character-parser/1.2.0/package.tgz
388 verbose lock tar:///Users/marc.bluemner/.npm/character-parser/1.2.0/package.tgz /Users/marc.bluemner/.npm/0d651421-aracter-parser-1-2-0-package-tgz.lock
389 verbose tar unpack /Users/marc.bluemner/.npm/transformers/2.1.0/package.tgz
390 silly lockFile 7b5d21dd-s-jade-node-modules-transformers tar:///usr/local/lib/node_modules/jade/node_modules/transformers
391 verbose lock tar:///usr/local/lib/node_modules/jade/node_modules/transformers /Users/marc.bluemner/.npm/7b5d21dd-s-jade-node-modules-transformers.lock
392 silly lockFile 677bc25d-m-transformers-2-1-0-package-tgz tar:///Users/marc.bluemner/.npm/transformers/2.1.0/package.tgz
393 verbose lock tar:///Users/marc.bluemner/.npm/transformers/2.1.0/package.tgz /Users/marc.bluemner/.npm/677bc25d-m-transformers-2-1-0-package-tgz.lock
394 silly gunzTarPerm modes [ '755', '644' ]
395 silly gunzTarPerm modes [ '755', '644' ]
396 silly gunzTarPerm modes [ '755', '644' ]
397 silly gunzTarPerm modes [ '755', '644' ]
398 silly gunzTarPerm modes [ '755', '644' ]
399 silly gunzTarPerm modes [ '755', '644' ]
400 silly gunzTarPerm modes [ '755', '644' ]
401 silly gunzTarPerm extractEntry package.json
402 silly gunzTarPerm extractEntry package.json
403 silly gunzTarPerm extractEntry package.json
404 silly gunzTarPerm modified mode [ 'package.json', 438, 420 ]
405 silly gunzTarPerm extractEntry package.json
406 silly gunzTarPerm modified mode [ 'package.json', 438, 420 ]
407 silly gunzTarPerm extractEntry .npmignore
408 silly gunzTarPerm extractEntry LICENSE
409 silly gunzTarPerm extractEntry .npmignore
410 silly gunzTarPerm extractEntry README.md
411 silly gunzTarPerm extractEntry .npmignore
412 silly gunzTarPerm modified mode [ '.npmignore', 438, 420 ]
413 silly gunzTarPerm extractEntry README.md
414 silly gunzTarPerm modified mode [ 'README.md', 438, 420 ]
415 silly gunzTarPerm extractEntry .npmignore
416 silly gunzTarPerm modified mode [ '.npmignore', 438, 420 ]
417 silly gunzTarPerm extractEntry README.md
418 silly gunzTarPerm modified mode [ 'README.md', 438, 420 ]
419 silly gunzTarPerm extractEntry index.js
420 silly gunzTarPerm extractEntry .travis.yml
421 silly gunzTarPerm extractEntry LICENSE
422 silly gunzTarPerm extractEntry monocle.js
423 silly gunzTarPerm extractEntry LICENSE
424 silly gunzTarPerm modified mode [ 'LICENSE', 438, 420 ]
425 silly gunzTarPerm extractEntry index.js
426 silly gunzTarPerm modified mode [ 'index.js', 438, 420 ]
427 silly gunzTarPerm extractEntry history.md
428 silly gunzTarPerm modified mode [ 'history.md', 438, 420 ]
429 silly gunzTarPerm extractEntry lib/shared.js
430 silly gunzTarPerm modified mode [ 'lib/shared.js', 438, 420 ]
431 silly gunzTarPerm extractEntry examples/pow.js
432 silly gunzTarPerm extractEntry lib/transformers.js
433 silly gunzTarPerm modified mode [ 'lib/transformers.js', 438, 420 ]
434 silly gunzTarPerm extractEntry readme.markdown
435 silly gunzTarPerm extractEntry test/chmod.js
436 silly gunzTarPerm extractEntry test/perm.js
437 silly gunzTarPerm extractEntry test/perm_sync.js
438 silly gunzTarPerm extractEntry test/race.js
439 silly gunzTarPerm extractEntry test/mkdirp.js
440 silly gunzTarPerm extractEntry test/return.js
441 silly gunzTarPerm extractEntry test/return_sync.js
442 silly gunzTarPerm extractEntry package.json
443 silly gunzTarPerm extractEntry test/root.js
444 silly gunzTarPerm extractEntry test/sync.js
445 silly gunzTarPerm extractEntry index.js
446 silly gunzTarPerm extractEntry Readme.md
447 silly gunzTarPerm extractEntry package.json
448 silly gunzTarPerm modified mode [ 'package.json', 438, 420 ]
449 silly gunzTarPerm extractEntry package.json
450 silly gunzTarPerm modified mode [ 'package.json', 438, 420 ]
451 silly gunzTarPerm extractEntry .npmignore
452 silly gunzTarPerm modified mode [ '.npmignore', 438, 420 ]
453 silly gunzTarPerm extractEntry README.md
454 silly gunzTarPerm modified mode [ 'README.md', 438, 420 ]
455 silly gunzTarPerm extractEntry test/umask.js
456 silly gunzTarPerm extractEntry test/clobber.js
457 silly gunzTarPerm extractEntry .npmignore
458 silly gunzTarPerm modified mode [ '.npmignore', 438, 420 ]
459 silly gunzTarPerm extractEntry README.md
460 silly gunzTarPerm modified mode [ 'README.md', 438, 420 ]
461 silly gunzTarPerm extractEntry LICENSE
462 silly gunzTarPerm modified mode [ 'LICENSE', 438, 420 ]
463 silly gunzTarPerm extractEntry index.js
464 silly gunzTarPerm modified mode [ 'index.js', 438, 420 ]
465 silly gunzTarPerm extractEntry test/umask_sync.js
466 silly gunzTarPerm extractEntry test/rel.js
467 silly gunzTarPerm extractEntry LICENSE
468 silly gunzTarPerm modified mode [ 'LICENSE', 438, 420 ]
469 silly gunzTarPerm extractEntry index.js
470 silly gunzTarPerm modified mode [ 'index.js', 438, 420 ]
471 silly lockFile e7b1f5cf-odules-jade-node-modules-monocle tar:///usr/local/lib/node_modules/jade/node_modules/monocle
472 silly lockFile e7b1f5cf-odules-jade-node-modules-monocle tar:///usr/local/lib/node_modules/jade/node_modules/monocle
473 silly lockFile 6d46453f-de-node-modules-character-parser tar:///usr/local/lib/node_modules/jade/node_modules/character-parser
474 silly lockFile 6d46453f-de-node-modules-character-parser tar:///usr/local/lib/node_modules/jade/node_modules/character-parser
475 silly gunzTarPerm extractEntry .gitattributes
476 silly gunzTarPerm modified mode [ '.gitattributes', 438, 420 ]
477 silly gunzTarPerm extractEntry .travis.yml
478 silly gunzTarPerm modified mode [ '.travis.yml', 438, 420 ]
479 silly lockFile 0d651421-aracter-parser-1-2-0-package-tgz tar:///Users/marc.bluemner/.npm/character-parser/1.2.0/package.tgz
480 silly lockFile 0d651421-aracter-parser-1-2-0-package-tgz tar:///Users/marc.bluemner/.npm/character-parser/1.2.0/package.tgz
481 silly lockFile dff21f7e-r-npm-monocle-1-1-51-package-tgz tar:///Users/marc.bluemner/.npm/monocle/1.1.51/package.tgz
482 silly lockFile dff21f7e-r-npm-monocle-1-1-51-package-tgz tar:///Users/marc.bluemner/.npm/monocle/1.1.51/package.tgz
483 silly gunzTarPerm extractEntry vars.js
484 silly gunzTarPerm modified mode [ 'vars.js', 438, 420 ]
485 info preinstall monocle@1.1.51
486 info preinstall character-parser@1.2.0
487 verbose readDependencies using package.json deps
488 verbose readDependencies using package.json deps
489 verbose readDependencies using package.json deps
490 verbose readDependencies using package.json deps
491 silly resolved []
492 verbose about to build /usr/local/lib/node_modules/jade/node_modules/character-parser
493 info build /usr/local/lib/node_modules/jade/node_modules/character-parser
494 verbose linkStuff [ true,
494 verbose linkStuff   '/usr/local/lib/node_modules',
494 verbose linkStuff   false,
494 verbose linkStuff   '/usr/local/lib/node_modules/jade/node_modules' ]
495 info linkStuff character-parser@1.2.0
496 silly gunzTarPerm extractEntry test/index.js
497 silly gunzTarPerm modified mode [ 'test/index.js', 438, 420 ]
498 verbose cache add [ 'readdirp@~0.2.3', null ]
499 verbose cache add name=undefined spec="readdirp@~0.2.3" args=["readdirp@~0.2.3",null]
500 verbose parsed url { protocol: null,
500 verbose parsed url   slashes: null,
500 verbose parsed url   auth: null,
500 verbose parsed url   host: null,
500 verbose parsed url   port: null,
500 verbose parsed url   hostname: null,
500 verbose parsed url   hash: null,
500 verbose parsed url   search: null,
500 verbose parsed url   query: null,
500 verbose parsed url   pathname: 'readdirp@~0.2.3',
500 verbose parsed url   path: 'readdirp@~0.2.3',
500 verbose parsed url   href: 'readdirp@~0.2.3' }
501 verbose cache add name="readdirp" spec="~0.2.3" args=["readdirp","~0.2.3"]
502 verbose parsed url { protocol: null,
502 verbose parsed url   slashes: null,
502 verbose parsed url   auth: null,
502 verbose parsed url   host: null,
502 verbose parsed url   port: null,
502 verbose parsed url   hostname: null,
502 verbose parsed url   hash: null,
502 verbose parsed url   search: null,
502 verbose parsed url   query: null,
502 verbose parsed url   pathname: '~0.2.3',
502 verbose parsed url   path: '~0.2.3',
502 verbose parsed url   href: '~0.2.3' }
503 verbose addNamed [ 'readdirp', '~0.2.3' ]
504 verbose addNamed [ null, '>=0.2.3-0 <0.3.0-0' ]
505 silly lockFile 04c42a12-readdirp-0-2-3 readdirp@~0.2.3
506 verbose lock readdirp@~0.2.3 /Users/marc.bluemner/.npm/04c42a12-readdirp-0-2-3.lock
507 silly addNameRange { name: 'readdirp', range: '>=0.2.3-0 <0.3.0-0', hasData: false }
508 verbose linkBins character-parser@1.2.0
509 verbose linkMans character-parser@1.2.0
510 verbose rebuildBundles character-parser@1.2.0
511 info install character-parser@1.2.0
512 info postinstall character-parser@1.2.0
513 silly lockFile 7b5d21dd-s-jade-node-modules-transformers tar:///usr/local/lib/node_modules/jade/node_modules/transformers
514 silly lockFile 7b5d21dd-s-jade-node-modules-transformers tar:///usr/local/lib/node_modules/jade/node_modules/transformers
515 silly lockFile 677bc25d-m-transformers-2-1-0-package-tgz tar:///Users/marc.bluemner/.npm/transformers/2.1.0/package.tgz
516 silly lockFile 677bc25d-m-transformers-2-1-0-package-tgz tar:///Users/marc.bluemner/.npm/transformers/2.1.0/package.tgz
517 verbose url raw readdirp
518 verbose url resolving [ 'https://registry.npmjs.org/', './readdirp' ]
519 verbose url resolved https://registry.npmjs.org/readdirp
520 info trying registry request attempt 1 at 19:03:59
521 verbose etag "90B0OAQA0JOY6WUQ3LQ9VL6PM"
522 http GET https://registry.npmjs.org/readdirp
523 info preinstall transformers@2.1.0
524 verbose readDependencies using package.json deps
525 verbose readDependencies using package.json deps
526 verbose cache add [ 'promise@~2.0', null ]
527 verbose cache add name=undefined spec="promise@~2.0" args=["promise@~2.0",null]
528 verbose parsed url { protocol: null,
528 verbose parsed url   slashes: null,
528 verbose parsed url   auth: null,
528 verbose parsed url   host: null,
528 verbose parsed url   port: null,
528 verbose parsed url   hostname: null,
528 verbose parsed url   hash: null,
528 verbose parsed url   search: null,
528 verbose parsed url   query: null,
528 verbose parsed url   pathname: 'promise@~2.0',
528 verbose parsed url   path: 'promise@~2.0',
528 verbose parsed url   href: 'promise@~2.0' }
529 verbose cache add name="promise" spec="~2.0" args=["promise","~2.0"]
530 verbose parsed url { protocol: null,
530 verbose parsed url   slashes: null,
530 verbose parsed url   auth: null,
530 verbose parsed url   host: null,
530 verbose parsed url   port: null,
530 verbose parsed url   hostname: null,
530 verbose parsed url   hash: null,
530 verbose parsed url   search: null,
530 verbose parsed url   query: null,
530 verbose parsed url   pathname: '~2.0',
530 verbose parsed url   path: '~2.0',
530 verbose parsed url   href: '~2.0' }
531 verbose addNamed [ 'promise', '~2.0' ]
532 verbose addNamed [ null, '>=2.0.0-0 <2.1.0-0' ]
533 silly lockFile 93701466-promise-2-0 promise@~2.0
534 verbose lock promise@~2.0 /Users/marc.bluemner/.npm/93701466-promise-2-0.lock
535 verbose cache add [ 'css@~1.0.8', null ]
536 verbose cache add name=undefined spec="css@~1.0.8" args=["css@~1.0.8",null]
537 verbose parsed url { protocol: null,
537 verbose parsed url   slashes: null,
537 verbose parsed url   auth: null,
537 verbose parsed url   host: null,
537 verbose parsed url   port: null,
537 verbose parsed url   hostname: null,
537 verbose parsed url   hash: null,
537 verbose parsed url   search: null,
537 verbose parsed url   query: null,
537 verbose parsed url   pathname: 'css@~1.0.8',
537 verbose parsed url   path: 'css@~1.0.8',
537 verbose parsed url   href: 'css@~1.0.8' }
538 verbose cache add name="css" spec="~1.0.8" args=["css","~1.0.8"]
539 verbose parsed url { protocol: null,
539 verbose parsed url   slashes: null,
539 verbose parsed url   auth: null,
539 verbose parsed url   host: null,
539 verbose parsed url   port: null,
539 verbose parsed url   hostname: null,
539 verbose parsed url   hash: null,
539 verbose parsed url   search: null,
539 verbose parsed url   query: null,
539 verbose parsed url   pathname: '~1.0.8',
539 verbose parsed url   path: '~1.0.8',
539 verbose parsed url   href: '~1.0.8' }
540 verbose addNamed [ 'css', '~1.0.8' ]
541 verbose addNamed [ null, '>=1.0.8-0 <1.1.0-0' ]
542 silly lockFile 6b217e40-css-1-0-8 css@~1.0.8
543 verbose lock css@~1.0.8 /Users/marc.bluemner/.npm/6b217e40-css-1-0-8.lock
544 verbose cache add [ 'uglify-js@~2.2.5', null ]
545 verbose cache add name=undefined spec="uglify-js@~2.2.5" args=["uglify-js@~2.2.5",null]
546 verbose parsed url { protocol: null,
546 verbose parsed url   slashes: null,
546 verbose parsed url   auth: null,
546 verbose parsed url   host: null,
546 verbose parsed url   port: null,
546 verbose parsed url   hostname: null,
546 verbose parsed url   hash: null,
546 verbose parsed url   search: null,
546 verbose parsed url   query: null,
546 verbose parsed url   pathname: 'uglify-js@~2.2.5',
546 verbose parsed url   path: 'uglify-js@~2.2.5',
546 verbose parsed url   href: 'uglify-js@~2.2.5' }
547 verbose cache add name="uglify-js" spec="~2.2.5" args=["uglify-js","~2.2.5"]
548 verbose parsed url { protocol: null,
548 verbose parsed url   slashes: null,
548 verbose parsed url   auth: null,
548 verbose parsed url   host: null,
548 verbose parsed url   port: null,
548 verbose parsed url   hostname: null,
548 verbose parsed url   hash: null,
548 verbose parsed url   search: null,
548 verbose parsed url   query: null,
548 verbose parsed url   pathname: '~2.2.5',
548 verbose parsed url   path: '~2.2.5',
548 verbose parsed url   href: '~2.2.5' }
549 verbose addNamed [ 'uglify-js', '~2.2.5' ]
550 verbose addNamed [ null, '>=2.2.5-0 <2.3.0-0' ]
551 silly lockFile 24940452-uglify-js-2-2-5 uglify-js@~2.2.5
552 verbose lock uglify-js@~2.2.5 /Users/marc.bluemner/.npm/24940452-uglify-js-2-2-5.lock
553 silly addNameRange { name: 'promise', range: '>=2.0.0-0 <2.1.0-0', hasData: false }
554 silly addNameRange { name: 'css', range: '>=1.0.8-0 <1.1.0-0', hasData: false }
555 silly addNameRange { name: 'uglify-js',
555 silly addNameRange   range: '>=2.2.5-0 <2.3.0-0',
555 silly addNameRange   hasData: false }
556 silly lockFile 40c78323-ules-jade-node-modules-commander tar:///usr/local/lib/node_modules/jade/node_modules/commander
557 silly lockFile 40c78323-ules-jade-node-modules-commander tar:///usr/local/lib/node_modules/jade/node_modules/commander
558 silly lockFile 907486f7--npm-commander-2-1-0-package-tgz tar:///Users/marc.bluemner/.npm/commander/2.1.0/package.tgz
559 silly lockFile 907486f7--npm-commander-2-1-0-package-tgz tar:///Users/marc.bluemner/.npm/commander/2.1.0/package.tgz
560 info preinstall commander@2.1.0
561 verbose readDependencies using package.json deps
562 verbose readDependencies using package.json deps
563 silly resolved []
564 verbose about to build /usr/local/lib/node_modules/jade/node_modules/commander
565 info build /usr/local/lib/node_modules/jade/node_modules/commander
566 verbose linkStuff [ true,
566 verbose linkStuff   '/usr/local/lib/node_modules',
566 verbose linkStuff   false,
566 verbose linkStuff   '/usr/local/lib/node_modules/jade/node_modules' ]
567 info linkStuff commander@2.1.0
568 verbose linkBins commander@2.1.0
569 verbose linkMans commander@2.1.0
570 verbose rebuildBundles commander@2.1.0
571 info install commander@2.1.0
572 info postinstall commander@2.1.0
573 silly lockFile 9dd8c57d-jade-node-modules-constantinople tar:///usr/local/lib/node_modules/jade/node_modules/constantinople
574 silly lockFile 9dd8c57d-jade-node-modules-constantinople tar:///usr/local/lib/node_modules/jade/node_modules/constantinople
575 silly lockFile c95495f4-constantinople-2-0-0-package-tgz tar:///Users/marc.bluemner/.npm/constantinople/2.0.0/package.tgz
576 silly lockFile c95495f4-constantinople-2-0-0-package-tgz tar:///Users/marc.bluemner/.npm/constantinople/2.0.0/package.tgz
577 info preinstall constantinople@2.0.0
578 verbose readDependencies using package.json deps
579 verbose readDependencies using package.json deps
580 verbose cache add [ 'uglify-js@~2.4.0', null ]
581 verbose cache add name=undefined spec="uglify-js@~2.4.0" args=["uglify-js@~2.4.0",null]
582 verbose parsed url { protocol: null,
582 verbose parsed url   slashes: null,
582 verbose parsed url   auth: null,
582 verbose parsed url   host: null,
582 verbose parsed url   port: null,
582 verbose parsed url   hostname: null,
582 verbose parsed url   hash: null,
582 verbose parsed url   search: null,
582 verbose parsed url   query: null,
582 verbose parsed url   pathname: 'uglify-js@~2.4.0',
582 verbose parsed url   path: 'uglify-js@~2.4.0',
582 verbose parsed url   href: 'uglify-js@~2.4.0' }
583 verbose cache add name="uglify-js" spec="~2.4.0" args=["uglify-js","~2.4.0"]
584 verbose parsed url { protocol: null,
584 verbose parsed url   slashes: null,
584 verbose parsed url   auth: null,
584 verbose parsed url   host: null,
584 verbose parsed url   port: null,
584 verbose parsed url   hostname: null,
584 verbose parsed url   hash: null,
584 verbose parsed url   search: null,
584 verbose parsed url   query: null,
584 verbose parsed url   pathname: '~2.4.0',
584 verbose parsed url   path: '~2.4.0',
584 verbose parsed url   href: '~2.4.0' }
585 verbose addNamed [ 'uglify-js', '~2.4.0' ]
586 verbose addNamed [ null, '>=2.4.0-0 <2.5.0-0' ]
587 silly lockFile 1d881e0f-uglify-js-2-4-0 uglify-js@~2.4.0
588 verbose lock uglify-js@~2.4.0 /Users/marc.bluemner/.npm/1d881e0f-uglify-js-2-4-0.lock
589 silly addNameRange { name: 'uglify-js',
589 silly addNameRange   range: '>=2.4.0-0 <2.5.0-0',
589 silly addNameRange   hasData: false }
590 verbose url raw css
591 verbose url resolving [ 'https://registry.npmjs.org/', './css' ]
592 verbose url resolved https://registry.npmjs.org/css
593 info trying registry request attempt 1 at 19:04:00
594 verbose etag "AWICU0S2DLFCRD2KVW4B0QZ38"
595 http GET https://registry.npmjs.org/css
596 silly lockFile 3469eae3-e-modules-jade-node-modules-with tar:///usr/local/lib/node_modules/jade/node_modules/with
597 silly lockFile 3469eae3-e-modules-jade-node-modules-with tar:///usr/local/lib/node_modules/jade/node_modules/with
598 silly lockFile 9ab82dec-emner-npm-with-3-0-0-package-tgz tar:///Users/marc.bluemner/.npm/with/3.0.0/package.tgz
599 silly lockFile 9ab82dec-emner-npm-with-3-0-0-package-tgz tar:///Users/marc.bluemner/.npm/with/3.0.0/package.tgz
600 verbose url raw promise
601 verbose url resolving [ 'https://registry.npmjs.org/', './promise' ]
602 verbose url resolved https://registry.npmjs.org/promise
603 info trying registry request attempt 1 at 19:04:00
604 verbose etag "8751Q81ZN385D9VG96U9988XL"
605 http GET https://registry.npmjs.org/promise
606 info preinstall with@3.0.0
607 verbose readDependencies using package.json deps
608 verbose readDependencies using package.json deps
609 verbose cache add [ 'uglify-js@~2.4.12', null ]
610 verbose cache add name=undefined spec="uglify-js@~2.4.12" args=["uglify-js@~2.4.12",null]
611 verbose parsed url { protocol: null,
611 verbose parsed url   slashes: null,
611 verbose parsed url   auth: null,
611 verbose parsed url   host: null,
611 verbose parsed url   port: null,
611 verbose parsed url   hostname: null,
611 verbose parsed url   hash: null,
611 verbose parsed url   search: null,
611 verbose parsed url   query: null,
611 verbose parsed url   pathname: 'uglify-js@~2.4.12',
611 verbose parsed url   path: 'uglify-js@~2.4.12',
611 verbose parsed url   href: 'uglify-js@~2.4.12' }
612 verbose cache add name="uglify-js" spec="~2.4.12" args=["uglify-js","~2.4.12"]
613 verbose parsed url { protocol: null,
613 verbose parsed url   slashes: null,
613 verbose parsed url   auth: null,
613 verbose parsed url   host: null,
613 verbose parsed url   port: null,
613 verbose parsed url   hostname: null,
613 verbose parsed url   hash: null,
613 verbose parsed url   search: null,
613 verbose parsed url   query: null,
613 verbose parsed url   pathname: '~2.4.12',
613 verbose parsed url   path: '~2.4.12',
613 verbose parsed url   href: '~2.4.12' }
614 verbose addNamed [ 'uglify-js', '~2.4.12' ]
615 verbose addNamed [ null, '>=2.4.12-0 <2.5.0-0' ]
616 silly lockFile adb50415-uglify-js-2-4-12 uglify-js@~2.4.12
617 verbose lock uglify-js@~2.4.12 /Users/marc.bluemner/.npm/adb50415-uglify-js-2-4-12.lock
618 silly addNameRange { name: 'uglify-js',
618 silly addNameRange   range: '>=2.4.12-0 <2.5.0-0',
618 silly addNameRange   hasData: false }
619 silly lockFile 1f7bcf80-modules-jade-node-modules-mkdirp tar:///usr/local/lib/node_modules/jade/node_modules/mkdirp
620 silly lockFile 1f7bcf80-modules-jade-node-modules-mkdirp tar:///usr/local/lib/node_modules/jade/node_modules/mkdirp
621 silly lockFile f3263d5d-ner-npm-mkdirp-0-3-5-package-tgz tar:///Users/marc.bluemner/.npm/mkdirp/0.3.5/package.tgz
622 silly lockFile f3263d5d-ner-npm-mkdirp-0-3-5-package-tgz tar:///Users/marc.bluemner/.npm/mkdirp/0.3.5/package.tgz
623 info preinstall mkdirp@0.3.5
624 verbose readDependencies using package.json deps
625 verbose readDependencies using package.json deps
626 silly resolved []
627 verbose about to build /usr/local/lib/node_modules/jade/node_modules/mkdirp
628 info build /usr/local/lib/node_modules/jade/node_modules/mkdirp
629 verbose linkStuff [ true,
629 verbose linkStuff   '/usr/local/lib/node_modules',
629 verbose linkStuff   false,
629 verbose linkStuff   '/usr/local/lib/node_modules/jade/node_modules' ]
630 info linkStuff mkdirp@0.3.5
631 verbose linkBins mkdirp@0.3.5
632 verbose linkMans mkdirp@0.3.5
633 verbose rebuildBundles mkdirp@0.3.5
634 info install mkdirp@0.3.5
635 info postinstall mkdirp@0.3.5
636 verbose url raw uglify-js
637 verbose url resolving [ 'https://registry.npmjs.org/', './uglify-js' ]
638 verbose url resolved https://registry.npmjs.org/uglify-js
639 info trying registry request attempt 1 at 19:04:00
640 verbose etag "77YHBYGFATO47B8YMQURMBMO7"
641 http GET https://registry.npmjs.org/uglify-js
642 verbose url raw uglify-js
643 verbose url resolving [ 'https://registry.npmjs.org/', './uglify-js' ]
644 verbose url resolved https://registry.npmjs.org/uglify-js
645 info trying registry request attempt 1 at 19:04:00
646 verbose etag "77YHBYGFATO47B8YMQURMBMO7"
647 http GET https://registry.npmjs.org/uglify-js
648 verbose url raw uglify-js
649 verbose url resolving [ 'https://registry.npmjs.org/', './uglify-js' ]
650 verbose url resolved https://registry.npmjs.org/uglify-js
651 info trying registry request attempt 1 at 19:04:00
652 verbose etag "77YHBYGFATO47B8YMQURMBMO7"
653 http GET https://registry.npmjs.org/uglify-js
654 http 304 https://registry.npmjs.org/uglify-js
655 silly registry.get cb [ 304,
655 silly registry.get   { date: 'Mon, 26 May 2014 17:04:01 GMT',
655 silly registry.get     server: 'Apache',
655 silly registry.get     via: '1.1 varnish',
655 silly registry.get     'last-modified': 'Mon, 26 May 2014 17:04:01 GMT',
655 silly registry.get     'cache-control': 'max-age=1',
655 silly registry.get     etag: '"77YHBYGFATO47B8YMQURMBMO7"',
655 silly registry.get     'x-served-by': 'cache-lcy1127-LCY',
655 silly registry.get     'x-cache': 'HIT',
655 silly registry.get     'x-cache-hits': '1',
655 silly registry.get     'x-timer': 'S1401123841.370729,VS0,VE76',
655 silly registry.get     vary: 'Accept',
655 silly registry.get     'content-length': '0',
655 silly registry.get     'keep-alive': 'timeout=10, max=50',
655 silly registry.get     connection: 'Keep-Alive' } ]
656 verbose etag uglify-js from cache
657 silly addNameRange number 2 { name: 'uglify-js', range: '>=2.2.5-0 <2.3.0-0', hasData: true }
658 silly addNameRange versions [ 'uglify-js',
658 silly addNameRange   [ '0.0.1',
658 silly addNameRange     '0.0.2',
658 silly addNameRange     '0.0.3',
658 silly addNameRange     '0.0.4',
658 silly addNameRange     '0.0.5',
658 silly addNameRange     '1.0.1',
658 silly addNameRange     '1.0.2',
658 silly addNameRange     '1.0.3',
658 silly addNameRange     '1.0.4',
658 silly addNameRange     '1.0.5',
658 silly addNameRange     '1.0.6',
658 silly addNameRange     '1.0.7',
658 silly addNameRange     '1.1.0',
658 silly addNameRange     '1.1.1',
658 silly addNameRange     '1.2.0',
658 silly addNameRange     '1.2.1',
658 silly addNameRange     '1.2.2',
658 silly addNameRange     '1.2.3',
658 silly addNameRange     '1.2.4',
658 silly addNameRange     '1.2.5',
658 silly addNameRange     '1.2.6',
658 silly addNameRange     '1.3.0',
658 silly addNameRange     '1.3.1',
658 silly addNameRange     '1.3.2',
658 silly addNameRange     '1.3.3',
658 silly addNameRange     '1.3.4',
658 silly addNameRange     '2.2.0',
658 silly addNameRange     '2.2.1',
658 silly addNameRange     '2.2.2',
658 silly addNameRange     '2.2.3',
658 silly addNameRange     '2.2.4',
658 silly addNameRange     '2.2.5',
658 silly addNameRange     '2.3.0',
658 silly addNameRange     '2.3.1',
658 silly addNameRange     '2.3.2',
658 silly addNameRange     '2.3.3',
658 silly addNameRange     '2.3.4',
658 silly addNameRange     '2.3.5',
658 silly addNameRange     '2.3.6',
658 silly addNameRange     '1.3.5',
658 silly addNameRange     '2.4.0',
658 silly addNameRange     '2.4.1',
658 silly addNameRange     '2.4.2',
658 silly addNameRange     '2.4.3',
658 silly addNameRange     '2.4.4',
658 silly addNameRange     '2.4.5',
658 silly addNameRange     '2.4.6',
658 silly addNameRange     '2.4.7',
658 silly addNameRange     '2.4.8',
658 silly addNameRange     '2.4.9',
658 silly addNameRange     '2.4.10',
658 silly addNameRange     '2.4.11',
658 silly addNameRange     '2.4.12',
658 silly addNameRange     '2.4.13' ] ]
659 verbose addNamed [ 'uglify-js', '2.2.5' ]
660 verbose addNamed [ '2.2.5', '2.2.5' ]
661 silly lockFile 41132903-uglify-js-2-2-5 uglify-js@2.2.5
662 verbose lock uglify-js@2.2.5 /Users/marc.bluemner/.npm/41132903-uglify-js-2-2-5.lock
663 http 200 https://registry.npmjs.org/readdirp
664 silly registry.get cb [ 200,
664 silly registry.get   { date: 'Mon, 26 May 2014 17:04:01 GMT',
664 silly registry.get     server: 'CouchDB/1.5.0 (Erlang OTP/R14B04)',
664 silly registry.get     etag: '"2PU4BRBLQEYYMIPKXA6PNKFUU"',
664 silly registry.get     'content-type': 'application/json',
664 silly registry.get     via: '1.1 varnish',
664 silly registry.get     'cache-control': 'max-age=1',
664 silly registry.get     'content-length': '30042',
664 silly registry.get     'accept-ranges': 'bytes',
664 silly registry.get     age: '442',
664 silly registry.get     'x-served-by': 'cache-v42-ASH, cache-lcy1135-LCY',
664 silly registry.get     'x-cache': 'HIT, HIT',
664 silly registry.get     'x-cache-hits': '1, 1',
664 silly registry.get     'x-timer': 'S1401123840.918928,VS0,VE81',
664 silly registry.get     vary: 'Accept',
664 silly registry.get     'keep-alive': 'timeout=10, max=50',
664 silly registry.get     connection: 'Keep-Alive' } ]
665 http 200 https://registry.npmjs.org/css
666 silly registry.get cb [ 200,
666 silly registry.get   { date: 'Mon, 26 May 2014 17:04:01 GMT',
666 silly registry.get     server: 'CouchDB/1.5.0 (Erlang OTP/R14B04)',
666 silly registry.get     etag: '"4358ESERN790L3R5TSFIJQUD"',
666 silly registry.get     'content-type': 'application/json',
666 silly registry.get     via: '1.1 varnish',
666 silly registry.get     'cache-control': 'max-age=1',
666 silly registry.get     'content-length': '15673',
666 silly registry.get     'accept-ranges': 'bytes',
666 silly registry.get     age: '2570',
666 silly registry.get     'x-served-by': 'cache-v43-ASH, cache-lcy1125-LCY',
666 silly registry.get     'x-cache': 'HIT, MISS',
666 silly registry.get     'x-cache-hits': '1, 0',
666 silly registry.get     'x-timer': 'S1401123841.297778,VS0,VE87',
666 silly registry.get     vary: 'Accept',
666 silly registry.get     'keep-alive': 'timeout=10, max=50',
666 silly registry.get     connection: 'Keep-Alive' } ]
667 http 200 https://registry.npmjs.org/promise
668 silly registry.get cb [ 200,
668 silly registry.get   { date: 'Mon, 26 May 2014 17:04:01 GMT',
668 silly registry.get     server: 'CouchDB/1.5.0 (Erlang OTP/R14B04)',
668 silly registry.get     etag: '"ECNPW7COU6OM01JVH29CNG35B"',
668 silly registry.get     'content-type': 'application/json',
668 silly registry.get     via: '1.1 varnish',
668 silly registry.get     'cache-control': 'max-age=1',
668 silly registry.get     'content-length': '18672',
668 silly registry.get     'accept-ranges': 'bytes',
668 silly registry.get     age: '2562',
668 silly registry.get     'x-served-by': 'cache-v36-ASH, cache-v41-ASH, cache-lcy1125-LCY',
668 silly registry.get     'x-cache': 'HIT, HIT, HIT',
668 silly registry.get     'x-cache-hits': '2, 13605, 1',
668 silly registry.get     'x-timer': 'S1401123841.362528,VS0,VE82',
668 silly registry.get     vary: 'Accept',
668 silly registry.get     'keep-alive': 'timeout=10, max=50',
668 silly registry.get     connection: 'Keep-Alive' } ]
669 http 304 https://registry.npmjs.org/uglify-js
670 silly registry.get cb [ 304,
670 silly registry.get   { date: 'Mon, 26 May 2014 17:04:01 GMT',
670 silly registry.get     server: 'Apache',
670 silly registry.get     via: '1.1 varnish',
670 silly registry.get     'last-modified': 'Mon, 26 May 2014 17:04:01 GMT',
670 silly registry.get     'cache-control': 'max-age=1',
670 silly registry.get     etag: '"77YHBYGFATO47B8YMQURMBMO7"',
670 silly registry.get     'x-served-by': 'cache-lcy1127-LCY',
670 silly registry.get     'x-cache': 'HIT',
670 silly registry.get     'x-cache-hits': '2',
670 silly registry.get     'x-timer': 'S1401123841.743963,VS0,VE0',
670 silly registry.get     vary: 'Accept',
670 silly registry.get     'content-length': '0',
670 silly registry.get     'keep-alive': 'timeout=10, max=49',
670 silly registry.get     connection: 'Keep-Alive' } ]
671 verbose etag uglify-js from cache
672 silly lockFile 41132903-uglify-js-2-2-5 uglify-js@2.2.5
673 silly lockFile 41132903-uglify-js-2-2-5 uglify-js@2.2.5
674 silly addNameRange number 2 { name: 'readdirp', range: '>=0.2.3-0 <0.3.0-0', hasData: true }
675 silly addNameRange versions [ 'readdirp',
675 silly addNameRange   [ '0.1.0',
675 silly addNameRange     '0.1.1',
675 silly addNameRange     '0.1.2',
675 silly addNameRange     '0.1.3',
675 silly addNameRange     '0.1.4',
675 silly addNameRange     '0.2.0',
675 silly addNameRange     '0.2.1',
675 silly addNameRange     '0.2.2',
675 silly addNameRange     '0.2.3',
675 silly addNameRange     '0.2.4',
675 silly addNameRange     '0.2.5',
675 silly addNameRange     '0.3.0',
675 silly addNameRange     '0.3.1',
675 silly addNameRange     '0.3.2',
675 silly addNameRange     '0.3.3',
675 silly addNameRange     '0.4.0',
675 silly addNameRange     '1.0.0',
675 silly addNameRange     '1.0.1' ] ]
676 verbose addNamed [ 'readdirp', '0.2.5' ]
677 verbose addNamed [ '0.2.5', '0.2.5' ]
678 silly lockFile 9d63ca51-readdirp-0-2-5 readdirp@0.2.5
679 verbose lock readdirp@0.2.5 /Users/marc.bluemner/.npm/9d63ca51-readdirp-0-2-5.lock
680 silly lockFile 24940452-uglify-js-2-2-5 uglify-js@~2.2.5
681 silly lockFile 24940452-uglify-js-2-2-5 uglify-js@~2.2.5
682 silly addNameRange number 2 { name: 'css', range: '>=1.0.8-0 <1.1.0-0', hasData: true }
683 silly addNameRange versions [ 'css',
683 silly addNameRange   [ '1.0.0',
683 silly addNameRange     '1.0.1',
683 silly addNameRange     '1.0.2',
683 silly addNameRange     '1.0.3',
683 silly addNameRange     '1.0.4',
683 silly addNameRange     '1.0.5',
683 silly addNameRange     '1.0.6',
683 silly addNameRange     '1.0.7',
683 silly addNameRange     '1.0.8',
683 silly addNameRange     '1.1.0',
683 silly addNameRange     '1.2.0',
683 silly addNameRange     '1.3.0',
683 silly addNameRange     '1.3.1',
683 silly addNameRange     '1.4.0',
683 silly addNameRange     '1.4.1',
683 silly addNameRange     '1.4.2',
683 silly addNameRange     '1.4.3',
683 silly addNameRange     '1.4.4',
683 silly addNameRange     '1.6.0' ] ]
684 verbose addNamed [ 'css', '1.0.8' ]
685 verbose addNamed [ '1.0.8', '1.0.8' ]
686 silly lockFile d226fd37-css-1-0-8 css@1.0.8
687 verbose lock css@1.0.8 /Users/marc.bluemner/.npm/d226fd37-css-1-0-8.lock
688 silly addNameRange number 2 { name: 'promise', range: '>=2.0.0-0 <2.1.0-0', hasData: true }
689 silly addNameRange versions [ 'promise',
689 silly addNameRange   [ '1.2.1',
689 silly addNameRange     '1.2.2',
689 silly addNameRange     '1.3.0',
689 silly addNameRange     '2.0.0',
689 silly addNameRange     '3.0.0',
689 silly addNameRange     '3.0.1',
689 silly addNameRange     '3.1.0',
689 silly addNameRange     '3.2.0',
689 silly addNameRange     '4.0.0',
689 silly addNameRange     '5.0.0' ] ]
690 verbose addNamed [ 'promise', '2.0.0' ]
691 verbose addNamed [ '2.0.0', '2.0.0' ]
692 silly lockFile 7030b879-promise-2-0-0 promise@2.0.0
693 verbose lock promise@2.0.0 /Users/marc.bluemner/.npm/7030b879-promise-2-0-0.lock
694 silly addNameRange number 2 { name: 'uglify-js',
694 silly addNameRange   range: '>=2.4.12-0 <2.5.0-0',
694 silly addNameRange   hasData: true }
695 silly addNameRange versions [ 'uglify-js',
695 silly addNameRange   [ '0.0.1',
695 silly addNameRange     '0.0.2',
695 silly addNameRange     '0.0.3',
695 silly addNameRange     '0.0.4',
695 silly addNameRange     '0.0.5',
695 silly addNameRange     '1.0.1',
695 silly addNameRange     '1.0.2',
695 silly addNameRange     '1.0.3',
695 silly addNameRange     '1.0.4',
695 silly addNameRange     '1.0.5',
695 silly addNameRange     '1.0.6',
695 silly addNameRange     '1.0.7',
695 silly addNameRange     '1.1.0',
695 silly addNameRange     '1.1.1',
695 silly addNameRange     '1.2.0',
695 silly addNameRange     '1.2.1',
695 silly addNameRange     '1.2.2',
695 silly addNameRange     '1.2.3',
695 silly addNameRange     '1.2.4',
695 silly addNameRange     '1.2.5',
695 silly addNameRange     '1.2.6',
695 silly addNameRange     '1.3.0',
695 silly addNameRange     '1.3.1',
695 silly addNameRange     '1.3.2',
695 silly addNameRange     '1.3.3',
695 silly addNameRange     '1.3.4',
695 silly addNameRange     '2.2.0',
695 silly addNameRange     '2.2.1',
695 silly addNameRange     '2.2.2',
695 silly addNameRange     '2.2.3',
695 silly addNameRange     '2.2.4',
695 silly addNameRange     '2.2.5',
695 silly addNameRange     '2.3.0',
695 silly addNameRange     '2.3.1',
695 silly addNameRange     '2.3.2',
695 silly addNameRange     '2.3.3',
695 silly addNameRange     '2.3.4',
695 silly addNameRange     '2.3.5',
695 silly addNameRange     '2.3.6',
695 silly addNameRange     '1.3.5',
695 silly addNameRange     '2.4.0',
695 silly addNameRange     '2.4.1',
695 silly addNameRange     '2.4.2',
695 silly addNameRange     '2.4.3',
695 silly addNameRange     '2.4.4',
695 silly addNameRange     '2.4.5',
695 silly addNameRange     '2.4.6',
695 silly addNameRange     '2.4.7',
695 silly addNameRange     '2.4.8',
695 silly addNameRange     '2.4.9',
695 silly addNameRange     '2.4.10',
695 silly addNameRange     '2.4.11',
695 silly addNameRange     '2.4.12',
695 silly addNameRange     '2.4.13' ] ]
696 verbose addNamed [ 'uglify-js', '2.4.13' ]
697 verbose addNamed [ '2.4.13', '2.4.13' ]
698 silly lockFile cc296735-uglify-js-2-4-13 uglify-js@2.4.13
699 verbose lock uglify-js@2.4.13 /Users/marc.bluemner/.npm/cc296735-uglify-js-2-4-13.lock
700 silly lockFile 9d63ca51-readdirp-0-2-5 readdirp@0.2.5
701 silly lockFile 9d63ca51-readdirp-0-2-5 readdirp@0.2.5
702 silly lockFile 04c42a12-readdirp-0-2-3 readdirp@~0.2.3
703 silly lockFile 04c42a12-readdirp-0-2-3 readdirp@~0.2.3
704 silly lockFile 7030b879-promise-2-0-0 promise@2.0.0
705 silly lockFile 7030b879-promise-2-0-0 promise@2.0.0
706 silly lockFile d226fd37-css-1-0-8 css@1.0.8
707 silly lockFile d226fd37-css-1-0-8 css@1.0.8
708 silly lockFile 93701466-promise-2-0 promise@~2.0
709 silly lockFile 93701466-promise-2-0 promise@~2.0
710 silly lockFile 6b217e40-css-1-0-8 css@~1.0.8
711 silly lockFile 6b217e40-css-1-0-8 css@~1.0.8
712 silly lockFile cc296735-uglify-js-2-4-13 uglify-js@2.4.13
713 silly lockFile cc296735-uglify-js-2-4-13 uglify-js@2.4.13
714 silly lockFile adb50415-uglify-js-2-4-12 uglify-js@~2.4.12
715 silly lockFile adb50415-uglify-js-2-4-12 uglify-js@~2.4.12
716 silly resolved [ { author:
716 silly resolved      { name: 'Thorsten Lorenz',
716 silly resolved        email: 'thlorenz@gmx.de',
716 silly resolved        url: 'thlorenz.com' },
716 silly resolved     name: 'readdirp',
716 silly resolved     description: 'Recursive version of fs.readdir with streaming api.',
716 silly resolved     version: '0.2.5',
716 silly resolved     homepage: 'https://github.com/thlorenz/readdirp',
716 silly resolved     repository: { type: 'git', url: 'git://github.com/thlorenz/readdirp.git' },
716 silly resolved     engines: { node: '>=0.4' },
716 silly resolved     keywords:
716 silly resolved      [ 'recursive',
716 silly resolved        'fs',
716 silly resolved        'stream',
716 silly resolved        'streams',
716 silly resolved        'readdir',
716 silly resolved        'filesystem',
716 silly resolved        'find',
716 silly resolved        'filter' ],
716 silly resolved     main: 'readdirp.js',
716 silly resolved     scripts: { test: 'tap test/*.js' },
716 silly resolved     dependencies: { minimatch: '>=0.2.4' },
716 silly resolved     devDependencies: { tap: '~0.3.1', through: '~1.1.0', minimatch: '~0.2.7' },
716 silly resolved     optionalDependencies: {},
716 silly resolved     license: 'MIT',
716 silly resolved     readme: '# readdirp [![Build Status](https://secure.travis-ci.org/thlorenz/readdirp.png)](http://travis-ci.org/thlorenz/readdirp)\n\nRecursive version of [fs.readdir](http://nodejs.org/docs/latest/api/fs.html#fs_fs_readdir_path_callback). Exposes a **stream api**.\n\n```javascript\nvar readdirp = require(\'readdirp\'); \n  , path = require(\'path\')\n  , es = require(\'event-stream\');\n\n// print out all JavaScript files along with their size\n\nvar stream = readdirp({ root: path.join(__dirname), fileFilter: \'*.js\' });\nstream\n  .on(\'warn\', function (err) { \n    console.error(\'non-fatal error\', err); \n    // optionally call stream.destroy() here in order to abort and cause \'close\' to be emitted\n  })\n  .on(\'error\', function (err) { console.error(\'fatal error\', err); })\n  .pipe(es.mapSync(function (entry) { \n    return { path: entry.path, size: entry.stat.size };\n  }))\n  .pipe(es.stringify())\n  .pipe(process.stdout);\n```\n\nMeant to be one of the recursive versions of [fs](http://nodejs.org/docs/latest/api/fs.html) functions, e.g., like [mkdirp](https://github.com/substack/node-mkdirp).\n\n**Table of Contents**  *generated with [DocToc](http://doctoc.herokuapp.com/)*\n\n- [Installation](#installation)\n- [API](#api)\n\t- [entry stream](#entry-stream)\n\t- [options](#options)\n\t- [entry info](#entry-info)\n\t- [Filters](#filters)\n\t- [Callback API](#callback-api)\n\t\t- [allProcessed ](#allprocessed)\n\t\t- [fileProcessed](#fileprocessed)\n- [More Examples](#more-examples)\n\t- [stream api](#stream-api)\n\t- [stream api pipe](#stream-api-pipe)\n\t- [grep](#grep)\n\t- [using callback api](#using-callback-api)\n\t- [tests](#tests)\n\n\n# Installation\n\n    npm install readdirp\n\n# API\n\n***var entryStream = readdirp (options)***\n\nReads given root recursively and returns a `stream` of [entry info](#entry-info)s.\n\n## entry stream\n\nBehaves as follows:\n  \n- `emit(\'data\')` passes an [entry info](#entry-info) whenever one is found\n- `emit(\'warn\')` passes a non-fatal `Error` that prevents a file/directory from being processed (i.e., if it is\n  inaccessible to the user)\n- `emit(\'error\')` passes a fatal `Error` which also ends the stream (i.e., when illegal options where passed)\n- `emit(\'end\')` called when all entries were found and no more will be emitted (i.e., we are done)\n- `emit(\'close\')` called when the stream is destroyed via `stream.destroy()` (which could be useful if you want to\n  manually abort even on a non fatal error) - at that point the stream is no longer `readable` and no more entries,\n  warning or errors are emitted\n- the stream is `paused` initially in order to allow `pipe` and `on` handlers be connected before data or errors are\n  emitted\n- the stream is `resumed` automatically during the next event loop \n- to learn more about streams, consult the [stream-handbook](https://github.com/substack/stream-handbook)\n\n## options\n    \n- **root**: path in which to start reading and recursing into subdirectories\n\n- **fileFilter**: filter to include/exclude files found (see [Filters](#filters) for more)\n\n- **directoryFilter**: filter to include/exclude directories found and to recurse into (see [Filters](#filters) for more)\n\n- **depth**: depth at which to stop recursing even if more subdirectories are found\n\n## entry info\n\nHas the following properties:\n\n- **parentDir**     :  directory in which entry was found (relative to given root)\n- **fullParentDir** :  full path to parent directory\n- **name**          :  name of the file/directory\n- **path**          :  path to the file/directory (relative to given root)\n- **fullPath**      :  full path to the file/directory found\n- **stat**          :  built in [stat object](http://nodejs.org/docs/v0.4.9/api/fs.html#fs.Stats)\n- **Example**: (assuming root was `/User/dev/readdirp`)\n        \n        parentDir     :  \'test/bed/root_dir1\',\n        fullParentDir :  \'/User/dev/readdirp/test/bed/root_dir1\',\n        name          :  \'root_dir1_subdir1\',\n        path          :  \'test/bed/root_dir1/root_dir1_subdir1\',\n        fullPath      :  \'/User/dev/readdirp/test/bed/root_dir1/root_dir1_subdir1\',\n        stat          :  [ ... ]\n                    \n## Filters\n    \nThere are three different ways to specify filters for files and directories respectively. \n\n- **function**: a function that takes an entry info as a parameter and returns true to include or false to exclude the entry\n\n- **glob string**: a string (e.g., `*.js`) which is matched using [minimatch](https://github.com/isaacs/minimatch), so go there for more\n    information. \n\n    Globstars (`**`) are not supported since specifiying a recursive pattern for an already recursive function doesn\'t make sense.\n\n    Negated globs (as explained in the minimatch documentation) are allowed, e.g., `!*.txt` matches everything but text files.\n\n- **array of glob strings**: either need to be all inclusive or all exclusive (negated) patterns otherwise an error is thrown.\n    \n    `[ \'*.json\', \'*.js\' ]` includes all JavaScript and Json files.\n    \n    \n    `[ \'!.git\', \'!node_modules\' ]` includes all directories except the \'.git\' and \'node_modules\'.\n\nDirectories that do not pass a filter will not be recursed into.\n\n## Callback API\n\nAlthough the stream api is recommended, readdirp also exposes a callback based api.\n\n***readdirp (options, callback1 [, callback2])***\n\nIf callback2 is given, callback1 functions as the **fileProcessed** callback, and callback2 as the **allProcessed** callback.\n\nIf only callback1 is given, it functions as the **allProcessed** callback.\n\n### allProcessed \n\n- function with err and res parameters, e.g., `function (err, res) { ... }`\n- **err**: array of errors that occurred during the operation, **res may still be present, even if errors occurred**\n- **res**: collection of file/directory [entry infos](#entry-info)\n\n### fileProcessed\n\n- function with [entry info](#entry-info) parameter e.g., `function (entryInfo) { ... }`\n\n\n# More Examples\n\n`on(\'error\', ..)`, `on(\'warn\', ..)` and `on(\'end\', ..)` handling omitted for brevity\n\n```javascript\nvar readdirp = require(\'readdirp\');\n\n// Glob file filter\nreaddirp({ root: \'./test/bed\', fileFilter: \'*.js\' })\n  .on(\'data\', function (entry) {\n    // do something with each JavaScript file entry\n  });\n\n// Combined glob file filters\nreaddirp({ root: \'./test/bed\', fileFilter: [ \'*.js\', \'*.json\' ] })\n  .on(\'data\', function (entry) {\n    // do something with each JavaScript and Json file entry \n  });\n\n// Combined negated directory filters\nreaddirp({ root: \'./test/bed\', directoryFilter: [ \'!.git\', \'!*modules\' ] })\n  .on(\'data\', function (entry) {\n    // do something with each file entry found outside \'.git\' or any modules directory \n  });\n\n// Function directory filter\nreaddirp({ root: \'./test/bed\', directoryFilter: function (di) { return di.name.length === 9; } })\n  .on(\'data\', function (entry) {\n    // do something with each file entry found inside directories whose name has length 9\n  });\n\n// Limiting depth\nreaddirp({ root: \'./test/bed\', depth: 1 })\n  .on(\'data\', function (entry) {\n    // do something with each file entry found up to 1 subdirectory deep\n  });\n\n// callback api\nreaddirp(\n    { root: \'.\' }\n  , function(fileInfo) { \n      // do something with file entry here\n    } \n  , function (err, res) {\n      // all done, move on or do final step for all file entries here\n    }\n);\n```\n\nTry more examples by following [instructions](https://github.com/thlorenz/readdirp/blob/master/examples/Readme.md)\non how to get going.\n\n## stream api\n\n[stream-api.js](https://github.com/thlorenz/readdirp/blob/master/examples/stream-api.js)\n\nDemonstrates error and data handling by listening to events emitted from the readdirp stream.\n\n## stream api pipe\n\n[stream-api-pipe.js](https://github.com/thlorenz/readdirp/blob/master/examples/stream-api-pipe.js)\n\nDemonstrates error handling by listening to events emitted from the readdirp stream and how to pipe the data stream into\nanother destination stream.\n\n## grep\n\n[grep.js](https://github.com/thlorenz/readdirp/blob/master/examples/grep.js)\n\nVery naive implementation of grep, for demonstration purposes only.\n\n## using callback api\n\n[callback-api.js](https://github.com/thlorenz/readdirp/blob/master/examples/callback-api.js)\n\nShows how to pass callbacks in order to handle errors and/or data.\n\n## tests\n\nThe [readdirp tests](https://github.com/thlorenz/readdirp/blob/master/test/readdirp.js) also will give you a good idea on\nhow things work.\n\n',
716 silly resolved     readmeFilename: 'README.md',
716 silly resolved     bugs: { url: 'https://github.com/thlorenz/readdirp/issues' },
716 silly resolved     _id: 'readdirp@0.2.5',
716 silly resolved     _shasum: 'c4c276e52977ae25db5191fe51d008550f15d9bb',
716 silly resolved     _from: 'readdirp@~0.2.3',
716 silly resolved     _resolved: 'https://registry.npmjs.org/readdirp/-/readdirp-0.2.5.tgz' } ]
717 info install readdirp@0.2.5 into /usr/local/lib/node_modules/jade/node_modules/monocle
718 info installOne readdirp@0.2.5
719 info /usr/local/lib/node_modules/jade/node_modules/monocle/node_modules/readdirp unbuild
720 silly resolved [ { name: 'uglify-js',
720 silly resolved     description: 'JavaScript parser, mangler/compressor and beautifier toolkit',
720 silly resolved     homepage: 'http://lisperator.net/uglifyjs',
720 silly resolved     main: 'tools/node.js',
720 silly resolved     version: '2.2.5',
720 silly resolved     engines: { node: '>=0.4.0' },
720 silly resolved     maintainers: [ [Object] ],
720 silly resolved     repositories: [ [Object] ],
720 silly resolved     dependencies: { 'source-map': '~0.1.7', optimist: '~0.3.5' },
720 silly resolved     bin: { uglifyjs: 'bin/uglifyjs' },
720 silly resolved     scripts: { test: 'node test/run-tests.js' },
720 silly resolved     readme: 'UglifyJS 2\n==========\n\nUglifyJS is a JavaScript parser, minifier, compressor or beautifier toolkit.\n\nThis page documents the command line utility.  For\n[API and internals documentation see my website](http://lisperator.net/uglifyjs/).\nThere\'s also an\n[in-browser online demo](http://lisperator.net/uglifyjs/#demo) (for Firefox,\nChrome and probably Safari).\n\nInstall\n-------\n\nFirst make sure you have installed the latest version of [node.js](http://nodejs.org/)\n(You may need to restart your computer after this step).\n\nFrom NPM for use as a command line app:\n\n    npm install uglify-js -g\n\nFrom NPM for programmatic use:\n\n    npm install uglify-js\n\nFrom Git:\n\n    git clone git://github.com/mishoo/UglifyJS2.git\n    cd UglifyJS2\n    npm link .\n\nUsage\n-----\n\n    uglifyjs [input files] [options]\n\nUglifyJS2 can take multiple input files.  It\'s recommended that you pass the\ninput files first, then pass the options.  UglifyJS will parse input files\nin sequence and apply any compression options.  The files are parsed in the\nsame global scope, that is, a reference from a file to some\nvariable/function declared in another file will be matched properly.\n\nIf you want to read from STDIN instead, pass a single dash instead of input\nfiles.\n\nThe available options are:\n\n    --source-map       Specify an output file where to generate source map.\n                                                                          [string]\n    --source-map-root  The path to the original source to be included in the\n                       source map.                                        [string]\n    --source-map-url   The path to the source map to be added in //@\n                       sourceMappingURL.  Defaults to the value passed with\n                       --source-map.                                      [string]\n    --in-source-map    Input source map, useful if you\'re compressing JS that was\n                       generated from some other original code.\n    -p, --prefix       Skip prefix for original filenames that appear in source\n                       maps. For example -p 3 will drop 3 directories from file\n                       names and ensure they are relative paths.\n    -o, --output       Output file (default STDOUT).\n    -b, --beautify     Beautify output/specify output options.            [string]\n    -m, --mangle       Mangle names/pass mangler options.                 [string]\n    -r, --reserved     Reserved names to exclude from mangling.\n    -c, --compress     Enable compressor/pass compressor options. Pass options\n                       like -c hoist_vars=false,if_return=false. Use -c with no\n                       argument to use the default compression options.   [string]\n    -d, --define       Global definitions                                 [string]\n    --comments         Preserve copyright comments in the output. By default this\n                       works like Google Closure, keeping JSDoc-style comments\n                       that contain "@license" or "@preserve". You can optionally\n                       pass one of the following arguments to this flag:\n                       - "all" to keep all comments\n                       - a valid JS regexp (needs to start with a slash) to keep\n                       only comments that match.\n                       Note that currently not *all* comments can be kept when\n                       compression is on, because of dead code removal or\n                       cascading statements into sequences.               [string]\n    --stats            Display operations run time on STDERR.            [boolean]\n    --acorn            Use Acorn for parsing.                            [boolean]\n    --spidermonkey     Assume input fles are SpiderMonkey AST format (as JSON).\n                                                                         [boolean]\n    --self             Build itself (UglifyJS2) as a library (implies\n                       --wrap=UglifyJS --export-all)                     [boolean]\n    --wrap             Embed everything in a big function, making the “exports”\n                       and “global” variables available. You need to pass an\n                       argument to this option to specify the name that your\n                       module will take when included in, say, a browser.\n                                                                          [string]\n    --export-all       Only used when --wrap, this tells UglifyJS to add code to\n                       automatically export all globals.                 [boolean]\n    --lint             Display some scope warnings                       [boolean]\n    -v, --verbose      Verbose                                           [boolean]\n    -V, --version      Print version number and exit.                    [boolean]\n\nSpecify `--output` (`-o`) to declare the output file.  Otherwise the output\ngoes to STDOUT.\n\n## Source map options\n\nUglifyJS2 can generate a source map file, which is highly useful for\ndebugging your compressed JavaScript.  To get a source map, pass\n`--source-map output.js.map` (full path to the file where you want the\nsource map dumped).\n\nAdditionally you might need `--source-map-root` to pass the URL where the\noriginal files can be found.  In case you are passing full paths to input\nfiles to UglifyJS, you can use `--prefix` (`-p`) to specify the number of\ndirectories to drop from the path prefix when declaring files in the source\nmap.\n\nFor example:\n\n    uglifyjs /home/doe/work/foo/src/js/file1.js \\\n             /home/doe/work/foo/src/js/file2.js \\\n             -o foo.min.js \\\n             --source-map foo.min.js.map \\\n             --source-map-root http://foo.com/src \\\n             -p 5 -c -m\n\nThe above will compress and mangle `file1.js` and `file2.js`, will drop the\noutput in `foo.min.js` and the source map in `foo.min.js.map`.  The source\nmapping will refer to `http://foo.com/src/js/file1.js` and\n`http://foo.com/src/js/file2.js` (in fact it will list `http://foo.com/src`\nas the source map root, and the original files as `js/file1.js` and\n`js/file2.js`).\n\n### Composed source map\n\nWhen you\'re compressing JS code that was output by a compiler such as\nCoffeeScript, mapping to the JS code won\'t be too helpful.  Instead, you\'d\nlike to map back to the original code (i.e. CoffeeScript).  UglifyJS has an\noption to take an input source map.  Assuming you have a mapping from\nCoffeeScript → compiled JS, UglifyJS can generate a map from CoffeeScript →\ncompressed JS by mapping every token in the compiled JS to its original\nlocation.\n\nTo use this feature you need to pass `--in-source-map\n/path/to/input/source.map`.  Normally the input source map should also point\nto the file containing the generated JS, so if that\'s correct you can omit\ninput files from the command line.\n\n## Mangler options\n\nTo enable the mangler you need to pass `--mangle` (`-m`).  Optionally you\ncan pass `-m sort=true` (we\'ll possibly have other flags in the future) in order\nto assign shorter names to most frequently used variables.  This saves a few\nhundred bytes on jQuery before gzip, but the output is _bigger_ after gzip\n(and seems to happen for other libraries I tried it on) therefore it\'s not\nenabled by default.\n\nWhen mangling is enabled but you want to prevent certain names from being\nmangled, you can declare those names with `--reserved` (`-r`) — pass a\ncomma-separated list of names.  For example:\n\n    uglifyjs ... -m -r \'$,require,exports\'\n\nto prevent the `require`, `exports` and `$` names from being changed.\n\n## Compressor options\n\nYou need to pass `--compress` (`-c`) to enable the compressor.  Optionally\nyou can pass a comma-separated list of options.  Options are in the form\n`foo=bar`, or just `foo` (the latter implies a boolean option that you want\nto set `true`; it\'s effectively a shortcut for `foo=true`).\n\nThe defaults should be tuned for maximum compression on most code.  Here are\nthe available options (all are `true` by default, except `hoist_vars`):\n\n- `sequences` -- join consecutive simple statements using the comma operator\n- `properties` -- rewrite property access using the dot notation, for\n  example `foo["bar"] → foo.bar`\n- `dead_code` -- remove unreachable code\n- `drop_debugger` -- remove `debugger;` statements\n- `unsafe` -- apply "unsafe" transformations (discussion below)\n- `conditionals` -- apply optimizations for `if`-s and conditional\n  expressions\n- `comparisons` -- apply certain optimizations to binary nodes, for example:\n  `!(a <= b) → a > b` (only when `unsafe`), attempts to negate binary nodes,\n  e.g. `a = !b && !c && !d && !e → a=!(b||c||d||e)` etc.\n- `evaluate` -- attempt to evaluate constant expressions\n- `booleans` -- various optimizations for boolean context, for example `!!a\n  ? b : c → a ? b : c`\n- `loops` -- optimizations for `do`, `while` and `for` loops when we can\n  statically determine the condition\n- `unused` -- drop unreferenced functions and variables\n- `hoist_funs` -- hoist function declarations\n- `hoist_vars` -- hoist `var` declarations (this is `false` by default\n  because it seems to increase the size of the output in general)\n- `if_return` -- optimizations for if/return and if/continue\n- `join_vars` -- join consecutive `var` statements\n- `cascade` -- small optimization for sequences, transform `x, x` into `x`\n  and `x = something(), x` into `x = something()`\n- `warnings` -- display warnings when dropping unreachable code or unused\n  declarations etc.\n\n### Conditional compilation\n\nYou can use the `--define` (`-d`) switch in order to declare global\nvariables that UglifyJS will assume to be constants (unless defined in\nscope).  For example if you pass `--define DEBUG=false` then, coupled with\ndead code removal UglifyJS will discard the following from the output:\n\n    if (DEBUG) {\n        console.log("debug stuff");\n    }\n\nUglifyJS will warn about the condition being always false and about dropping\nunreachable code; for now there is no option to turn off only this specific\nwarning, you can pass `warnings=false` to turn off *all* warnings.\n\nAnother way of doing that is to declare your globals as constants in a\nseparate file and include it into the build.  For example you can have a\n`build/defines.js` file with the following:\n\n    const DEBUG = false;\n    const PRODUCTION = true;\n    // etc.\n\nand build your code like this:\n\n    uglifyjs build/defines.js js/foo.js js/bar.js... -c\n\nUglifyJS will notice the constants and, since they cannot be altered, it\nwill evaluate references to them to the value itself and drop unreachable\ncode as usual.  The possible downside of this approach is that the build\nwill contain the `const` declarations.\n\n<a name="codegen-options"></a>\n## Beautifier options\n\nThe code generator tries to output shortest code possible by default.  In\ncase you want beautified output, pass `--beautify` (`-b`).  Optionally you\ncan pass additional arguments that control the code output:\n\n- `beautify` (default `true`) -- whether to actually beautify the output.\n  Passing `-b` will set this to true, but you might need to pass `-b` even\n  when you want to generate minified code, in order to specify additional\n  arguments, so you can use `-b beautify=false` to override it.\n- `indent-level` (default 4)\n- `indent-start` (default 0) -- prefix all lines by that many spaces\n- `quote-keys` (default `false`) -- pass `true` to quote all keys in literal\n  objects\n- `space-colon` (default `true`) -- insert a space after the colon signs\n- `ascii-only` (default `false`) -- escape Unicode characters in strings and\n  regexps\n- `inline-script` (default `false`) -- escape the slash in occurrences of\n  `</script` in strings\n- `width` (default 80) -- only takes effect when beautification is on, this\n  specifies an (orientative) line width that the beautifier will try to\n  obey.  It refers to the width of the line text (excluding indentation).\n  It doesn\'t work very well currently, but it does make the code generated\n  by UglifyJS more readable.\n- `max-line-len` (default 32000) -- maximum line length (for uglified code)\n- `ie-proof` (default `true`) -- generate “IE-proof” code (for now this\n  means add brackets around the do/while in code like this: `if (foo) do\n  something(); while (bar); else ...`.\n- `bracketize` (default `false`) -- always insert brackets in `if`, `for`,\n  `do`, `while` or `with` statements, even if their body is a single\n  statement.\n- `semicolons` (default `true`) -- separate statements with semicolons.  If\n  you pass `false` then whenever possible we will use a newline instead of a\n  semicolon, leading to more readable output of uglified code (size before\n  gzip could be smaller; size after gzip insignificantly larger).\n\n### Keeping copyright notices or other comments\n\nYou can pass `--comments` to retain certain comments in the output.  By\ndefault it will keep JSDoc-style comments that contain "@preserve",\n"@license" or "@cc_on" (conditional compilation for IE).  You can pass\n`--comments all` to keep all the comments, or a valid JavaScript regexp to\nkeep only comments that match this regexp.  For example `--comments\n\'/foo|bar/\'` will keep only comments that contain "foo" or "bar".\n\nNote, however, that there might be situations where comments are lost.  For\nexample:\n\n    function f() {\n      /** @preserve Foo Bar */\n      function g() {\n        // this function is never called\n      }\n      return something();\n    }\n\nEven though it has "@preserve", the comment will be lost because the inner\nfunction `g` (which is the AST node to which the comment is attached to) is\ndiscarded by the compressor as not referenced.\n\nThe safest comments where to place copyright information (or other info that\nneeds to be kept in the output) are comments attached to toplevel nodes.\n\n## Support for the SpiderMonkey AST\n\nUglifyJS2 has its own abstract syntax tree format; for\n[practical reasons](http://lisperator.net/blog/uglifyjs-why-not-switching-to-spidermonkey-ast/)\nwe can\'t easily change to using the SpiderMonkey AST internally.  However,\nUglifyJS now has a converter which can import a SpiderMonkey AST.\n\nFor example [Acorn][acorn] is a super-fast parser that produces a\nSpiderMonkey AST.  It has a small CLI utility that parses one file and dumps\nthe AST in JSON on the standard output.  To use UglifyJS to mangle and\ncompress that:\n\n    acorn file.js | uglifyjs --spidermonkey -m -c\n\nThe `--spidermonkey` option tells UglifyJS that all input files are not\nJavaScript, but JS code described in SpiderMonkey AST in JSON.  Therefore we\ndon\'t use our own parser in this case, but just transform that AST into our\ninternal AST.\n\n### Use Acorn for parsing\n\nMore for fun, I added the `--acorn` option which will use Acorn to do all\nthe parsing.  If you pass this option, UglifyJS will `require("acorn")`.\n\nAcorn is really fast (e.g. 250ms instead of 380ms on some 650K code), but\nconverting the SpiderMonkey tree that Acorn produces takes another 150ms so\nin total it\'s a bit more than just using UglifyJS\'s own parser.\n\nAPI Reference\n-------------\n\nAssuming installation via NPM, you can load UglifyJS in your application\nlike this:\n\n    var UglifyJS = require("uglify-js");\n\nIt exports a lot of names, but I\'ll discuss here the basics that are needed\nfor parsing, mangling and compressing a piece of code.  The sequence is (1)\nparse, (2) compress, (3) mangle, (4) generate output code.\n\n### The simple way\n\nThere\'s a single toplevel function which combines all the steps.  If you\ndon\'t need additional customization, you might want to go with `minify`.\nExample:\n\n    var result = UglifyJS.minify("/path/to/file.js");\n    console.log(result.code); // minified output\n    // if you need to pass code instead of file name\n    var result = UglifyJS.minify("var b = function () {};", {fromString: true});\n\nYou can also compress multiple files:\n\n    var result = UglifyJS.minify([ "file1.js", "file2.js", "file3.js" ]);\n    console.log(result.code);\n\nTo generate a source map:\n\n    var result = UglifyJS.minify([ "file1.js", "file2.js", "file3.js" ], {\n        outSourceMap: "out.js.map"\n    });\n    console.log(result.code); // minified output\n    console.log(result.map);\n\nNote that the source map is not saved in a file, it\'s just returned in\n`result.map`.  The value passed for `outSourceMap` is only used to set the\n`file` attribute in the source map (see [the spec][sm-spec]).\n\nYou can also specify sourceRoot property to be included in source map:\n\n    var result = UglifyJS.minify([ "file1.js", "file2.js", "file3.js" ], {\n        outSourceMap: "out.js.map",\n        sourceRoot: "http://example.com/src"\n    });\n\n\nIf you\'re compressing compiled JavaScript and have a source map for it, you\ncan use the `inSourceMap` argument:\n\n    var result = UglifyJS.minify("compiled.js", {\n        inSourceMap: "compiled.js.map",\n        outSourceMap: "minified.js.map"\n    });\n    // same as before, it returns `code` and `map`\n\nThe `inSourceMap` is only used if you also request `outSourceMap` (it makes\nno sense otherwise).\n\nOther options:\n\n- `warnings` (default `false`) — pass `true` to display compressor warnings.\n\n- `fromString` (default `false`) — if you pass `true` then you can pass\n  JavaScript source code, rather than file names.\n\n- `mangle` — pass `false` to skip mangling names.\n\n- `output` (default `null`) — pass an object if you wish to specify\n  additional [output options][codegen].  The defaults are optimized\n  for best compression.\n\n- `compress` (default `{}`) — pass `false` to skip compressing entirely.\n  Pass an object to specify custom [compressor options][compressor].\n\nWe could add more options to `UglifyJS.minify` — if you need additional\nfunctionality please suggest!\n\n### The hard way\n\nFollowing there\'s more detailed API info, in case the `minify` function is\ntoo simple for your needs.\n\n#### The parser\n\n    var toplevel_ast = UglifyJS.parse(code, options);\n\n`options` is optional and if present it must be an object.  The following\nproperties are available:\n\n- `strict` — disable automatic semicolon insertion and support for trailing\n  comma in arrays and objects\n- `filename` — the name of the file where this code is coming from\n- `toplevel` — a `toplevel` node (as returned by a previous invocation of\n  `parse`)\n\nThe last two options are useful when you\'d like to minify multiple files and\nget a single file as the output and a proper source map.  Our CLI tool does\nsomething like this:\n\n    var toplevel = null;\n    files.forEach(function(file){\n        var code = fs.readFileSync(file);\n        toplevel = UglifyJS.parse(code, {\n            filename: file,\n            toplevel: toplevel\n        });\n    });\n\nAfter this, we have in `toplevel` a big AST containing all our files, with\neach token having proper information about where it came from.\n\n#### Scope information\n\nUglifyJS contains a scope analyzer that you need to call manually before\ncompressing or mangling.  Basically it augments various nodes in the AST\nwith information about where is a name defined, how many times is a name\nreferenced, if it is a global or not, if a function is using `eval` or the\n`with` statement etc.  I will discuss this some place else, for now what\'s\nimportant to know is that you need to call the following before doing\nanything with the tree:\n\n    toplevel.figure_out_scope()\n\n#### Compression\n\nLike this:\n\n    var compressor = UglifyJS.Compressor(options);\n    var compressed_ast = toplevel.transform(compressor);\n\nThe `options` can be missing.  Available options are discussed above in\n“Compressor options”.  Defaults should lead to best compression in most\nscripts.\n\nThe compressor is destructive, so don\'t rely that `toplevel` remains the\noriginal tree.\n\n#### Mangling\n\nAfter compression it is a good idea to call again `figure_out_scope` (since\nthe compressor might drop unused variables / unreachable code and this might\nchange the number of identifiers or their position).  Optionally, you can\ncall a trick that helps after Gzip (counting character frequency in\nnon-mangleable words).  Example:\n\n    compressed_ast.figure_out_scope();\n    compressed_ast.compute_char_frequency();\n    compressed_ast.mangle_names();\n\n#### Generating output\n\nAST nodes have a `print` method that takes an output stream.  Essentially,\nto generate code you do this:\n\n    var stream = UglifyJS.OutputStream(options);\n    compressed_ast.print(stream);\n    var code = stream.toString(); // this is your minified code\n\nor, for a shortcut you can do:\n\n    var code = compressed_ast.print_to_string(options);\n\nAs usual, `options` is optional.  The output stream accepts a lot of otions,\nmost of them documented above in section “Beautifier options”.  The two\nwhich we care about here are `source_map` and `comments`.\n\n#### Keeping comments in the output\n\nIn order to keep certain comments in the output you need to pass the\n`comments` option.  Pass a RegExp or a function.  If you pass a RegExp, only\nthose comments whose body matches the regexp will be kept.  Note that body\nmeans without the initial `//` or `/*`.  If you pass a function, it will be\ncalled for every comment in the tree and will receive two arguments: the\nnode that the comment is attached to, and the comment token itself.\n\nThe comment token has these properties:\n\n- `type`: "comment1" for single-line comments or "comment2" for multi-line\n  comments\n- `value`: the comment body\n- `pos` and `endpos`: the start/end positions (zero-based indexes) in the\n  original code where this comment appears\n- `line` and `col`: the line and column where this comment appears in the\n  original code\n- `file` — the file name of the original file\n- `nlb` — true if there was a newline before this comment in the original\n  code, or if this comment contains a newline.\n\nYour function should return `true` to keep the comment, or a falsy value\notherwise.\n\n#### Generating a source mapping\n\nYou need to pass the `source_map` argument when calling `print`.  It needs\nto be a `SourceMap` object (which is a thin wrapper on top of the\n[source-map][source-map] library).\n\nExample:\n\n    var source_map = UglifyJS.SourceMap(source_map_options);\n    var stream = UglifyJS.OutputStream({\n        ...\n        source_map: source_map\n    });\n    compressed_ast.print(stream);\n\n    var code = stream.toString();\n    var map = source_map.toString(); // json output for your source map\n\nThe `source_map_options` (optional) can contain the following properties:\n\n- `file`: the name of the JavaScript output file that this mapping refers to\n- `root`: the `sourceRoot` property (see the [spec][sm-spec])\n- `orig`: the "original source map", handy when you compress generated JS\n  and want to map the minified output back to the original code where it\n  came from.  It can be simply a string in JSON, or a JSON object containing\n  the original source map.\n\n  [acorn]: https://github.com/marijnh/acorn\n  [source-map]: https://github.com/mozilla/source-map\n  [sm-spec]: https://docs.google.com/document/d/1U1RGAehQwRypUTovF1KRlpiOFze0b-_2gc6fAH0KY0k/edit\n  [codegen]: http://lisperator.net/uglifyjs/codegen\n  [compressor]: http://lisperator.net/uglifyjs/compress\n',
720 silly resolved     readmeFilename: 'README.md',
720 silly resolved     repository: { type: 'git', url: 'https://github.com/mishoo/UglifyJS2.git' },
720 silly resolved     bugs: { url: 'https://github.com/mishoo/UglifyJS2/issues' },
720 silly resolved     _id: 'uglify-js@2.2.5',
720 silly resolved     _from: 'uglify-js@~2.2.5' },
720 silly resolved   { name: 'promise',
720 silly resolved     version: '2.0.0',
720 silly resolved     description: 'Bare bones Promises/A+ implementation',
720 silly resolved     main: 'index.js',
720 silly resolved     scripts: { test: 'mocha -R spec --timeout 200 --slow 99999' },
720 silly resolved     repository: { type: 'git', url: 'https://github.com/then/promise.git' },
720 silly resolved     author: { name: 'ForbesLindesay' },
720 silly resolved     license: 'MIT',
720 silly resolved     dependencies: { 'is-promise': '~1' },
720 silly resolved     devDependencies:
720 silly resolved      { 'promises-aplus-tests': '*',
720 silly resolved        'mocha-as-promised': '~1.2.1',
720 silly resolved        'better-assert': '~1.0.0' },
720 silly resolved     readme: '[![Build Status](https://travis-ci.org/then/promise.png)](https://travis-ci.org/then/promise)\r\n<a href="http://promises-aplus.github.com/promises-spec"><img src="http://promises-aplus.github.com/promises-spec/assets/logo-small.png" align="right" /></a>\r\n# promise\r\n\r\n  This a bare bones [Promises/A+](http://promises-aplus.github.com/promises-spec/) implementation.\r\n\r\n  It is designed to get the basics spot on correct, so that you can build extended promise implementations on top of it.\r\n\r\n## Installation\r\n\r\n  Server:\r\n\r\n    $ npm install promise\r\n\r\n  Client:\r\n\r\n    $ component install then/promise\r\n\r\n## API\r\n\r\n  In the example below shows how you can load the promise library (in a way that works on both client and server).  It then demonstrates creating a promise from scratch.  You simply call `new Promise(fn)`.  There is a complete specification for what is returned by this method in [Promises/A+](http://promises-aplus.github.com/promises-spec/).\r\n\r\n```javascript\r\nvar Promise = require(\'promise\');\r\n\r\nvar promise = new Promise(function (resolve, reject) {\r\n    get(\'http://www.google.com\', function (err, res) {\r\n      if (err) reject(err);\r\n      else resolve(res);\r\n    });\r\n  });\r\n```\r\n\r\n## Extending Promises\r\n\r\n  There are three options for extending the promises created by this library.\r\n\r\n### Inheritance\r\n\r\n  You can use inheritance if you want to create your own complete promise library with this as your basic starting point, perfect if you have lots of cool features you want to add.  Here is an example of a promise library called `Awesome`, which is built on top of `Promise` correctly.\r\n\r\n```javascript\r\nvar Promise = require(\'promise\');\r\nfunction Awesome(fn) {\r\n  if (!(this instanceof Awesome)) return new Awesome(fn);\r\n  Promise.call(this, fn);\r\n}\r\nAwesome.prototype = Object.create(Promise.prototype);\r\nAwesome.prototype.constructor = Awesome;\r\n\r\n//Awesome extension\r\nAwesome.prototype.spread = function (cb) {\r\n  return this.then(function (arr) {\r\n    return cb.apply(this, arr);\r\n  })\r\n};\r\n```\r\n\r\n  N.B. if you fail to set the prototype and constructor properly or fail to do Promise.call, things can fail in really subtle ways.\r\n\r\n### Wrap\r\n\r\n  This is the nuclear option, for when you want to start from scratch.  It ensures you won\'t be impacted by anyone who is extending the prototype (see below).\r\n\r\n```javascript\r\nfunction Uber(fn) {\r\n  if (!(this instanceof Uber)) return new Uber(fn);\r\n  var _prom = new Promise(fn);\r\n  this.then = _prom.then;\r\n}\r\n\r\nUber.prototype.spread = function (cb) {\r\n  return this.then(function (arr) {\r\n    return cb.apply(this, arr);\r\n  })\r\n};\r\n```\r\n\r\n### Extending the Prototype\r\n\r\n  In general, you should never extend the prototype of this promise implimenation because your extensions could easily conflict with someone elses extensions.  However, this organisation will host a library of extensions which do not conflict with each other, so you can safely enable any of those.  If you think of an extension that we don\'t provide and you want to write it, submit an issue on this repository and (if I agree) I\'ll set you up with a repository and give you permission to commit to it.\r\n\r\n## License\r\n\r\n  MIT\r\n',
720 silly resolved     readmeFilename: 'Readme.md',
720 silly resolved     bugs: { url: 'https://github.com/then/promise/issues' },
720 silly resolved     homepage: 'https://github.com/then/promise',
720 silly resolved     _id: 'promise@2.0.0',
720 silly resolved     _shasum: '46648aa9d605af5d2e70c3024bf59436da02b80e',
720 silly resolved     _from: 'promise@~2.0',
720 silly resolved     _resolved: 'https://registry.npmjs.org/promise/-/promise-2.0.0.tgz' },
720 silly resolved   { name: 'css',
720 silly resolved     version: '1.0.8',
720 silly resolved     description: 'CSS parser / stringifier using css-parse and css-stringify',
720 silly resolved     keywords: [ 'css', 'parser', 'stylesheet' ],
720 silly resolved     author: { name: 'TJ Holowaychuk', email: 'tj@vision-media.ca' },
720 silly resolved     dependencies: { 'css-parse': '1.0.4', 'css-stringify': '1.0.5' },
720 silly resolved     main: 'index',
720 silly resolved     readme: '\n# css\n\n  CSS parser / stringifier using [css-parse](https://github.com/visionmedia/css-parse) and [css-stringify](https://github.com/visionmedia/css-stringify).\n\n## Installation\n\n    $ npm install css\n\n## Example\n\njs:\n\n```js\nvar css = require(\'css\')\nvar obj = css.parse(\'tobi { name: "tobi" }\')\ncss.stringify(obj);\n```\n\nobject returned by `.parse()`:\n\n```json\n{\n  "stylesheet": {\n    "rules": [\n      {\n        "selector": "tobi",\n        "declarations": [\n          {\n            "property": "name",\n            "value": "tobi"\n          }\n        ]\n      }\n    ]\n  }\n}\n```\n\nstring returned by `.stringify(ast)`:\n\n```css\ntobi {\n  name: tobi;\n}\n```\n\nstring returned by `.stringify(ast, { compress: true })`:\n\n```css\ntobi{name:tobi}\n```\n\n## License \n\n(The MIT License)\n\nCopyright (c) 2012 TJ Holowaychuk &lt;tj@vision-media.ca&gt;\n\nPermission is hereby granted, free of charge, to any person obtaining\na copy of this software and associated documentation files (the\n\'Software\'), to deal in the Software without restriction, including\nwithout limitation the rights to use, copy, modify, merge, publish,\ndistribute, sublicense, and/or sell copies of the Software, and to\npermit persons to whom the Software is furnished to do so, subject to\nthe following conditions:\n\nThe above copyright notice and this permission notice shall be\nincluded in all copies or substantial portions of the Software.\n\nTHE SOFTWARE IS PROVIDED \'AS IS\', WITHOUT WARRANTY OF ANY KIND,\nEXPRESS OR IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF\nMERCHANTABILITY, FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT.\nIN NO EVENT SHALL THE AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY\nCLAIM, DAMAGES OR OTHER LIABILITY, WHETHER IN AN ACTION OF CONTRACT,\nTORT OR OTHERWISE, ARISING FROM, OUT OF OR IN CONNECTION WITH THE\nSOFTWARE OR THE USE OR OTHER DEALINGS IN THE SOFTWARE.',
720 silly resolved     readmeFilename: 'Readme.md',
720 silly resolved     _id: 'css@1.0.8',
720 silly resolved     _shasum: '9386811ca82bccc9ee7fb5a732b1e2a317c8a3e7',
720 silly resolved     _from: 'css@~1.0.8',
720 silly resolved     _resolved: 'https://registry.npmjs.org/css/-/css-1.0.8.tgz' } ]
721 info install uglify-js@2.2.5 into /usr/local/lib/node_modules/jade/node_modules/transformers
722 info install promise@2.0.0 into /usr/local/lib/node_modules/jade/node_modules/transformers
723 info install css@1.0.8 into /usr/local/lib/node_modules/jade/node_modules/transformers
724 info installOne uglify-js@2.2.5
725 info installOne promise@2.0.0
726 info installOne css@1.0.8
727 silly resolved [ { name: 'uglify-js',
727 silly resolved     description: 'JavaScript parser, mangler/compressor and beautifier toolkit',
727 silly resolved     homepage: 'http://lisperator.net/uglifyjs',
727 silly resolved     main: 'tools/node.js',
727 silly resolved     version: '2.4.13',
727 silly resolved     engines: { node: '>=0.4.0' },
727 silly resolved     maintainers: [ [Object] ],
727 silly resolved     repository: { type: 'git', url: 'https://github.com/mishoo/UglifyJS2.git' },
727 silly resolved     dependencies:
727 silly resolved      { async: '~0.2.6',
727 silly resolved        'source-map': '~0.1.33',
727 silly resolved        optimist: '~0.3.5',
727 silly resolved        'uglify-to-browserify': '~1.0.0' },
727 silly resolved     browserify: { transform: [Object] },
727 silly resolved     bin: { uglifyjs: 'bin/uglifyjs' },
727 silly resolved     scripts: { test: 'node test/run-tests.js' },
727 silly resolved     readme: 'UglifyJS 2\n==========\n[![Build Status](https://travis-ci.org/mishoo/UglifyJS2.png)](https://travis-ci.org/mishoo/UglifyJS2)\n\nUglifyJS is a JavaScript parser, minifier, compressor or beautifier toolkit.\n\nThis page documents the command line utility.  For\n[API and internals documentation see my website](http://lisperator.net/uglifyjs/).\nThere\'s also an\n[in-browser online demo](http://lisperator.net/uglifyjs/#demo) (for Firefox,\nChrome and probably Safari).\n\nInstall\n-------\n\nFirst make sure you have installed the latest version of [node.js](http://nodejs.org/)\n(You may need to restart your computer after this step).\n\nFrom NPM for use as a command line app:\n\n    npm install uglify-js -g\n\nFrom NPM for programmatic use:\n\n    npm install uglify-js\n\nFrom Git:\n\n    git clone git://github.com/mishoo/UglifyJS2.git\n    cd UglifyJS2\n    npm link .\n\nUsage\n-----\n\n    uglifyjs [input files] [options]\n\nUglifyJS2 can take multiple input files.  It\'s recommended that you pass the\ninput files first, then pass the options.  UglifyJS will parse input files\nin sequence and apply any compression options.  The files are parsed in the\nsame global scope, that is, a reference from a file to some\nvariable/function declared in another file will be matched properly.\n\nIf you want to read from STDIN instead, pass a single dash instead of input\nfiles.\n\nThe available options are:\n\n```\n  --source-map       Specify an output file where to generate source map.\n                                                                        [string]\n  --source-map-root  The path to the original source to be included in the\n                     source map.                                        [string]\n  --source-map-url   The path to the source map to be added in //#\n                     sourceMappingURL.  Defaults to the value passed with\n                     --source-map.                                      [string]\n  --source-map-include-sources\n                     Pass this flag if you want to include the content of\n                     source files in the source map as sourcesContent\n                     property.                                         [boolean]\n  --in-source-map    Input source map, useful if you\'re compressing JS that was\n                     generated from some other original code.\n  --screw-ie8        Pass this flag if you don\'t care about full compliance\n                     with Internet Explorer 6-8 quirks (by default UglifyJS\n                     will try to be IE-proof).                         [boolean]\n  --expr             Parse a single expression, rather than a program (for\n                     parsing JSON)                                     [boolean]\n  -p, --prefix       Skip prefix for original filenames that appear in source\n                     maps. For example -p 3 will drop 3 directories from file\n                     names and ensure they are relative paths. You can also\n                     specify -p relative, which will make UglifyJS figure out\n                     itself the relative paths between original sources, the\n                     source map and the output file.                    [string]\n  -o, --output       Output file (default STDOUT).\n  -b, --beautify     Beautify output/specify output options.            [string]\n  -m, --mangle       Mangle names/pass mangler options.                 [string]\n  -r, --reserved     Reserved names to exclude from mangling.\n  -c, --compress     Enable compressor/pass compressor options. Pass options\n                     like -c hoist_vars=false,if_return=false. Use -c with no\n                     argument to use the default compression options.   [string]\n  -d, --define       Global definitions                                 [string]\n  -e, --enclose      Embed everything in a big function, with a configurable\n                     parameter/argument list.                           [string]\n  --comments         Preserve copyright comments in the output. By default this\n                     works like Google Closure, keeping JSDoc-style comments\n                     that contain "@license" or "@preserve". You can optionally\n                     pass one of the following arguments to this flag:\n                     - "all" to keep all comments\n                     - a valid JS regexp (needs to start with a slash) to keep\n                     only comments that match.\n                     Note that currently not *all* comments can be kept when\n                     compression is on, because of dead code removal or\n                     cascading statements into sequences.               [string]\n  --preamble         Preamble to prepend to the output.  You can use this to\n                     insert a comment, for example for licensing information.\n                     This will not be parsed, but the source map will adjust\n                     for its presence.\n  --stats            Display operations run time on STDERR.            [boolean]\n  --acorn            Use Acorn for parsing.                            [boolean]\n  --spidermonkey     Assume input files are SpiderMonkey AST format (as JSON).\n                                                                       [boolean]\n  --self             Build itself (UglifyJS2) as a library (implies\n                     --wrap=UglifyJS --export-all)                     [boolean]\n  --wrap             Embed everything in a big function, making the “exports”\n                     and “global” variables available. You need to pass an\n                     argument to this option to specify the name that your\n                     module will take when included in, say, a browser.\n                                                                        [string]\n  --export-all       Only used when --wrap, this tells UglifyJS to add code to\n                     automatically export all globals.                 [boolean]\n  --lint             Display some scope warnings                       [boolean]\n  -v, --verbose      Verbose                                           [boolean]\n  -V, --version      Print version number and exit.                    [boolean]\n```\n\nSpecify `--output` (`-o`) to declare the output file.  Otherwise the output\ngoes to STDOUT.\n\n## Source map options\n\nUglifyJS2 can generate a source map file, which is highly useful for\ndebugging your compressed JavaScript.  To get a source map, pass\n`--source-map output.js.map` (full path to the file where you want the\nsource map dumped).\n\nAdditionally you might need `--source-map-root` to pass the URL where the\noriginal files can be found.  In case you are passing full paths to input\nfiles to UglifyJS, you can use `--prefix` (`-p`) to specify the number of\ndirectories to drop from the path prefix when declaring files in the source\nmap.\n\nFor example:\n\n    uglifyjs /home/doe/work/foo/src/js/file1.js \\\n             /home/doe/work/foo/src/js/file2.js \\\n             -o foo.min.js \\\n             --source-map foo.min.js.map \\\n             --source-map-root http://foo.com/src \\\n             -p 5 -c -m\n\nThe above will compress and mangle `file1.js` and `file2.js`, will drop the\noutput in `foo.min.js` and the source map in `foo.min.js.map`.  The source\nmapping will refer to `http://foo.com/src/js/file1.js` and\n`http://foo.com/src/js/file2.js` (in fact it will list `http://foo.com/src`\nas the source map root, and the original files as `js/file1.js` and\n`js/file2.js`).\n\n### Composed source map\n\nWhen you\'re compressing JS code that was output by a compiler such as\nCoffeeScript, mapping to the JS code won\'t be too helpful.  Instead, you\'d\nlike to map back to the original code (i.e. CoffeeScript).  UglifyJS has an\noption to take an input source map.  Assuming you have a mapping from\nCoffeeScript → compiled JS, UglifyJS can generate a map from CoffeeScript →\ncompressed JS by mapping every token in the compiled JS to its original\nlocation.\n\nTo use this feature you need to pass `--in-source-map\n/path/to/input/source.map`.  Normally the input source map should also point\nto the file containing the generated JS, so if that\'s correct you can omit\ninput files from the command line.\n\n## Mangler options\n\nTo enable the mangler you need to pass `--mangle` (`-m`).  The following\n(comma-separated) options are supported:\n\n- `sort` — to assign shorter names to most frequently used variables.  This\n  saves a few hundred bytes on jQuery before gzip, but the output is\n  _bigger_ after gzip (and seems to happen for other libraries I tried it\n  on) therefore it\'s not enabled by default.\n\n- `toplevel` — mangle names declared in the toplevel scope (disabled by\n  default).\n\n- `eval` — mangle names visible in scopes where `eval` or `with` are used\n  (disabled by default).\n\nWhen mangling is enabled but you want to prevent certain names from being\nmangled, you can declare those names with `--reserved` (`-r`) — pass a\ncomma-separated list of names.  For example:\n\n    uglifyjs ... -m -r \'$,require,exports\'\n\nto prevent the `require`, `exports` and `$` names from being changed.\n\n## Compressor options\n\nYou need to pass `--compress` (`-c`) to enable the compressor.  Optionally\nyou can pass a comma-separated list of options.  Options are in the form\n`foo=bar`, or just `foo` (the latter implies a boolean option that you want\nto set `true`; it\'s effectively a shortcut for `foo=true`).\n\n- `sequences` -- join consecutive simple statements using the comma operator\n\n- `properties` -- rewrite property access using the dot notation, for\n  example `foo["bar"] → foo.bar`\n\n- `dead_code` -- remove unreachable code\n\n- `drop_debugger` -- remove `debugger;` statements\n\n- `unsafe` (default: false) -- apply "unsafe" transformations (discussion below)\n\n- `conditionals` -- apply optimizations for `if`-s and conditional\n  expressions\n\n- `comparisons` -- apply certain optimizations to binary nodes, for example:\n  `!(a <= b) → a > b` (only when `unsafe`), attempts to negate binary nodes,\n  e.g. `a = !b && !c && !d && !e → a=!(b||c||d||e)` etc.\n\n- `evaluate` -- attempt to evaluate constant expressions\n\n- `booleans` -- various optimizations for boolean context, for example `!!a\n  ? b : c → a ? b : c`\n\n- `loops` -- optimizations for `do`, `while` and `for` loops when we can\n  statically determine the condition\n\n- `unused` -- drop unreferenced functions and variables\n\n- `hoist_funs` -- hoist function declarations\n\n- `hoist_vars` (default: false) -- hoist `var` declarations (this is `false`\n  by default because it seems to increase the size of the output in general)\n\n- `if_return` -- optimizations for if/return and if/continue\n\n- `join_vars` -- join consecutive `var` statements\n\n- `cascade` -- small optimization for sequences, transform `x, x` into `x`\n  and `x = something(), x` into `x = something()`\n\n- `warnings` -- display warnings when dropping unreachable code or unused\n  declarations etc.\n\n- `negate_iife` -- negate "Immediately-Called Function Expressions"\n  where the return value is discarded, to avoid the parens that the\n  code generator would insert.\n\n- `pure_getters` -- the default is `false`.  If you pass `true` for\n  this, UglifyJS will assume that object property access\n  (e.g. `foo.bar` or `foo["bar"]`) doesn\'t have any side effects.\n\n- `pure_funcs` -- default `null`.  You can pass an array of names and\n  UglifyJS will assume that those functions do not produce side\n  effects.  DANGER: will not check if the name is redefined in scope.\n  An example case here, for instance `var q = Math.floor(a/b)`.  If\n  variable `q` is not used elsewhere, UglifyJS will drop it, but will\n  still keep the `Math.floor(a/b)`, not knowing what it does.  You can\n  pass `pure_funcs: [ \'Math.floor\' ]` to let it know that this\n  function won\'t produce any side effect, in which case the whole\n  statement would get discarded.  The current implementation adds some\n  overhead (compression will be slower).\n\n- `drop_console` -- default `false`.  Pass `true` to discard calls to\n  `console.*` functions.\n\n### The `unsafe` option\n\nIt enables some transformations that *might* break code logic in certain\ncontrived cases, but should be fine for most code.  You might want to try it\non your own code, it should reduce the minified size.  Here\'s what happens\nwhen this flag is on:\n\n- `new Array(1, 2, 3)` or `Array(1, 2, 3)` → `[1, 2, 3 ]`\n- `new Object()` → `{}`\n- `String(exp)` or `exp.toString()` → `"" + exp`\n- `new Object/RegExp/Function/Error/Array (...)` → we discard the `new`\n- `typeof foo == "undefined"` → `foo === void 0`\n- `void 0` → `undefined` (if there is a variable named "undefined" in\n  scope; we do it because the variable name will be mangled, typically\n  reduced to a single character).\n\n### Conditional compilation\n\nYou can use the `--define` (`-d`) switch in order to declare global\nvariables that UglifyJS will assume to be constants (unless defined in\nscope).  For example if you pass `--define DEBUG=false` then, coupled with\ndead code removal UglifyJS will discard the following from the output:\n```javascript\nif (DEBUG) {\n\tconsole.log("debug stuff");\n}\n```\n\nUglifyJS will warn about the condition being always false and about dropping\nunreachable code; for now there is no option to turn off only this specific\nwarning, you can pass `warnings=false` to turn off *all* warnings.\n\nAnother way of doing that is to declare your globals as constants in a\nseparate file and include it into the build.  For example you can have a\n`build/defines.js` file with the following:\n```javascript\nconst DEBUG = false;\nconst PRODUCTION = true;\n// etc.\n```\n\nand build your code like this:\n\n    uglifyjs build/defines.js js/foo.js js/bar.js... -c\n\nUglifyJS will notice the constants and, since they cannot be altered, it\nwill evaluate references to them to the value itself and drop unreachable\ncode as usual.  The possible downside of this approach is that the build\nwill contain the `const` declarations.\n\n<a name="codegen-options"></a>\n## Beautifier options\n\nThe code generator tries to output shortest code possible by default.  In\ncase you want beautified output, pass `--beautify` (`-b`).  Optionally you\ncan pass additional arguments that control the code output:\n\n- `beautify` (default `true`) -- whether to actually beautify the output.\n  Passing `-b` will set this to true, but you might need to pass `-b` even\n  when you want to generate minified code, in order to specify additional\n  arguments, so you can use `-b beautify=false` to override it.\n- `indent-level` (default 4)\n- `indent-start` (default 0) -- prefix all lines by that many spaces\n- `quote-keys` (default `false`) -- pass `true` to quote all keys in literal\n  objects\n- `space-colon` (default `true`) -- insert a space after the colon signs\n- `ascii-only` (default `false`) -- escape Unicode characters in strings and\n  regexps\n- `inline-script` (default `false`) -- escape the slash in occurrences of\n  `</script` in strings\n- `width` (default 80) -- only takes effect when beautification is on, this\n  specifies an (orientative) line width that the beautifier will try to\n  obey.  It refers to the width of the line text (excluding indentation).\n  It doesn\'t work very well currently, but it does make the code generated\n  by UglifyJS more readable.\n- `max-line-len` (default 32000) -- maximum line length (for uglified code)\n- `bracketize` (default `false`) -- always insert brackets in `if`, `for`,\n  `do`, `while` or `with` statements, even if their body is a single\n  statement.\n- `semicolons` (default `true`) -- separate statements with semicolons.  If\n  you pass `false` then whenever possible we will use a newline instead of a\n  semicolon, leading to more readable output of uglified code (size before\n  gzip could be smaller; size after gzip insignificantly larger).\n- `preamble` (default `null`) -- when passed it must be a string and\n  it will be prepended to the output literally.  The source map will\n  adjust for this text.  Can be used to insert a comment containing\n  licensing information, for example.\n\n### Keeping copyright notices or other comments\n\nYou can pass `--comments` to retain certain comments in the output.  By\ndefault it will keep JSDoc-style comments that contain "@preserve",\n"@license" or "@cc_on" (conditional compilation for IE).  You can pass\n`--comments all` to keep all the comments, or a valid JavaScript regexp to\nkeep only comments that match this regexp.  For example `--comments\n\'/foo|bar/\'` will keep only comments that contain "foo" or "bar".\n\nNote, however, that there might be situations where comments are lost.  For\nexample:\n```javascript\nfunction f() {\n\t/** @preserve Foo Bar */\n\tfunction g() {\n\t  // this function is never called\n\t}\n\treturn something();\n}\n```\n\nEven though it has "@preserve", the comment will be lost because the inner\nfunction `g` (which is the AST node to which the comment is attached to) is\ndiscarded by the compressor as not referenced.\n\nThe safest comments where to place copyright information (or other info that\nneeds to be kept in the output) are comments attached to toplevel nodes.\n\n## Support for the SpiderMonkey AST\n\nUglifyJS2 has its own abstract syntax tree format; for\n[practical reasons](http://lisperator.net/blog/uglifyjs-why-not-switching-to-spidermonkey-ast/)\nwe can\'t easily change to using the SpiderMonkey AST internally.  However,\nUglifyJS now has a converter which can import a SpiderMonkey AST.\n\nFor example [Acorn][acorn] is a super-fast parser that produces a\nSpiderMonkey AST.  It has a small CLI utility that parses one file and dumps\nthe AST in JSON on the standard output.  To use UglifyJS to mangle and\ncompress that:\n\n    acorn file.js | uglifyjs --spidermonkey -m -c\n\nThe `--spidermonkey` option tells UglifyJS that all input files are not\nJavaScript, but JS code described in SpiderMonkey AST in JSON.  Therefore we\ndon\'t use our own parser in this case, but just transform that AST into our\ninternal AST.\n\n### Use Acorn for parsing\n\nMore for fun, I added the `--acorn` option which will use Acorn to do all\nthe parsing.  If you pass this option, UglifyJS will `require("acorn")`.\n\nAcorn is really fast (e.g. 250ms instead of 380ms on some 650K code), but\nconverting the SpiderMonkey tree that Acorn produces takes another 150ms so\nin total it\'s a bit more than just using UglifyJS\'s own parser.\n\nAPI Reference\n-------------\n\nAssuming installation via NPM, you can load UglifyJS in your application\nlike this:\n```javascript\nvar UglifyJS = require("uglify-js");\n```\n\nIt exports a lot of names, but I\'ll discuss here the basics that are needed\nfor parsing, mangling and compressing a piece of code.  The sequence is (1)\nparse, (2) compress, (3) mangle, (4) generate output code.\n\n### The simple way\n\nThere\'s a single toplevel function which combines all the steps.  If you\ndon\'t need additional customization, you might want to go with `minify`.\nExample:\n```javascript\nvar result = UglifyJS.minify("/path/to/file.js");\nconsole.log(result.code); // minified output\n// if you need to pass code instead of file name\nvar result = UglifyJS.minify("var b = function () {};", {fromString: true});\n```\n\nYou can also compress multiple files:\n```javascript\nvar result = UglifyJS.minify([ "file1.js", "file2.js", "file3.js" ]);\nconsole.log(result.code);\n```\n\nTo generate a source map:\n```javascript\nvar result = UglifyJS.minify([ "file1.js", "file2.js", "file3.js" ], {\n\toutSourceMap: "out.js.map"\n});\nconsole.log(result.code); // minified output\nconsole.log(result.map);\n```\n\nNote that the source map is not saved in a file, it\'s just returned in\n`result.map`.  The value passed for `outSourceMap` is only used to set the\n`file` attribute in the source map (see [the spec][sm-spec]).\n\nYou can also specify sourceRoot property to be included in source map:\n```javascript\nvar result = UglifyJS.minify([ "file1.js", "file2.js", "file3.js" ], {\n\toutSourceMap: "out.js.map",\n\tsourceRoot: "http://example.com/src"\n});\n```\n\nIf you\'re compressing compiled JavaScript and have a source map for it, you\ncan use the `inSourceMap` argument:\n```javascript\nvar result = UglifyJS.minify("compiled.js", {\n\tinSourceMap: "compiled.js.map",\n\toutSourceMap: "minified.js.map"\n});\n// same as before, it returns `code` and `map`\n```\n\nThe `inSourceMap` is only used if you also request `outSourceMap` (it makes\nno sense otherwise).\n\nOther options:\n\n- `warnings` (default `false`) — pass `true` to display compressor warnings.\n\n- `fromString` (default `false`) — if you pass `true` then you can pass\n  JavaScript source code, rather than file names.\n\n- `mangle` — pass `false` to skip mangling names.\n\n- `output` (default `null`) — pass an object if you wish to specify\n  additional [output options][codegen].  The defaults are optimized\n  for best compression.\n\n- `compress` (default `{}`) — pass `false` to skip compressing entirely.\n  Pass an object to specify custom [compressor options][compressor].\n\nWe could add more options to `UglifyJS.minify` — if you need additional\nfunctionality please suggest!\n\n### The hard way\n\nFollowing there\'s more detailed API info, in case the `minify` function is\ntoo simple for your needs.\n\n#### The parser\n```javascript\nvar toplevel_ast = UglifyJS.parse(code, options);\n```\n\n`options` is optional and if present it must be an object.  The following\nproperties are available:\n\n- `strict` — disable automatic semicolon insertion and support for trailing\n  comma in arrays and objects\n- `filename` — the name of the file where this code is coming from\n- `toplevel` — a `toplevel` node (as returned by a previous invocation of\n  `parse`)\n\nThe last two options are useful when you\'d like to minify multiple files and\nget a single file as the output and a proper source map.  Our CLI tool does\nsomething like this:\n```javascript\nvar toplevel = null;\nfiles.forEach(function(file){\n\tvar code = fs.readFileSync(file, "utf8");\n\ttoplevel = UglifyJS.parse(code, {\n\t\tfilename: file,\n\t\ttoplevel: toplevel\n\t});\n});\n```\n\nAfter this, we have in `toplevel` a big AST containing all our files, with\neach token having proper information about where it came from.\n\n#### Scope information\n\nUglifyJS contains a scope analyzer that you need to call manually before\ncompressing or mangling.  Basically it augments various nodes in the AST\nwith information about where is a name defined, how many times is a name\nreferenced, if it is a global or not, if a function is using `eval` or the\n`with` statement etc.  I will discuss this some place else, for now what\'s\nimportant to know is that you need to call the following before doing\nanything with the tree:\n```javascript\ntoplevel.figure_out_scope()\n```\n\n#### Compression\n\nLike this:\n```javascript\nvar compressor = UglifyJS.Compressor(options);\nvar compressed_ast = toplevel.transform(compressor);\n```\n\nThe `options` can be missing.  Available options are discussed above in\n“Compressor options”.  Defaults should lead to best compression in most\nscripts.\n\nThe compressor is destructive, so don\'t rely that `toplevel` remains the\noriginal tree.\n\n#### Mangling\n\nAfter compression it is a good idea to call again `figure_out_scope` (since\nthe compressor might drop unused variables / unreachable code and this might\nchange the number of identifiers or their position).  Optionally, you can\ncall a trick that helps after Gzip (counting character frequency in\nnon-mangleable words).  Example:\n```javascript\ncompressed_ast.figure_out_scope();\ncompressed_ast.compute_char_frequency();\ncompressed_ast.mangle_names();\n```\n\n#### Generating output\n\nAST nodes have a `print` method that takes an output stream.  Essentially,\nto generate code you do this:\n```javascript\nvar stream = UglifyJS.OutputStream(options);\ncompressed_ast.print(stream);\nvar code = stream.toString(); // this is your minified code\n```\n\nor, for a shortcut you can do:\n```javascript\nvar code = compressed_ast.print_to_string(options);\n```\n\nAs usual, `options` is optional.  The output stream accepts a lot of otions,\nmost of them documented above in section “Beautifier options”.  The two\nwhich we care about here are `source_map` and `comments`.\n\n#### Keeping comments in the output\n\nIn order to keep certain comments in the output you need to pass the\n`comments` option.  Pass a RegExp or a function.  If you pass a RegExp, only\nthose comments whose body matches the regexp will be kept.  Note that body\nmeans without the initial `//` or `/*`.  If you pass a function, it will be\ncalled for every comment in the tree and will receive two arguments: the\nnode that the comment is attached to, and the comment token itself.\n\nThe comment token has these properties:\n\n- `type`: "comment1" for single-line comments or "comment2" for multi-line\n  comments\n- `value`: the comment body\n- `pos` and `endpos`: the start/end positions (zero-based indexes) in the\n  original code where this comment appears\n- `line` and `col`: the line and column where this comment appears in the\n  original code\n- `file` — the file name of the original file\n- `nlb` — true if there was a newline before this comment in the original\n  code, or if this comment contains a newline.\n\nYour function should return `true` to keep the comment, or a falsy value\notherwise.\n\n#### Generating a source mapping\n\nYou need to pass the `source_map` argument when calling `print`.  It needs\nto be a `SourceMap` object (which is a thin wrapper on top of the\n[source-map][source-map] library).\n\nExample:\n```javascript\nvar source_map = UglifyJS.SourceMap(source_map_options);\nvar stream = UglifyJS.OutputStream({\n\t...\n\tsource_map: source_map\n});\ncompressed_ast.print(stream);\n\nvar code = stream.toString();\nvar map = source_map.toString(); // json output for your source map\n```\n\nThe `source_map_options` (optional) can contain the following properties:\n\n- `file`: the name of the JavaScript output file that this mapping refers to\n- `root`: the `sourceRoot` property (see the [spec][sm-spec])\n- `orig`: the "original source map", handy when you compress generated JS\n  and want to map the minified output back to the original code where it\n  came from.  It can be simply a string in JSON, or a JSON object containing\n  the original source map.\n\n  [acorn]: https://github.com/marijnh/acorn\n  [source-map]: https://github.com/mozilla/source-map\n  [sm-spec]: https://docs.google.com/document/d/1U1RGAehQwRypUTovF1KRlpiOFze0b-_2gc6fAH0KY0k/edit\n  [codegen]: http://lisperator.net/uglifyjs/codegen\n  [compressor]: http://lisperator.net/uglifyjs/compress\n',
727 silly resolved     readmeFilename: 'README.md',
727 silly resolved     bugs: { url: 'https://github.com/mishoo/UglifyJS2/issues' },
727 silly resolved     _id: 'uglify-js@2.4.13',
727 silly resolved     _from: 'uglify-js@~2.4.12' } ]
728 info install uglify-js@2.4.13 into /usr/local/lib/node_modules/jade/node_modules/with
729 info installOne uglify-js@2.4.13
730 info /usr/local/lib/node_modules/jade/node_modules/transformers/node_modules/uglify-js unbuild
731 info /usr/local/lib/node_modules/jade/node_modules/transformers/node_modules/promise unbuild
732 info /usr/local/lib/node_modules/jade/node_modules/transformers/node_modules/css unbuild
733 info /usr/local/lib/node_modules/jade/node_modules/with/node_modules/uglify-js unbuild
734 verbose tar unpack /Users/marc.bluemner/.npm/readdirp/0.2.5/package.tgz
735 silly lockFile ed76c268-es-monocle-node-modules-readdirp tar:///usr/local/lib/node_modules/jade/node_modules/monocle/node_modules/readdirp
736 verbose lock tar:///usr/local/lib/node_modules/jade/node_modules/monocle/node_modules/readdirp /Users/marc.bluemner/.npm/ed76c268-es-monocle-node-modules-readdirp.lock
737 silly lockFile 8ddbb90b-r-npm-readdirp-0-2-5-package-tgz tar:///Users/marc.bluemner/.npm/readdirp/0.2.5/package.tgz
738 verbose lock tar:///Users/marc.bluemner/.npm/readdirp/0.2.5/package.tgz /Users/marc.bluemner/.npm/8ddbb90b-r-npm-readdirp-0-2-5-package-tgz.lock
739 verbose tar unpack /Users/marc.bluemner/.npm/uglify-js/2.2.5/package.tgz
740 silly lockFile 30f47d72-nsformers-node-modules-uglify-js tar:///usr/local/lib/node_modules/jade/node_modules/transformers/node_modules/uglify-js
741 verbose lock tar:///usr/local/lib/node_modules/jade/node_modules/transformers/node_modules/uglify-js /Users/marc.bluemner/.npm/30f47d72-nsformers-node-modules-uglify-js.lock
742 silly lockFile e6c5d611--npm-uglify-js-2-2-5-package-tgz tar:///Users/marc.bluemner/.npm/uglify-js/2.2.5/package.tgz
743 verbose lock tar:///Users/marc.bluemner/.npm/uglify-js/2.2.5/package.tgz /Users/marc.bluemner/.npm/e6c5d611--npm-uglify-js-2-2-5-package-tgz.lock
744 verbose tar unpack /Users/marc.bluemner/.npm/promise/2.0.0/package.tgz
745 silly lockFile 2faeef85-ransformers-node-modules-promise tar:///usr/local/lib/node_modules/jade/node_modules/transformers/node_modules/promise
746 verbose lock tar:///usr/local/lib/node_modules/jade/node_modules/transformers/node_modules/promise /Users/marc.bluemner/.npm/2faeef85-ransformers-node-modules-promise.lock
747 silly lockFile 9b565a19-er-npm-promise-2-0-0-package-tgz tar:///Users/marc.bluemner/.npm/promise/2.0.0/package.tgz
748 verbose lock tar:///Users/marc.bluemner/.npm/promise/2.0.0/package.tgz /Users/marc.bluemner/.npm/9b565a19-er-npm-promise-2-0-0-package-tgz.lock
749 verbose tar unpack /Users/marc.bluemner/.npm/css/1.0.8/package.tgz
750 silly lockFile 00c9f3da-es-transformers-node-modules-css tar:///usr/local/lib/node_modules/jade/node_modules/transformers/node_modules/css
751 verbose lock tar:///usr/local/lib/node_modules/jade/node_modules/transformers/node_modules/css /Users/marc.bluemner/.npm/00c9f3da-es-transformers-node-modules-css.lock
752 silly lockFile bb80666a-uemner-npm-css-1-0-8-package-tgz tar:///Users/marc.bluemner/.npm/css/1.0.8/package.tgz
753 verbose lock tar:///Users/marc.bluemner/.npm/css/1.0.8/package.tgz /Users/marc.bluemner/.npm/bb80666a-uemner-npm-css-1-0-8-package-tgz.lock
754 verbose tar unpack /Users/marc.bluemner/.npm/uglify-js/2.4.13/package.tgz
755 silly lockFile 1f13d609-ules-with-node-modules-uglify-js tar:///usr/local/lib/node_modules/jade/node_modules/with/node_modules/uglify-js
756 verbose lock tar:///usr/local/lib/node_modules/jade/node_modules/with/node_modules/uglify-js /Users/marc.bluemner/.npm/1f13d609-ules-with-node-modules-uglify-js.lock
757 silly lockFile 97319dfd-npm-uglify-js-2-4-13-package-tgz tar:///Users/marc.bluemner/.npm/uglify-js/2.4.13/package.tgz
758 verbose lock tar:///Users/marc.bluemner/.npm/uglify-js/2.4.13/package.tgz /Users/marc.bluemner/.npm/97319dfd-npm-uglify-js-2-4-13-package-tgz.lock
759 silly gunzTarPerm modes [ '755', '644' ]
760 silly gunzTarPerm modes [ '755', '644' ]
761 silly gunzTarPerm modes [ '755', '644' ]
762 silly gunzTarPerm modes [ '755', '644' ]
763 silly gunzTarPerm modes [ '755', '644' ]
764 silly gunzTarPerm extractEntry package.json
765 silly gunzTarPerm modified mode [ 'package.json', 438, 420 ]
766 silly gunzTarPerm extractEntry package.json
767 silly gunzTarPerm extractEntry package.json
768 silly gunzTarPerm extractEntry package.json
769 silly gunzTarPerm extractEntry .npmignore
770 silly gunzTarPerm modified mode [ '.npmignore', 438, 420 ]
771 silly gunzTarPerm extractEntry index.js
772 silly gunzTarPerm modified mode [ 'index.js', 438, 420 ]
773 silly gunzTarPerm extractEntry package.json
774 silly gunzTarPerm extractEntry .npmignore
775 silly gunzTarPerm extractEntry benchmark.js
776 silly gunzTarPerm extractEntry .npmignore
777 silly gunzTarPerm extractEntry README.md
778 silly gunzTarPerm extractEntry .npmignore
779 silly gunzTarPerm extractEntry README.md
780 silly gunzTarPerm extractEntry .npmignore
781 silly gunzTarPerm extractEntry README.md
782 silly gunzTarPerm extractEntry index.js
783 silly gunzTarPerm extractEntry test.js
784 silly gunzTarPerm extractEntry Readme.md
785 silly gunzTarPerm modified mode [ 'Readme.md', 438, 420 ]
786 silly gunzTarPerm extractEntry LICENSE
787 silly gunzTarPerm extractEntry LICENSE
788 silly gunzTarPerm extractEntry readdirp.js
789 silly gunzTarPerm extractEntry bin/uglifyjs
790 silly gunzTarPerm extractEntry component.json
791 silly gunzTarPerm extractEntry History.md
792 silly gunzTarPerm extractEntry .travis.yml
793 silly gunzTarPerm extractEntry bin/uglifyjs
794 silly gunzTarPerm extractEntry stream-api.js
795 silly gunzTarPerm extractEntry lib/ast.js
796 silly gunzTarPerm extractEntry lib/compress.js
797 silly gunzTarPerm extractEntry Makefile
798 silly gunzTarPerm extractEntry Readme.md
799 silly gunzTarPerm extractEntry .travis.yml
800 silly gunzTarPerm extractEntry examples/package.json
801 silly gunzTarPerm extractEntry examples/callback-api.js
802 silly gunzTarPerm extractEntry examples/grep.js
803 silly gunzTarPerm extractEntry lib/mozilla-ast.js
804 silly gunzTarPerm extractEntry lib/output.js
805 silly gunzTarPerm extractEntry lib/ast.js
806 silly gunzTarPerm extractEntry lib/compress.js
807 silly gunzTarPerm extractEntry examples/stream-api-pipe.js
808 silly gunzTarPerm extractEntry examples/stream-api.js
809 silly gunzTarPerm extractEntry lib/mozilla-ast.js
810 silly gunzTarPerm extractEntry lib/output.js
811 silly gunzTarPerm extractEntry examples/Readme.md
812 silly gunzTarPerm extractEntry examples/node_modules/event-stream/package.json
813 silly gunzTarPerm extractEntry lib/parse.js
814 silly gunzTarPerm extractEntry lib/scope.js
815 silly gunzTarPerm extractEntry examples/node_modules/event-stream/.npmignore
816 silly gunzTarPerm extractEntry examples/node_modules/event-stream/LICENCE
817 silly gunzTarPerm extractEntry lib/parse.js
818 silly gunzTarPerm extractEntry lib/scope.js
819 silly gunzTarPerm extractEntry examples/node_modules/event-stream/index.js
820 silly gunzTarPerm extractEntry examples/node_modules/event-stream/.travis.yml
821 silly gunzTarPerm extractEntry examples/node_modules/event-stream/examples/pretty.js
822 silly gunzTarPerm extractEntry examples/node_modules/event-stream/readme.markdown
823 silly gunzTarPerm extractEntry lib/sourcemap.js
824 silly gunzTarPerm extractEntry lib/transform.js
825 silly gunzTarPerm extractEntry lib/utils.js
826 silly gunzTarPerm extractEntry test/run-tests.js
827 silly gunzTarPerm extractEntry test/compress/arrays.js
828 silly gunzTarPerm extractEntry test/compress/issue-12.js
829 silly gunzTarPerm extractEntry test/compress/issue-126.js
830 silly gunzTarPerm extractEntry test/compress/issue-143.js
831 silly gunzTarPerm extractEntry test/compress/issue-105.js
832 silly gunzTarPerm extractEntry test/compress/issue-267.js
833 silly gunzTarPerm extractEntry test/compress/issue-269.js
834 silly gunzTarPerm extractEntry test/compress/issue-44.js
835 silly gunzTarPerm extractEntry test/compress/issue-59.js
836 silly gunzTarPerm extractEntry test/compress/labels.js
837 silly gunzTarPerm extractEntry test/compress/drop-unused.js
838 silly gunzTarPerm extractEntry test/compress/loops.js
839 silly gunzTarPerm extractEntry test/compress/debugger.js
840 silly gunzTarPerm extractEntry test/compress/negate-iife.js
841 silly gunzTarPerm extractEntry test/compress/dead-code.js
842 silly gunzTarPerm extractEntry test/compress/properties.js
843 silly gunzTarPerm extractEntry test/compress/conditionals.js
844 silly gunzTarPerm extractEntry test/compress/sequences.js
845 silly gunzTarPerm extractEntry test/compress/concat-strings.js
846 silly gunzTarPerm extractEntry test/compress/switch.js
847 silly gunzTarPerm extractEntry test/compress/blocks.js
848 silly gunzTarPerm extractEntry test/compress/typeof.js
849 silly gunzTarPerm extractEntry test/compress/issue-22.js
850 silly gunzTarPerm extractEntry tools/node.js
851 silly lockFile 2faeef85-ransformers-node-modules-promise tar:///usr/local/lib/node_modules/jade/node_modules/transformers/node_modules/promise
852 silly lockFile 2faeef85-ransformers-node-modules-promise tar:///usr/local/lib/node_modules/jade/node_modules/transformers/node_modules/promise
853 silly gunzTarPerm extractEntry examples/node_modules/event-stream/test/connect.asynct.js
854 silly gunzTarPerm extractEntry examples/node_modules/event-stream/test/pause.asynct.js
855 silly lockFile 9b565a19-er-npm-promise-2-0-0-package-tgz tar:///Users/marc.bluemner/.npm/promise/2.0.0/package.tgz
856 silly lockFile 9b565a19-er-npm-promise-2-0-0-package-tgz tar:///Users/marc.bluemner/.npm/promise/2.0.0/package.tgz
857 info preinstall promise@2.0.0
858 verbose readDependencies using package.json deps
859 silly gunzTarPerm extractEntry examples/node_modules/event-stream/test/pipeline.asynct.js
860 silly gunzTarPerm extractEntry examples/node_modules/event-stream/test/readable.asynct.js
861 verbose readDependencies using package.json deps
862 silly gunzTarPerm extractEntry examples/node_modules/event-stream/test/readArray.asynct.js
863 silly gunzTarPerm extractEntry examples/node_modules/event-stream/test/merge.asynct.js
864 verbose cache add [ 'is-promise@~1', null ]
865 verbose cache add name=undefined spec="is-promise@~1" args=["is-promise@~1",null]
866 verbose parsed url { protocol: null,
866 verbose parsed url   slashes: null,
866 verbose parsed url   auth: null,
866 verbose parsed url   host: null,
866 verbose parsed url   port: null,
866 verbose parsed url   hostname: null,
866 verbose parsed url   hash: null,
866 verbose parsed url   search: null,
866 verbose parsed url   query: null,
866 verbose parsed url   pathname: 'is-promise@~1',
866 verbose parsed url   path: 'is-promise@~1',
866 verbose parsed url   href: 'is-promise@~1' }
867 verbose cache add name="is-promise" spec="~1" args=["is-promise","~1"]
868 verbose parsed url { protocol: null,
868 verbose parsed url   slashes: null,
868 verbose parsed url   auth: null,
868 verbose parsed url   host: null,
868 verbose parsed url   port: null,
868 verbose parsed url   hostname: null,
868 verbose parsed url   hash: null,
868 verbose parsed url   search: null,
868 verbose parsed url   query: null,
868 verbose parsed url   pathname: '~1',
868 verbose parsed url   path: '~1',
868 verbose parsed url   href: '~1' }
869 verbose addNamed [ 'is-promise', '~1' ]
870 verbose addNamed [ null, '>=1.0.0-0 <2.0.0-0' ]
871 silly lockFile 7e480b0f-is-promise-1 is-promise@~1
872 verbose lock is-promise@~1 /Users/marc.bluemner/.npm/7e480b0f-is-promise-1.lock
873 silly addNameRange { name: 'is-promise',
873 silly addNameRange   range: '>=1.0.0-0 <2.0.0-0',
873 silly addNameRange   hasData: false }
874 silly lockFile 00c9f3da-es-transformers-node-modules-css tar:///usr/local/lib/node_modules/jade/node_modules/transformers/node_modules/css
875 silly lockFile 00c9f3da-es-transformers-node-modules-css tar:///usr/local/lib/node_modules/jade/node_modules/transformers/node_modules/css
876 silly lockFile bb80666a-uemner-npm-css-1-0-8-package-tgz tar:///Users/marc.bluemner/.npm/css/1.0.8/package.tgz
877 silly lockFile bb80666a-uemner-npm-css-1-0-8-package-tgz tar:///Users/marc.bluemner/.npm/css/1.0.8/package.tgz
878 info preinstall css@1.0.8
879 silly gunzTarPerm extractEntry examples/node_modules/event-stream/test/simple-map.asynct.js
880 silly gunzTarPerm extractEntry examples/node_modules/event-stream/test/spec.asynct.js
881 verbose readDependencies using package.json deps
882 silly gunzTarPerm extractEntry lib/sourcemap.js
883 silly gunzTarPerm extractEntry lib/transform.js
884 verbose readDependencies using package.json deps
885 verbose cache add [ 'css-parse@1.0.4', null ]
886 verbose cache add name=undefined spec="css-parse@1.0.4" args=["css-parse@1.0.4",null]
887 verbose parsed url { protocol: null,
887 verbose parsed url   slashes: null,
887 verbose parsed url   auth: null,
887 verbose parsed url   host: null,
887 verbose parsed url   port: null,
887 verbose parsed url   hostname: null,
887 verbose parsed url   hash: null,
887 verbose parsed url   search: null,
887 verbose parsed url   query: null,
887 verbose parsed url   pathname: 'css-parse@1.0.4',
887 verbose parsed url   path: 'css-parse@1.0.4',
887 verbose parsed url   href: 'css-parse@1.0.4' }
888 verbose cache add name="css-parse" spec="1.0.4" args=["css-parse","1.0.4"]
889 verbose parsed url { protocol: null,
889 verbose parsed url   slashes: null,
889 verbose parsed url   auth: null,
889 verbose parsed url   host: null,
889 verbose parsed url   port: null,
889 verbose parsed url   hostname: null,
889 verbose parsed url   hash: null,
889 verbose parsed url   search: null,
889 verbose parsed url   query: null,
889 verbose parsed url   pathname: '1.0.4',
889 verbose parsed url   path: '1.0.4',
889 verbose parsed url   href: '1.0.4' }
890 verbose addNamed [ 'css-parse', '1.0.4' ]
891 verbose addNamed [ '1.0.4', '1.0.4' ]
892 silly lockFile cd476481-css-parse-1-0-4 css-parse@1.0.4
893 verbose lock css-parse@1.0.4 /Users/marc.bluemner/.npm/cd476481-css-parse-1-0-4.lock
894 verbose cache add [ 'css-stringify@1.0.5', null ]
895 verbose cache add name=undefined spec="css-stringify@1.0.5" args=["css-stringify@1.0.5",null]
896 verbose parsed url { protocol: null,
896 verbose parsed url   slashes: null,
896 verbose parsed url   auth: null,
896 verbose parsed url   host: null,
896 verbose parsed url   port: null,
896 verbose parsed url   hostname: null,
896 verbose parsed url   hash: null,
896 verbose parsed url   search: null,
896 verbose parsed url   query: null,
896 verbose parsed url   pathname: 'css-stringify@1.0.5',
896 verbose parsed url   path: 'css-stringify@1.0.5',
896 verbose parsed url   href: 'css-stringify@1.0.5' }
897 verbose cache add name="css-stringify" spec="1.0.5" args=["css-stringify","1.0.5"]
898 verbose parsed url { protocol: null,
898 verbose parsed url   slashes: null,
898 verbose parsed url   auth: null,
898 verbose parsed url   host: null,
898 verbose parsed url   port: null,
898 verbose parsed url   hostname: null,
898 verbose parsed url   hash: null,
898 verbose parsed url   search: null,
898 verbose parsed url   query: null,
898 verbose parsed url   pathname: '1.0.5',
898 verbose parsed url   path: '1.0.5',
898 verbose parsed url   href: '1.0.5' }
899 verbose addNamed [ 'css-stringify', '1.0.5' ]
900 verbose addNamed [ '1.0.5', '1.0.5' ]
901 silly lockFile cee81f18-css-stringify-1-0-5 css-stringify@1.0.5
902 verbose lock css-stringify@1.0.5 /Users/marc.bluemner/.npm/cee81f18-css-stringify-1-0-5.lock
903 verbose url raw is-promise
904 verbose url resolving [ 'https://registry.npmjs.org/', './is-promise' ]
905 verbose url resolved https://registry.npmjs.org/is-promise
906 info trying registry request attempt 1 at 19:04:02
907 verbose etag "A86V0UOC3VUCBBORE48L5UISQ"
908 http GET https://registry.npmjs.org/is-promise
909 silly gunzTarPerm extractEntry examples/node_modules/event-stream/test/split.asynct.js
910 silly gunzTarPerm extractEntry examples/node_modules/event-stream/test/stringify.js
911 silly gunzTarPerm extractEntry examples/node_modules/event-stream/test/writeArray.asynct.js
912 silly gunzTarPerm extractEntry examples/node_modules/event-stream/test/replace.asynct.js
913 verbose url raw css-parse
914 verbose url resolving [ 'https://registry.npmjs.org/', './css-parse' ]
915 verbose url resolved https://registry.npmjs.org/css-parse
916 info trying registry request attempt 1 at 19:04:02
917 verbose etag "6BXOGAP55YA6GWKVZ5L6NZF73"
918 http GET https://registry.npmjs.org/css-parse
919 silly gunzTarPerm extractEntry examples/node_modules/event-stream/node_modules/duplexer/package.json
920 silly gunzTarPerm extractEntry examples/node_modules/event-stream/node_modules/duplexer/.npmignore
921 silly gunzTarPerm extractEntry examples/node_modules/event-stream/node_modules/duplexer/README.md
922 silly gunzTarPerm extractEntry examples/node_modules/event-stream/node_modules/duplexer/LICENCE
923 silly gunzTarPerm extractEntry examples/node_modules/event-stream/node_modules/duplexer/index.js
924 silly gunzTarPerm extractEntry examples/node_modules/event-stream/node_modules/duplexer/test.js
925 silly gunzTarPerm extractEntry examples/node_modules/event-stream/node_modules/duplexer/.travis.yml
926 silly gunzTarPerm extractEntry examples/node_modules/event-stream/node_modules/duplexer/Makefile
927 silly gunzTarPerm extractEntry examples/node_modules/event-stream/node_modules/from/package.json
928 silly gunzTarPerm extractEntry examples/node_modules/event-stream/node_modules/from/index.js
929 silly gunzTarPerm extractEntry examples/node_modules/event-stream/node_modules/from/LICENSE.APACHE2
930 silly gunzTarPerm extractEntry examples/node_modules/event-stream/node_modules/from/LICENSE.MIT
931 silly gunzTarPerm extractEntry examples/node_modules/event-stream/node_modules/from/readme.markdown
932 silly gunzTarPerm extractEntry examples/node_modules/event-stream/node_modules/from/test/index.js
933 silly gunzTarPerm extractEntry lib/utils.js
934 silly gunzTarPerm extractEntry test/run-tests.js
935 silly gunzTarPerm extractEntry test/compress/arrays.js
936 silly gunzTarPerm extractEntry test/compress/debugger.js
937 silly gunzTarPerm extractEntry test/compress/drop-unused.js
938 silly gunzTarPerm extractEntry test/compress/issue-105.js
939 silly gunzTarPerm extractEntry test/compress/issue-12.js
940 silly gunzTarPerm extractEntry test/compress/dead-code.js
941 silly gunzTarPerm extractEntry test/compress/issue-44.js
942 silly gunzTarPerm extractEntry test/compress/issue-59.js
943 silly gunzTarPerm extractEntry test/compress/labels.js
944 silly gunzTarPerm extractEntry test/compress/loops.js
945 silly gunzTarPerm extractEntry test/compress/properties.js
946 silly gunzTarPerm extractEntry test/compress/conditionals.js
947 silly gunzTarPerm extractEntry test/compress/sequences.js
948 silly gunzTarPerm extractEntry test/compress/blocks.js
949 silly gunzTarPerm extractEntry test/compress/switch.js
950 silly gunzTarPerm extractEntry test/compress/issue-22.js
951 silly gunzTarPerm extractEntry tools/node.js
952 silly gunzTarPerm extractEntry examples/node_modules/event-stream/node_modules/map-stream/package.json
953 silly gunzTarPerm extractEntry examples/node_modules/event-stream/node_modules/map-stream/.npmignore
954 http 304 https://registry.npmjs.org/uglify-js
955 silly registry.get cb [ 304,
955 silly registry.get   { date: 'Mon, 26 May 2014 17:04:02 GMT',
955 silly registry.get     server: 'Apache',
955 silly registry.get     via: '1.1 varnish',
955 silly registry.get     'last-modified': 'Mon, 26 May 2014 17:04:02 GMT',
955 silly registry.get     'cache-control': 'max-age=1',
955 silly registry.get     etag: '"77YHBYGFATO47B8YMQURMBMO7"',
955 silly registry.get     'x-served-by': 'cache-lcy1131-LCY',
955 silly registry.get     'x-cache': 'HIT',
955 silly registry.get     'x-cache-hits': '1',
955 silly registry.get     'x-timer': 'S1401123842.457584,VS0,VE81',
955 silly registry.get     vary: 'Accept',
955 silly registry.get     'content-length': '0',
955 silly registry.get     'keep-alive': 'timeout=10, max=50',
955 silly registry.get     connection: 'Keep-Alive' } ]
956 verbose etag uglify-js from cache
957 silly addNameRange number 2 { name: 'uglify-js', range: '>=2.4.0-0 <2.5.0-0', hasData: true }
958 silly addNameRange versions [ 'uglify-js',
958 silly addNameRange   [ '0.0.1',
958 silly addNameRange     '0.0.2',
958 silly addNameRange     '0.0.3',
958 silly addNameRange     '0.0.4',
958 silly addNameRange     '0.0.5',
958 silly addNameRange     '1.0.1',
958 silly addNameRange     '1.0.2',
958 silly addNameRange     '1.0.3',
958 silly addNameRange     '1.0.4',
958 silly addNameRange     '1.0.5',
958 silly addNameRange     '1.0.6',
958 silly addNameRange     '1.0.7',
958 silly addNameRange     '1.1.0',
958 silly addNameRange     '1.1.1',
958 silly addNameRange     '1.2.0',
958 silly addNameRange     '1.2.1',
958 silly addNameRange     '1.2.2',
958 silly addNameRange     '1.2.3',
958 silly addNameRange     '1.2.4',
958 silly addNameRange     '1.2.5',
958 silly addNameRange     '1.2.6',
958 silly addNameRange     '1.3.0',
958 silly addNameRange     '1.3.1',
958 silly addNameRange     '1.3.2',
958 silly addNameRange     '1.3.3',
958 silly addNameRange     '1.3.4',
958 silly addNameRange     '2.2.0',
958 silly addNameRange     '2.2.1',
958 silly addNameRange     '2.2.2',
958 silly addNameRange     '2.2.3',
958 silly addNameRange     '2.2.4',
958 silly addNameRange     '2.2.5',
958 silly addNameRange     '2.3.0',
958 silly addNameRange     '2.3.1',
958 silly addNameRange     '2.3.2',
958 silly addNameRange     '2.3.3',
958 silly addNameRange     '2.3.4',
958 silly addNameRange     '2.3.5',
958 silly addNameRange     '2.3.6',
958 silly addNameRange     '1.3.5',
958 silly addNameRange     '2.4.0',
958 silly addNameRange     '2.4.1',
958 silly addNameRange     '2.4.2',
958 silly addNameRange     '2.4.3',
958 silly addNameRange     '2.4.4',
958 silly addNameRange     '2.4.5',
958 silly addNameRange     '2.4.6',
958 silly addNameRange     '2.4.7',
958 silly addNameRange     '2.4.8',
958 silly addNameRange     '2.4.9',
958 silly addNameRange     '2.4.10',
958 silly addNameRange     '2.4.11',
958 silly addNameRange     '2.4.12',
958 silly addNameRange     '2.4.13' ] ]
959 verbose addNamed [ 'uglify-js', '2.4.13' ]
960 verbose addNamed [ '2.4.13', '2.4.13' ]
961 silly lockFile cc296735-uglify-js-2-4-13 uglify-js@2.4.13
962 verbose lock uglify-js@2.4.13 /Users/marc.bluemner/.npm/cc296735-uglify-js-2-4-13.lock
963 silly lockFile cc296735-uglify-js-2-4-13 uglify-js@2.4.13
964 silly lockFile cc296735-uglify-js-2-4-13 uglify-js@2.4.13
965 silly lockFile 1d881e0f-uglify-js-2-4-0 uglify-js@~2.4.0
966 silly lockFile 1d881e0f-uglify-js-2-4-0 uglify-js@~2.4.0
967 verbose url raw css-stringify
968 verbose url resolving [ 'https://registry.npmjs.org/', './css-stringify' ]
969 verbose url resolved https://registry.npmjs.org/css-stringify
970 info trying registry request attempt 1 at 19:04:02
971 verbose etag "CXFOJSWJPME67ZKO9AVZQTSUG"
972 http GET https://registry.npmjs.org/css-stringify
973 silly gunzTarPerm extractEntry examples/node_modules/event-stream/node_modules/map-stream/LICENCE
974 silly gunzTarPerm extractEntry examples/node_modules/event-stream/node_modules/map-stream/index.js
975 silly gunzTarPerm extractEntry examples/node_modules/event-stream/node_modules/map-stream/.travis.yml
976 silly gunzTarPerm extractEntry examples/node_modules/event-stream/node_modules/map-stream/examples/pretty.js
977 silly gunzTarPerm extractEntry examples/node_modules/event-stream/node_modules/map-stream/readme.markdown
978 silly gunzTarPerm extractEntry examples/node_modules/event-stream/node_modules/map-stream/test/simple-map.asynct.js
979 silly gunzTarPerm extractEntry examples/node_modules/event-stream/node_modules/optimist/package.json
980 silly gunzTarPerm extractEntry examples/node_modules/event-stream/node_modules/optimist/.npmignore
981 silly gunzTarPerm extractEntry examples/node_modules/event-stream/node_modules/optimist/LICENSE
982 silly gunzTarPerm extractEntry examples/node_modules/event-stream/node_modules/optimist/index.js
983 silly gunzTarPerm extractEntry examples/node_modules/event-stream/node_modules/optimist/examples/bool.js
984 silly gunzTarPerm extractEntry examples/node_modules/event-stream/node_modules/optimist/examples/default_singles.js
985 silly gunzTarPerm extractEntry examples/node_modules/event-stream/node_modules/optimist/examples/divide.js
986 silly gunzTarPerm extractEntry examples/node_modules/event-stream/node_modules/optimist/examples/line_count.js
987 silly gunzTarPerm extractEntry examples/node_modules/event-stream/node_modules/optimist/examples/default_hash.js
988 silly gunzTarPerm extractEntry examples/node_modules/event-stream/node_modules/optimist/examples/line_count_wrap.js
989 silly gunzTarPerm extractEntry examples/node_modules/event-stream/node_modules/optimist/examples/nonopt.js
990 silly gunzTarPerm extractEntry examples/node_modules/event-stream/node_modules/optimist/examples/reflect.js
991 silly gunzTarPerm extractEntry examples/node_modules/event-stream/node_modules/optimist/examples/short.js
992 silly gunzTarPerm extractEntry examples/node_modules/event-stream/node_modules/optimist/examples/string.js
993 silly gunzTarPerm extractEntry examples/node_modules/event-stream/node_modules/optimist/examples/boolean_single.js
994 silly gunzTarPerm extractEntry examples/node_modules/event-stream/node_modules/optimist/examples/usage-options.js
995 silly resolved [ { name: 'uglify-js',
995 silly resolved     description: 'JavaScript parser, mangler/compressor and beautifier toolkit',
995 silly resolved     homepage: 'http://lisperator.net/uglifyjs',
995 silly resolved     main: 'tools/node.js',
995 silly resolved     version: '2.4.13',
995 silly resolved     engines: { node: '>=0.4.0' },
995 silly resolved     maintainers: [ [Object] ],
995 silly resolved     repository: { type: 'git', url: 'https://github.com/mishoo/UglifyJS2.git' },
995 silly resolved     dependencies:
995 silly resolved      { async: '~0.2.6',
995 silly resolved        'source-map': '~0.1.33',
995 silly resolved        optimist: '~0.3.5',
995 silly resolved        'uglify-to-browserify': '~1.0.0' },
995 silly resolved     browserify: { transform: [Object] },
995 silly resolved     bin: { uglifyjs: 'bin/uglifyjs' },
995 silly resolved     scripts: { test: 'node test/run-tests.js' },
995 silly resolved     readme: 'UglifyJS 2\n==========\n[![Build Status](https://travis-ci.org/mishoo/UglifyJS2.png)](https://travis-ci.org/mishoo/UglifyJS2)\n\nUglifyJS is a JavaScript parser, minifier, compressor or beautifier toolkit.\n\nThis page documents the command line utility.  For\n[API and internals documentation see my website](http://lisperator.net/uglifyjs/).\nThere\'s also an\n[in-browser online demo](http://lisperator.net/uglifyjs/#demo) (for Firefox,\nChrome and probably Safari).\n\nInstall\n-------\n\nFirst make sure you have installed the latest version of [node.js](http://nodejs.org/)\n(You may need to restart your computer after this step).\n\nFrom NPM for use as a command line app:\n\n    npm install uglify-js -g\n\nFrom NPM for programmatic use:\n\n    npm install uglify-js\n\nFrom Git:\n\n    git clone git://github.com/mishoo/UglifyJS2.git\n    cd UglifyJS2\n    npm link .\n\nUsage\n-----\n\n    uglifyjs [input files] [options]\n\nUglifyJS2 can take multiple input files.  It\'s recommended that you pass the\ninput files first, then pass the options.  UglifyJS will parse input files\nin sequence and apply any compression options.  The files are parsed in the\nsame global scope, that is, a reference from a file to some\nvariable/function declared in another file will be matched properly.\n\nIf you want to read from STDIN instead, pass a single dash instead of input\nfiles.\n\nThe available options are:\n\n```\n  --source-map       Specify an output file where to generate source map.\n                                                                        [string]\n  --source-map-root  The path to the original source to be included in the\n                     source map.                                        [string]\n  --source-map-url   The path to the source map to be added in //#\n                     sourceMappingURL.  Defaults to the value passed with\n                     --source-map.                                      [string]\n  --source-map-include-sources\n                     Pass this flag if you want to include the content of\n                     source files in the source map as sourcesContent\n                     property.                                         [boolean]\n  --in-source-map    Input source map, useful if you\'re compressing JS that was\n                     generated from some other original code.\n  --screw-ie8        Pass this flag if you don\'t care about full compliance\n                     with Internet Explorer 6-8 quirks (by default UglifyJS\n                     will try to be IE-proof).                         [boolean]\n  --expr             Parse a single expression, rather than a program (for\n                     parsing JSON)                                     [boolean]\n  -p, --prefix       Skip prefix for original filenames that appear in source\n                     maps. For example -p 3 will drop 3 directories from file\n                     names and ensure they are relative paths. You can also\n                     specify -p relative, which will make UglifyJS figure out\n                     itself the relative paths between original sources, the\n                     source map and the output file.                    [string]\n  -o, --output       Output file (default STDOUT).\n  -b, --beautify     Beautify output/specify output options.            [string]\n  -m, --mangle       Mangle names/pass mangler options.                 [string]\n  -r, --reserved     Reserved names to exclude from mangling.\n  -c, --compress     Enable compressor/pass compressor options. Pass options\n                     like -c hoist_vars=false,if_return=false. Use -c with no\n                     argument to use the default compression options.   [string]\n  -d, --define       Global definitions                                 [string]\n  -e, --enclose      Embed everything in a big function, with a configurable\n                     parameter/argument list.                           [string]\n  --comments         Preserve copyright comments in the output. By default this\n                     works like Google Closure, keeping JSDoc-style comments\n                     that contain "@license" or "@preserve". You can optionally\n                     pass one of the following arguments to this flag:\n                     - "all" to keep all comments\n                     - a valid JS regexp (needs to start with a slash) to keep\n                     only comments that match.\n                     Note that currently not *all* comments can be kept when\n                     compression is on, because of dead code removal or\n                     cascading statements into sequences.               [string]\n  --preamble         Preamble to prepend to the output.  You can use this to\n                     insert a comment, for example for licensing information.\n                     This will not be parsed, but the source map will adjust\n                     for its presence.\n  --stats            Display operations run time on STDERR.            [boolean]\n  --acorn            Use Acorn for parsing.                            [boolean]\n  --spidermonkey     Assume input files are SpiderMonkey AST format (as JSON).\n                                                                       [boolean]\n  --self             Build itself (UglifyJS2) as a library (implies\n                     --wrap=UglifyJS --export-all)                     [boolean]\n  --wrap             Embed everything in a big function, making the “exports”\n                     and “global” variables available. You need to pass an\n                     argument to this option to specify the name that your\n                     module will take when included in, say, a browser.\n                                                                        [string]\n  --export-all       Only used when --wrap, this tells UglifyJS to add code to\n                     automatically export all globals.                 [boolean]\n  --lint             Display some scope warnings                       [boolean]\n  -v, --verbose      Verbose                                           [boolean]\n  -V, --version      Print version number and exit.                    [boolean]\n```\n\nSpecify `--output` (`-o`) to declare the output file.  Otherwise the output\ngoes to STDOUT.\n\n## Source map options\n\nUglifyJS2 can generate a source map file, which is highly useful for\ndebugging your compressed JavaScript.  To get a source map, pass\n`--source-map output.js.map` (full path to the file where you want the\nsource map dumped).\n\nAdditionally you might need `--source-map-root` to pass the URL where the\noriginal files can be found.  In case you are passing full paths to input\nfiles to UglifyJS, you can use `--prefix` (`-p`) to specify the number of\ndirectories to drop from the path prefix when declaring files in the source\nmap.\n\nFor example:\n\n    uglifyjs /home/doe/work/foo/src/js/file1.js \\\n             /home/doe/work/foo/src/js/file2.js \\\n             -o foo.min.js \\\n             --source-map foo.min.js.map \\\n             --source-map-root http://foo.com/src \\\n             -p 5 -c -m\n\nThe above will compress and mangle `file1.js` and `file2.js`, will drop the\noutput in `foo.min.js` and the source map in `foo.min.js.map`.  The source\nmapping will refer to `http://foo.com/src/js/file1.js` and\n`http://foo.com/src/js/file2.js` (in fact it will list `http://foo.com/src`\nas the source map root, and the original files as `js/file1.js` and\n`js/file2.js`).\n\n### Composed source map\n\nWhen you\'re compressing JS code that was output by a compiler such as\nCoffeeScript, mapping to the JS code won\'t be too helpful.  Instead, you\'d\nlike to map back to the original code (i.e. CoffeeScript).  UglifyJS has an\noption to take an input source map.  Assuming you have a mapping from\nCoffeeScript → compiled JS, UglifyJS can generate a map from CoffeeScript →\ncompressed JS by mapping every token in the compiled JS to its original\nlocation.\n\nTo use this feature you need to pass `--in-source-map\n/path/to/input/source.map`.  Normally the input source map should also point\nto the file containing the generated JS, so if that\'s correct you can omit\ninput files from the command line.\n\n## Mangler options\n\nTo enable the mangler you need to pass `--mangle` (`-m`).  The following\n(comma-separated) options are supported:\n\n- `sort` — to assign shorter names to most frequently used variables.  This\n  saves a few hundred bytes on jQuery before gzip, but the output is\n  _bigger_ after gzip (and seems to happen for other libraries I tried it\n  on) therefore it\'s not enabled by default.\n\n- `toplevel` — mangle names declared in the toplevel scope (disabled by\n  default).\n\n- `eval` — mangle names visible in scopes where `eval` or `with` are used\n  (disabled by default).\n\nWhen mangling is enabled but you want to prevent certain names from being\nmangled, you can declare those names with `--reserved` (`-r`) — pass a\ncomma-separated list of names.  For example:\n\n    uglifyjs ... -m -r \'$,require,exports\'\n\nto prevent the `require`, `exports` and `$` names from being changed.\n\n## Compressor options\n\nYou need to pass `--compress` (`-c`) to enable the compressor.  Optionally\nyou can pass a comma-separated list of options.  Options are in the form\n`foo=bar`, or just `foo` (the latter implies a boolean option that you want\nto set `true`; it\'s effectively a shortcut for `foo=true`).\n\n- `sequences` -- join consecutive simple statements using the comma operator\n\n- `properties` -- rewrite property access using the dot notation, for\n  example `foo["bar"] → foo.bar`\n\n- `dead_code` -- remove unreachable code\n\n- `drop_debugger` -- remove `debugger;` statements\n\n- `unsafe` (default: false) -- apply "unsafe" transformations (discussion below)\n\n- `conditionals` -- apply optimizations for `if`-s and conditional\n  expressions\n\n- `comparisons` -- apply certain optimizations to binary nodes, for example:\n  `!(a <= b) → a > b` (only when `unsafe`), attempts to negate binary nodes,\n  e.g. `a = !b && !c && !d && !e → a=!(b||c||d||e)` etc.\n\n- `evaluate` -- attempt to evaluate constant expressions\n\n- `booleans` -- various optimizations for boolean context, for example `!!a\n  ? b : c → a ? b : c`\n\n- `loops` -- optimizations for `do`, `while` and `for` loops when we can\n  statically determine the condition\n\n- `unused` -- drop unreferenced functions and variables\n\n- `hoist_funs` -- hoist function declarations\n\n- `hoist_vars` (default: false) -- hoist `var` declarations (this is `false`\n  by default because it seems to increase the size of the output in general)\n\n- `if_return` -- optimizations for if/return and if/continue\n\n- `join_vars` -- join consecutive `var` statements\n\n- `cascade` -- small optimization for sequences, transform `x, x` into `x`\n  and `x = something(), x` into `x = something()`\n\n- `warnings` -- display warnings when dropping unreachable code or unused\n  declarations etc.\n\n- `negate_iife` -- negate "Immediately-Called Function Expressions"\n  where the return value is discarded, to avoid the parens that the\n  code generator would insert.\n\n- `pure_getters` -- the default is `false`.  If you pass `true` for\n  this, UglifyJS will assume that object property access\n  (e.g. `foo.bar` or `foo["bar"]`) doesn\'t have any side effects.\n\n- `pure_funcs` -- default `null`.  You can pass an array of names and\n  UglifyJS will assume that those functions do not produce side\n  effects.  DANGER: will not check if the name is redefined in scope.\n  An example case here, for instance `var q = Math.floor(a/b)`.  If\n  variable `q` is not used elsewhere, UglifyJS will drop it, but will\n  still keep the `Math.floor(a/b)`, not knowing what it does.  You can\n  pass `pure_funcs: [ \'Math.floor\' ]` to let it know that this\n  function won\'t produce any side effect, in which case the whole\n  statement would get discarded.  The current implementation adds some\n  overhead (compression will be slower).\n\n- `drop_console` -- default `false`.  Pass `true` to discard calls to\n  `console.*` functions.\n\n### The `unsafe` option\n\nIt enables some transformations that *might* break code logic in certain\ncontrived cases, but should be fine for most code.  You might want to try it\non your own code, it should reduce the minified size.  Here\'s what happens\nwhen this flag is on:\n\n- `new Array(1, 2, 3)` or `Array(1, 2, 3)` → `[1, 2, 3 ]`\n- `new Object()` → `{}`\n- `String(exp)` or `exp.toString()` → `"" + exp`\n- `new Object/RegExp/Function/Error/Array (...)` → we discard the `new`\n- `typeof foo == "undefined"` → `foo === void 0`\n- `void 0` → `undefined` (if there is a variable named "undefined" in\n  scope; we do it because the variable name will be mangled, typically\n  reduced to a single character).\n\n### Conditional compilation\n\nYou can use the `--define` (`-d`) switch in order to declare global\nvariables that UglifyJS will assume to be constants (unless defined in\nscope).  For example if you pass `--define DEBUG=false` then, coupled with\ndead code removal UglifyJS will discard the following from the output:\n```javascript\nif (DEBUG) {\n\tconsole.log("debug stuff");\n}\n```\n\nUglifyJS will warn about the condition being always false and about dropping\nunreachable code; for now there is no option to turn off only this specific\nwarning, you can pass `warnings=false` to turn off *all* warnings.\n\nAnother way of doing that is to declare your globals as constants in a\nseparate file and include it into the build.  For example you can have a\n`build/defines.js` file with the following:\n```javascript\nconst DEBUG = false;\nconst PRODUCTION = true;\n// etc.\n```\n\nand build your code like this:\n\n    uglifyjs build/defines.js js/foo.js js/bar.js... -c\n\nUglifyJS will notice the constants and, since they cannot be altered, it\nwill evaluate references to them to the value itself and drop unreachable\ncode as usual.  The possible downside of this approach is that the build\nwill contain the `const` declarations.\n\n<a name="codegen-options"></a>\n## Beautifier options\n\nThe code generator tries to output shortest code possible by default.  In\ncase you want beautified output, pass `--beautify` (`-b`).  Optionally you\ncan pass additional arguments that control the code output:\n\n- `beautify` (default `true`) -- whether to actually beautify the output.\n  Passing `-b` will set this to true, but you might need to pass `-b` even\n  when you want to generate minified code, in order to specify additional\n  arguments, so you can use `-b beautify=false` to override it.\n- `indent-level` (default 4)\n- `indent-start` (default 0) -- prefix all lines by that many spaces\n- `quote-keys` (default `false`) -- pass `true` to quote all keys in literal\n  objects\n- `space-colon` (default `true`) -- insert a space after the colon signs\n- `ascii-only` (default `false`) -- escape Unicode characters in strings and\n  regexps\n- `inline-script` (default `false`) -- escape the slash in occurrences of\n  `</script` in strings\n- `width` (default 80) -- only takes effect when beautification is on, this\n  specifies an (orientative) line width that the beautifier will try to\n  obey.  It refers to the width of the line text (excluding indentation).\n  It doesn\'t work very well currently, but it does make the code generated\n  by UglifyJS more readable.\n- `max-line-len` (default 32000) -- maximum line length (for uglified code)\n- `bracketize` (default `false`) -- always insert brackets in `if`, `for`,\n  `do`, `while` or `with` statements, even if their body is a single\n  statement.\n- `semicolons` (default `true`) -- separate statements with semicolons.  If\n  you pass `false` then whenever possible we will use a newline instead of a\n  semicolon, leading to more readable output of uglified code (size before\n  gzip could be smaller; size after gzip insignificantly larger).\n- `preamble` (default `null`) -- when passed it must be a string and\n  it will be prepended to the output literally.  The source map will\n  adjust for this text.  Can be used to insert a comment containing\n  licensing information, for example.\n\n### Keeping copyright notices or other comments\n\nYou can pass `--comments` to retain certain comments in the output.  By\ndefault it will keep JSDoc-style comments that contain "@preserve",\n"@license" or "@cc_on" (conditional compilation for IE).  You can pass\n`--comments all` to keep all the comments, or a valid JavaScript regexp to\nkeep only comments that match this regexp.  For example `--comments\n\'/foo|bar/\'` will keep only comments that contain "foo" or "bar".\n\nNote, however, that there might be situations where comments are lost.  For\nexample:\n```javascript\nfunction f() {\n\t/** @preserve Foo Bar */\n\tfunction g() {\n\t  // this function is never called\n\t}\n\treturn something();\n}\n```\n\nEven though it has "@preserve", the comment will be lost because the inner\nfunction `g` (which is the AST node to which the comment is attached to) is\ndiscarded by the compressor as not referenced.\n\nThe safest comments where to place copyright information (or other info that\nneeds to be kept in the output) are comments attached to toplevel nodes.\n\n## Support for the SpiderMonkey AST\n\nUglifyJS2 has its own abstract syntax tree format; for\n[practical reasons](http://lisperator.net/blog/uglifyjs-why-not-switching-to-spidermonkey-ast/)\nwe can\'t easily change to using the SpiderMonkey AST internally.  However,\nUglifyJS now has a converter which can import a SpiderMonkey AST.\n\nFor example [Acorn][acorn] is a super-fast parser that produces a\nSpiderMonkey AST.  It has a small CLI utility that parses one file and dumps\nthe AST in JSON on the standard output.  To use UglifyJS to mangle and\ncompress that:\n\n    acorn file.js | uglifyjs --spidermonkey -m -c\n\nThe `--spidermonkey` option tells UglifyJS that all input files are not\nJavaScript, but JS code described in SpiderMonkey AST in JSON.  Therefore we\ndon\'t use our own parser in this case, but just transform that AST into our\ninternal AST.\n\n### Use Acorn for parsing\n\nMore for fun, I added the `--acorn` option which will use Acorn to do all\nthe parsing.  If you pass this option, UglifyJS will `require("acorn")`.\n\nAcorn is really fast (e.g. 250ms instead of 380ms on some 650K code), but\nconverting the SpiderMonkey tree that Acorn produces takes another 150ms so\nin total it\'s a bit more than just using UglifyJS\'s own parser.\n\nAPI Reference\n-------------\n\nAssuming installation via NPM, you can load UglifyJS in your application\nlike this:\n```javascript\nvar UglifyJS = require("uglify-js");\n```\n\nIt exports a lot of names, but I\'ll discuss here the basics that are needed\nfor parsing, mangling and compressing a piece of code.  The sequence is (1)\nparse, (2) compress, (3) mangle, (4) generate output code.\n\n### The simple way\n\nThere\'s a single toplevel function which combines all the steps.  If you\ndon\'t need additional customization, you might want to go with `minify`.\nExample:\n```javascript\nvar result = UglifyJS.minify("/path/to/file.js");\nconsole.log(result.code); // minified output\n// if you need to pass code instead of file name\nvar result = UglifyJS.minify("var b = function () {};", {fromString: true});\n```\n\nYou can also compress multiple files:\n```javascript\nvar result = UglifyJS.minify([ "file1.js", "file2.js", "file3.js" ]);\nconsole.log(result.code);\n```\n\nTo generate a source map:\n```javascript\nvar result = UglifyJS.minify([ "file1.js", "file2.js", "file3.js" ], {\n\toutSourceMap: "out.js.map"\n});\nconsole.log(result.code); // minified output\nconsole.log(result.map);\n```\n\nNote that the source map is not saved in a file, it\'s just returned in\n`result.map`.  The value passed for `outSourceMap` is only used to set the\n`file` attribute in the source map (see [the spec][sm-spec]).\n\nYou can also specify sourceRoot property to be included in source map:\n```javascript\nvar result = UglifyJS.minify([ "file1.js", "file2.js", "file3.js" ], {\n\toutSourceMap: "out.js.map",\n\tsourceRoot: "http://example.com/src"\n});\n```\n\nIf you\'re compressing compiled JavaScript and have a source map for it, you\ncan use the `inSourceMap` argument:\n```javascript\nvar result = UglifyJS.minify("compiled.js", {\n\tinSourceMap: "compiled.js.map",\n\toutSourceMap: "minified.js.map"\n});\n// same as before, it returns `code` and `map`\n```\n\nThe `inSourceMap` is only used if you also request `outSourceMap` (it makes\nno sense otherwise).\n\nOther options:\n\n- `warnings` (default `false`) — pass `true` to display compressor warnings.\n\n- `fromString` (default `false`) — if you pass `true` then you can pass\n  JavaScript source code, rather than file names.\n\n- `mangle` — pass `false` to skip mangling names.\n\n- `output` (default `null`) — pass an object if you wish to specify\n  additional [output options][codegen].  The defaults are optimized\n  for best compression.\n\n- `compress` (default `{}`) — pass `false` to skip compressing entirely.\n  Pass an object to specify custom [compressor options][compressor].\n\nWe could add more options to `UglifyJS.minify` — if you need additional\nfunctionality please suggest!\n\n### The hard way\n\nFollowing there\'s more detailed API info, in case the `minify` function is\ntoo simple for your needs.\n\n#### The parser\n```javascript\nvar toplevel_ast = UglifyJS.parse(code, options);\n```\n\n`options` is optional and if present it must be an object.  The following\nproperties are available:\n\n- `strict` — disable automatic semicolon insertion and support for trailing\n  comma in arrays and objects\n- `filename` — the name of the file where this code is coming from\n- `toplevel` — a `toplevel` node (as returned by a previous invocation of\n  `parse`)\n\nThe last two options are useful when you\'d like to minify multiple files and\nget a single file as the output and a proper source map.  Our CLI tool does\nsomething like this:\n```javascript\nvar toplevel = null;\nfiles.forEach(function(file){\n\tvar code = fs.readFileSync(file, "utf8");\n\ttoplevel = UglifyJS.parse(code, {\n\t\tfilename: file,\n\t\ttoplevel: toplevel\n\t});\n});\n```\n\nAfter this, we have in `toplevel` a big AST containing all our files, with\neach token having proper information about where it came from.\n\n#### Scope information\n\nUglifyJS contains a scope analyzer that you need to call manually before\ncompressing or mangling.  Basically it augments various nodes in the AST\nwith information about where is a name defined, how many times is a name\nreferenced, if it is a global or not, if a function is using `eval` or the\n`with` statement etc.  I will discuss this some place else, for now what\'s\nimportant to know is that you need to call the following before doing\nanything with the tree:\n```javascript\ntoplevel.figure_out_scope()\n```\n\n#### Compression\n\nLike this:\n```javascript\nvar compressor = UglifyJS.Compressor(options);\nvar compressed_ast = toplevel.transform(compressor);\n```\n\nThe `options` can be missing.  Available options are discussed above in\n“Compressor options”.  Defaults should lead to best compression in most\nscripts.\n\nThe compressor is destructive, so don\'t rely that `toplevel` remains the\noriginal tree.\n\n#### Mangling\n\nAfter compression it is a good idea to call again `figure_out_scope` (since\nthe compressor might drop unused variables / unreachable code and this might\nchange the number of identifiers or their position).  Optionally, you can\ncall a trick that helps after Gzip (counting character frequency in\nnon-mangleable words).  Example:\n```javascript\ncompressed_ast.figure_out_scope();\ncompressed_ast.compute_char_frequency();\ncompressed_ast.mangle_names();\n```\n\n#### Generating output\n\nAST nodes have a `print` method that takes an output stream.  Essentially,\nto generate code you do this:\n```javascript\nvar stream = UglifyJS.OutputStream(options);\ncompressed_ast.print(stream);\nvar code = stream.toString(); // this is your minified code\n```\n\nor, for a shortcut you can do:\n```javascript\nvar code = compressed_ast.print_to_string(options);\n```\n\nAs usual, `options` is optional.  The output stream accepts a lot of otions,\nmost of them documented above in section “Beautifier options”.  The two\nwhich we care about here are `source_map` and `comments`.\n\n#### Keeping comments in the output\n\nIn order to keep certain comments in the output you need to pass the\n`comments` option.  Pass a RegExp or a function.  If you pass a RegExp, only\nthose comments whose body matches the regexp will be kept.  Note that body\nmeans without the initial `//` or `/*`.  If you pass a function, it will be\ncalled for every comment in the tree and will receive two arguments: the\nnode that the comment is attached to, and the comment token itself.\n\nThe comment token has these properties:\n\n- `type`: "comment1" for single-line comments or "comment2" for multi-line\n  comments\n- `value`: the comment body\n- `pos` and `endpos`: the start/end positions (zero-based indexes) in the\n  original code where this comment appears\n- `line` and `col`: the line and column where this comment appears in the\n  original code\n- `file` — the file name of the original file\n- `nlb` — true if there was a newline before this comment in the original\n  code, or if this comment contains a newline.\n\nYour function should return `true` to keep the comment, or a falsy value\notherwise.\n\n#### Generating a source mapping\n\nYou need to pass the `source_map` argument when calling `print`.  It needs\nto be a `SourceMap` object (which is a thin wrapper on top of the\n[source-map][source-map] library).\n\nExample:\n```javascript\nvar source_map = UglifyJS.SourceMap(source_map_options);\nvar stream = UglifyJS.OutputStream({\n\t...\n\tsource_map: source_map\n});\ncompressed_ast.print(stream);\n\nvar code = stream.toString();\nvar map = source_map.toString(); // json output for your source map\n```\n\nThe `source_map_options` (optional) can contain the following properties:\n\n- `file`: the name of the JavaScript output file that this mapping refers to\n- `root`: the `sourceRoot` property (see the [spec][sm-spec])\n- `orig`: the "original source map", handy when you compress generated JS\n  and want to map the minified output back to the original code where it\n  came from.  It can be simply a string in JSON, or a JSON object containing\n  the original source map.\n\n  [acorn]: https://github.com/marijnh/acorn\n  [source-map]: https://github.com/mozilla/source-map\n  [sm-spec]: https://docs.google.com/document/d/1U1RGAehQwRypUTovF1KRlpiOFze0b-_2gc6fAH0KY0k/edit\n  [codegen]: http://lisperator.net/uglifyjs/codegen\n  [compressor]: http://lisperator.net/uglifyjs/compress\n',
995 silly resolved     readmeFilename: 'README.md',
995 silly resolved     bugs: { url: 'https://github.com/mishoo/UglifyJS2/issues' },
995 silly resolved     _id: 'uglify-js@2.4.13',
995 silly resolved     _from: 'uglify-js@~2.4.0' } ]
996 info install uglify-js@2.4.13 into /usr/local/lib/node_modules/jade/node_modules/constantinople
997 info installOne uglify-js@2.4.13
998 info /usr/local/lib/node_modules/jade/node_modules/constantinople/node_modules/uglify-js unbuild
999 verbose tar unpack /Users/marc.bluemner/.npm/uglify-js/2.4.13/package.tgz
1000 silly lockFile 849ea1d9-antinople-node-modules-uglify-js tar:///usr/local/lib/node_modules/jade/node_modules/constantinople/node_modules/uglify-js
1001 verbose lock tar:///usr/local/lib/node_modules/jade/node_modules/constantinople/node_modules/uglify-js /Users/marc.bluemner/.npm/849ea1d9-antinople-node-modules-uglify-js.lock
1002 silly lockFile 97319dfd-npm-uglify-js-2-4-13-package-tgz tar:///Users/marc.bluemner/.npm/uglify-js/2.4.13/package.tgz
1003 verbose lock tar:///Users/marc.bluemner/.npm/uglify-js/2.4.13/package.tgz /Users/marc.bluemner/.npm/97319dfd-npm-uglify-js-2-4-13-package-tgz.lock
1004 silly gunzTarPerm extractEntry examples/node_modules/event-stream/node_modules/optimist/examples/boolean_double.js
1005 silly gunzTarPerm extractEntry examples/node_modules/event-stream/node_modules/optimist/examples/xup.js
1006 silly gunzTarPerm extractEntry examples/node_modules/event-stream/node_modules/optimist/examples/line_count_options.js
1007 silly gunzTarPerm extractEntry examples/node_modules/event-stream/node_modules/optimist/README.markdown
1008 silly gunzTarPerm extractEntry examples/node_modules/event-stream/node_modules/optimist/test/_.js
1009 silly gunzTarPerm extractEntry examples/node_modules/event-stream/node_modules/optimist/test/parse.js
1010 silly gunzTarPerm extractEntry examples/node_modules/event-stream/node_modules/optimist/test/usage.js
1011 silly gunzTarPerm extractEntry examples/node_modules/event-stream/node_modules/optimist/test/_/argv.js
1012 silly gunzTarPerm extractEntry examples/node_modules/event-stream/node_modules/optimist/test/_/bin.js
1013 silly gunzTarPerm extractEntry examples/node_modules/event-stream/node_modules/optimist/node_modules/wordwrap/package.json
1014 silly gunzTarPerm extractEntry examples/node_modules/event-stream/node_modules/optimist/node_modules/wordwrap/.npmignore
1015 silly gunzTarPerm extractEntry examples/node_modules/event-stream/node_modules/optimist/node_modules/wordwrap/index.js
1016 silly gunzTarPerm extractEntry examples/node_modules/event-stream/node_modules/optimist/node_modules/wordwrap/example/center.js
1017 silly gunzTarPerm extractEntry examples/node_modules/event-stream/node_modules/optimist/node_modules/wordwrap/example/meat.js
1018 silly gunzTarPerm extractEntry examples/node_modules/event-stream/node_modules/optimist/node_modules/wordwrap/README.markdown
1019 silly gunzTarPerm extractEntry examples/node_modules/event-stream/node_modules/optimist/node_modules/wordwrap/test/break.js
1020 silly gunzTarPerm extractEntry examples/node_modules/event-stream/node_modules/optimist/node_modules/wordwrap/test/wrap.js
1021 silly gunzTarPerm extractEntry examples/node_modules/event-stream/node_modules/optimist/node_modules/wordwrap/test/idleness.txt
1022 silly gunzTarPerm extractEntry examples/node_modules/event-stream/node_modules/pause-stream/package.json
1023 silly gunzTarPerm extractEntry examples/node_modules/event-stream/node_modules/pause-stream/.npmignore
1024 silly gunzTarPerm extractEntry examples/node_modules/event-stream/node_modules/pause-stream/index.js
1025 silly gunzTarPerm extractEntry examples/node_modules/event-stream/node_modules/pause-stream/readme.markdown
1026 silly gunzTarPerm extractEntry examples/node_modules/event-stream/node_modules/pause-stream/test/index.js
1027 silly gunzTarPerm extractEntry examples/node_modules/event-stream/node_modules/pause-stream/test/pause-end.js
1028 silly gunzTarPerm extractEntry examples/node_modules/event-stream/node_modules/split/package.json
1029 silly gunzTarPerm extractEntry examples/node_modules/event-stream/node_modules/split/.npmignore
1030 silly gunzTarPerm extractEntry examples/node_modules/event-stream/node_modules/split/LICENCE
1031 silly gunzTarPerm extractEntry examples/node_modules/event-stream/node_modules/split/index.js
1032 silly gunzTarPerm extractEntry examples/node_modules/event-stream/node_modules/split/.travis.yml
1033 silly gunzTarPerm extractEntry examples/node_modules/event-stream/node_modules/split/examples/pretty.js
1034 silly gunzTarPerm extractEntry examples/node_modules/event-stream/node_modules/split/readme.markdown
1035 silly gunzTarPerm extractEntry examples/node_modules/event-stream/node_modules/split/test/split.asynct.js
1036 silly gunzTarPerm extractEntry examples/node_modules/event-stream/node_modules/split/node_modules/through/package.json
1037 silly gunzTarPerm extractEntry examples/node_modules/event-stream/node_modules/split/node_modules/through/index.js
1038 silly gunzTarPerm extractEntry examples/node_modules/event-stream/node_modules/split/node_modules/through/.travis.yml
1039 silly gunzTarPerm extractEntry examples/node_modules/event-stream/node_modules/split/node_modules/through/LICENSE.APACHE2
1040 silly gunzTarPerm extractEntry examples/node_modules/event-stream/node_modules/split/node_modules/through/LICENSE.MIT
1041 silly gunzTarPerm extractEntry examples/node_modules/event-stream/node_modules/split/node_modules/through/readme.markdown
1042 silly gunzTarPerm extractEntry examples/node_modules/event-stream/node_modules/split/node_modules/through/test/index.js
1043 silly gunzTarPerm extractEntry examples/node_modules/event-stream/node_modules/through/package.json
1044 silly gunzTarPerm extractEntry examples/node_modules/event-stream/node_modules/through/index.js
1045 silly gunzTarPerm extractEntry examples/node_modules/event-stream/node_modules/through/.travis.yml
1046 silly gunzTarPerm extractEntry examples/node_modules/event-stream/node_modules/through/LICENSE.APACHE2
1047 silly gunzTarPerm extractEntry examples/node_modules/event-stream/node_modules/through/LICENSE.MIT
1048 silly gunzTarPerm extractEntry examples/node_modules/event-stream/node_modules/through/readme.markdown
1049 silly gunzTarPerm extractEntry examples/node_modules/event-stream/node_modules/through/test/buffering.js
1050 silly gunzTarPerm extractEntry examples/node_modules/event-stream/node_modules/through/test/end.js
1051 silly gunzTarPerm extractEntry examples/node_modules/event-stream/node_modules/through/test/index.js
1052 silly gunzTarPerm extractEntry examples/node_modules/tap-stream/package.json
1053 silly gunzTarPerm extractEntry examples/node_modules/tap-stream/.npmignore
1054 silly gunzTarPerm extractEntry examples/node_modules/tap-stream/README.md
1055 silly gunzTarPerm extractEntry examples/node_modules/tap-stream/index.js
1056 silly gunzTarPerm extractEntry examples/node_modules/tap-stream/.travis.yml
1057 silly gunzTarPerm extractEntry examples/node_modules/tap-stream/examples/tap-nested-objects.js
1058 silly gunzTarPerm extractEntry examples/node_modules/tap-stream/test/tap-stream.js
1059 silly gunzTarPerm extractEntry examples/node_modules/tap-stream/node_modules/through/package.json
1060 silly gunzTarPerm extractEntry examples/node_modules/tap-stream/node_modules/through/index.js
1061 silly gunzTarPerm extractEntry examples/node_modules/tap-stream/node_modules/through/.travis.yml
1062 silly gunzTarPerm extractEntry examples/node_modules/tap-stream/node_modules/through/LICENSE.APACHE2
1063 silly gunzTarPerm extractEntry examples/node_modules/tap-stream/node_modules/through/LICENSE.MIT
1064 silly lockFile 30f47d72-nsformers-node-modules-uglify-js tar:///usr/local/lib/node_modules/jade/node_modules/transformers/node_modules/uglify-js
1065 silly lockFile 30f47d72-nsformers-node-modules-uglify-js tar:///usr/local/lib/node_modules/jade/node_modules/transformers/node_modules/uglify-js
1066 silly lockFile e6c5d611--npm-uglify-js-2-2-5-package-tgz tar:///Users/marc.bluemner/.npm/uglify-js/2.2.5/package.tgz
1067 silly lockFile e6c5d611--npm-uglify-js-2-2-5-package-tgz tar:///Users/marc.bluemner/.npm/uglify-js/2.2.5/package.tgz
1068 silly gunzTarPerm extractEntry examples/node_modules/tap-stream/node_modules/through/readme.markdown
1069 info preinstall uglify-js@2.2.5
1070 verbose readDependencies using package.json deps
1071 verbose readDependencies using package.json deps
1072 silly gunzTarPerm extractEntry examples/node_modules/tap-stream/node_modules/through/test/buffering.js
1073 silly gunzTarPerm extractEntry examples/node_modules/tap-stream/node_modules/through/test/end.js
1074 verbose cache add [ 'source-map@~0.1.7', null ]
1075 verbose cache add name=undefined spec="source-map@~0.1.7" args=["source-map@~0.1.7",null]
1076 verbose parsed url { protocol: null,
1076 verbose parsed url   slashes: null,
1076 verbose parsed url   auth: null,
1076 verbose parsed url   host: null,
1076 verbose parsed url   port: null,
1076 verbose parsed url   hostname: null,
1076 verbose parsed url   hash: null,
1076 verbose parsed url   search: null,
1076 verbose parsed url   query: null,
1076 verbose parsed url   pathname: 'source-map@~0.1.7',
1076 verbose parsed url   path: 'source-map@~0.1.7',
1076 verbose parsed url   href: 'source-map@~0.1.7' }
1077 verbose cache add name="source-map" spec="~0.1.7" args=["source-map","~0.1.7"]
1078 verbose parsed url { protocol: null,
1078 verbose parsed url   slashes: null,
1078 verbose parsed url   auth: null,
1078 verbose parsed url   host: null,
1078 verbose parsed url   port: null,
1078 verbose parsed url   hostname: null,
1078 verbose parsed url   hash: null,
1078 verbose parsed url   search: null,
1078 verbose parsed url   query: null,
1078 verbose parsed url   pathname: '~0.1.7',
1078 verbose parsed url   path: '~0.1.7',
1078 verbose parsed url   href: '~0.1.7' }
1079 verbose addNamed [ 'source-map', '~0.1.7' ]
1080 verbose addNamed [ null, '>=0.1.7-0 <0.2.0-0' ]
1081 silly lockFile 19b4245f-source-map-0-1-7 source-map@~0.1.7
1082 verbose lock source-map@~0.1.7 /Users/marc.bluemner/.npm/19b4245f-source-map-0-1-7.lock
1083 verbose cache add [ 'optimist@~0.3.5', null ]
1084 verbose cache add name=undefined spec="optimist@~0.3.5" args=["optimist@~0.3.5",null]
1085 verbose parsed url { protocol: null,
1085 verbose parsed url   slashes: null,
1085 verbose parsed url   auth: null,
1085 verbose parsed url   host: null,
1085 verbose parsed url   port: null,
1085 verbose parsed url   hostname: null,
1085 verbose parsed url   hash: null,
1085 verbose parsed url   search: null,
1085 verbose parsed url   query: null,
1085 verbose parsed url   pathname: 'optimist@~0.3.5',
1085 verbose parsed url   path: 'optimist@~0.3.5',
1085 verbose parsed url   href: 'optimist@~0.3.5' }
1086 verbose cache add name="optimist" spec="~0.3.5" args=["optimist","~0.3.5"]
1087 verbose parsed url { protocol: null,
1087 verbose parsed url   slashes: null,
1087 verbose parsed url   auth: null,
1087 verbose parsed url   host: null,
1087 verbose parsed url   port: null,
1087 verbose parsed url   hostname: null,
1087 verbose parsed url   hash: null,
1087 verbose parsed url   search: null,
1087 verbose parsed url   query: null,
1087 verbose parsed url   pathname: '~0.3.5',
1087 verbose parsed url   path: '~0.3.5',
1087 verbose parsed url   href: '~0.3.5' }
1088 verbose addNamed [ 'optimist', '~0.3.5' ]
1089 verbose addNamed [ null, '>=0.3.5-0 <0.4.0-0' ]
1090 silly lockFile a1f99b53-optimist-0-3-5 optimist@~0.3.5
1091 verbose lock optimist@~0.3.5 /Users/marc.bluemner/.npm/a1f99b53-optimist-0-3-5.lock
1092 silly gunzTarPerm extractEntry examples/node_modules/tap-stream/node_modules/through/test/index.js
1093 silly gunzTarPerm extractEntry test/readdirp-stream.js
1094 silly addNameRange { name: 'source-map',
1094 silly addNameRange   range: '>=0.1.7-0 <0.2.0-0',
1094 silly addNameRange   hasData: false }
1095 silly addNameRange { name: 'optimist', range: '>=0.3.5-0 <0.4.0-0', hasData: false }
1096 verbose url raw optimist
1097 verbose url resolving [ 'https://registry.npmjs.org/', './optimist' ]
1098 verbose url resolved https://registry.npmjs.org/optimist
1099 info trying registry request attempt 1 at 19:04:03
1100 verbose etag "1IKU6GRZMZDCQ2MB3C2XUCU7G"
1101 http GET https://registry.npmjs.org/optimist
1102 silly gunzTarPerm extractEntry test/readdirp.js
1103 silly gunzTarPerm extractEntry test/bed/root_dir1/root_dir1_file1.ext1
1104 verbose url raw source-map
1105 verbose url resolving [ 'https://registry.npmjs.org/', './source-map' ]
1106 verbose url resolved https://registry.npmjs.org/source-map
1107 info trying registry request attempt 1 at 19:04:03
1108 verbose etag "8ANCV3RWS7H3RZ8BR64ARCR28"
1109 http GET https://registry.npmjs.org/source-map
1110 silly gunzTarPerm extractEntry test/bed/root_dir1/root_dir1_file2.ext2
1111 silly gunzTarPerm extractEntry test/bed/root_dir1/root_dir1_file3.ext3
1112 silly gunzTarPerm extractEntry test/bed/root_dir1/root_dir1_subdir1/root1_dir1_subdir1_file1.ext1
1113 silly gunzTarPerm extractEntry test/bed/root_dir2/root_dir2_file1.ext1
1114 silly gunzTarPerm extractEntry test/bed/root_dir2/root_dir2_file2.ext2
1115 silly gunzTarPerm extractEntry test/bed/root_file1.ext1
1116 silly gunzTarPerm extractEntry test/bed/root_file2.ext2
1117 silly gunzTarPerm extractEntry test/bed/root_file3.ext3
1118 silly lockFile 1f13d609-ules-with-node-modules-uglify-js tar:///usr/local/lib/node_modules/jade/node_modules/with/node_modules/uglify-js
1119 silly lockFile 1f13d609-ules-with-node-modules-uglify-js tar:///usr/local/lib/node_modules/jade/node_modules/with/node_modules/uglify-js
1120 silly lockFile 97319dfd-npm-uglify-js-2-4-13-package-tgz tar:///Users/marc.bluemner/.npm/uglify-js/2.4.13/package.tgz
1121 silly lockFile 97319dfd-npm-uglify-js-2-4-13-package-tgz tar:///Users/marc.bluemner/.npm/uglify-js/2.4.13/package.tgz
1122 info preinstall uglify-js@2.4.13
1123 verbose readDependencies using package.json deps
1124 verbose readDependencies using package.json deps
1125 verbose cache add [ 'async@~0.2.6', null ]
1126 verbose cache add name=undefined spec="async@~0.2.6" args=["async@~0.2.6",null]
1127 verbose parsed url { protocol: null,
1127 verbose parsed url   slashes: null,
1127 verbose parsed url   auth: null,
1127 verbose parsed url   host: null,
1127 verbose parsed url   port: null,
1127 verbose parsed url   hostname: null,
1127 verbose parsed url   hash: null,
1127 verbose parsed url   search: null,
1127 verbose parsed url   query: null,
1127 verbose parsed url   pathname: 'async@~0.2.6',
1127 verbose parsed url   path: 'async@~0.2.6',
1127 verbose parsed url   href: 'async@~0.2.6' }
1128 verbose cache add name="async" spec="~0.2.6" args=["async","~0.2.6"]
1129 verbose parsed url { protocol: null,
1129 verbose parsed url   slashes: null,
1129 verbose parsed url   auth: null,
1129 verbose parsed url   host: null,
1129 verbose parsed url   port: null,
1129 verbose parsed url   hostname: null,
1129 verbose parsed url   hash: null,
1129 verbose parsed url   search: null,
1129 verbose parsed url   query: null,
1129 verbose parsed url   pathname: '~0.2.6',
1129 verbose parsed url   path: '~0.2.6',
1129 verbose parsed url   href: '~0.2.6' }
1130 verbose addNamed [ 'async', '~0.2.6' ]
1131 verbose addNamed [ null, '>=0.2.6-0 <0.3.0-0' ]
1132 silly lockFile e00b1d77-async-0-2-6 async@~0.2.6
1133 verbose lock async@~0.2.6 /Users/marc.bluemner/.npm/e00b1d77-async-0-2-6.lock
1134 verbose cache add [ 'source-map@~0.1.33', null ]
1135 verbose cache add name=undefined spec="source-map@~0.1.33" args=["source-map@~0.1.33",null]
1136 verbose parsed url { protocol: null,
1136 verbose parsed url   slashes: null,
1136 verbose parsed url   auth: null,
1136 verbose parsed url   host: null,
1136 verbose parsed url   port: null,
1136 verbose parsed url   hostname: null,
1136 verbose parsed url   hash: null,
1136 verbose parsed url   search: null,
1136 verbose parsed url   query: null,
1136 verbose parsed url   pathname: 'source-map@~0.1.33',
1136 verbose parsed url   path: 'source-map@~0.1.33',
1136 verbose parsed url   href: 'source-map@~0.1.33' }
1137 verbose cache add name="source-map" spec="~0.1.33" args=["source-map","~0.1.33"]
1138 verbose parsed url { protocol: null,
1138 verbose parsed url   slashes: null,
1138 verbose parsed url   auth: null,
1138 verbose parsed url   host: null,
1138 verbose parsed url   port: null,
1138 verbose parsed url   hostname: null,
1138 verbose parsed url   hash: null,
1138 verbose parsed url   search: null,
1138 verbose parsed url   query: null,
1138 verbose parsed url   pathname: '~0.1.33',
1138 verbose parsed url   path: '~0.1.33',
1138 verbose parsed url   href: '~0.1.33' }
1139 verbose addNamed [ 'source-map', '~0.1.33' ]
1140 verbose addNamed [ null, '>=0.1.33-0 <0.2.0-0' ]
1141 silly lockFile 0fe92a26-source-map-0-1-33 source-map@~0.1.33
1142 verbose lock source-map@~0.1.33 /Users/marc.bluemner/.npm/0fe92a26-source-map-0-1-33.lock
1143 verbose cache add [ 'optimist@~0.3.5', null ]
1144 verbose cache add name=undefined spec="optimist@~0.3.5" args=["optimist@~0.3.5",null]
1145 verbose parsed url { protocol: null,
1145 verbose parsed url   slashes: null,
1145 verbose parsed url   auth: null,
1145 verbose parsed url   host: null,
1145 verbose parsed url   port: null,
1145 verbose parsed url   hostname: null,
1145 verbose parsed url   hash: null,
1145 verbose parsed url   search: null,
1145 verbose parsed url   query: null,
1145 verbose parsed url   pathname: 'optimist@~0.3.5',
1145 verbose parsed url   path: 'optimist@~0.3.5',
1145 verbose parsed url   href: 'optimist@~0.3.5' }
1146 verbose cache add name="optimist" spec="~0.3.5" args=["optimist","~0.3.5"]
1147 verbose parsed url { protocol: null,
1147 verbose parsed url   slashes: null,
1147 verbose parsed url   auth: null,
1147 verbose parsed url   host: null,
1147 verbose parsed url   port: null,
1147 verbose parsed url   hostname: null,
1147 verbose parsed url   hash: null,
1147 verbose parsed url   search: null,
1147 verbose parsed url   query: null,
1147 verbose parsed url   pathname: '~0.3.5',
1147 verbose parsed url   path: '~0.3.5',
1147 verbose parsed url   href: '~0.3.5' }
1148 verbose addNamed [ 'optimist', '~0.3.5' ]
1149 silly addNameRange { name: 'async', range: '>=0.2.6-0 <0.3.0-0', hasData: false }
1150 silly addNameRange { name: 'source-map',
1150 silly addNameRange   range: '>=0.1.33-0 <0.2.0-0',
1150 silly addNameRange   hasData: false }
1151 verbose cache add [ 'uglify-to-browserify@~1.0.0', null ]
1152 verbose cache add name=undefined spec="uglify-to-browserify@~1.0.0" args=["uglify-to-browserify@~1.0.0",null]
1153 verbose parsed url { protocol: null,
1153 verbose parsed url   slashes: null,
1153 verbose parsed url   auth: null,
1153 verbose parsed url   host: null,
1153 verbose parsed url   port: null,
1153 verbose parsed url   hostname: null,
1153 verbose parsed url   hash: null,
1153 verbose parsed url   search: null,
1153 verbose parsed url   query: null,
1153 verbose parsed url   pathname: 'uglify-to-browserify@~1.0.0',
1153 verbose parsed url   path: 'uglify-to-browserify@~1.0.0',
1153 verbose parsed url   href: 'uglify-to-browserify@~1.0.0' }
1154 verbose cache add name="uglify-to-browserify" spec="~1.0.0" args=["uglify-to-browserify","~1.0.0"]
1155 verbose parsed url { protocol: null,
1155 verbose parsed url   slashes: null,
1155 verbose parsed url   auth: null,
1155 verbose parsed url   host: null,
1155 verbose parsed url   port: null,
1155 verbose parsed url   hostname: null,
1155 verbose parsed url   hash: null,
1155 verbose parsed url   search: null,
1155 verbose parsed url   query: null,
1155 verbose parsed url   pathname: '~1.0.0',
1155 verbose parsed url   path: '~1.0.0',
1155 verbose parsed url   href: '~1.0.0' }
1156 verbose addNamed [ 'uglify-to-browserify', '~1.0.0' ]
1157 verbose addNamed [ null, '>=1.0.0-0 <1.1.0-0' ]
1158 silly lockFile 8d4498e3-uglify-to-browserify-1-0-0 uglify-to-browserify@~1.0.0
1159 verbose lock uglify-to-browserify@~1.0.0 /Users/marc.bluemner/.npm/8d4498e3-uglify-to-browserify-1-0-0.lock
1160 verbose url raw source-map
1161 verbose url resolving [ 'https://registry.npmjs.org/', './source-map' ]
1162 verbose url resolved https://registry.npmjs.org/source-map
1163 info trying registry request attempt 1 at 19:04:03
1164 verbose etag "8ANCV3RWS7H3RZ8BR64ARCR28"
1165 http GET https://registry.npmjs.org/source-map
1166 silly addNameRange { name: 'uglify-to-browserify',
1166 silly addNameRange   range: '>=1.0.0-0 <1.1.0-0',
1166 silly addNameRange   hasData: false }
1167 silly gunzTarPerm modes [ '755', '644' ]
1168 verbose url raw async
1169 verbose url resolving [ 'https://registry.npmjs.org/', './async' ]
1170 verbose url resolved https://registry.npmjs.org/async
1171 info trying registry request attempt 1 at 19:04:03
1172 verbose etag "9D83ML88AMEXXHFQ921GAAOAW"
1173 http GET https://registry.npmjs.org/async
1174 silly gunzTarPerm extractEntry package.json
1175 silly gunzTarPerm extractEntry .npmignore
1176 silly gunzTarPerm extractEntry README.md
1177 silly gunzTarPerm extractEntry LICENSE
1178 silly gunzTarPerm extractEntry .travis.yml
1179 silly gunzTarPerm extractEntry bin/uglifyjs
1180 silly gunzTarPerm extractEntry lib/ast.js
1181 silly gunzTarPerm extractEntry lib/compress.js
1182 verbose url raw uglify-to-browserify
1183 verbose url resolving [ 'https://registry.npmjs.org/', './uglify-to-browserify' ]
1184 verbose url resolved https://registry.npmjs.org/uglify-to-browserify
1185 info trying registry request attempt 1 at 19:04:03
1186 verbose etag "14ZOWXXYNOUHCBA3EDYFH6O08"
1187 http GET https://registry.npmjs.org/uglify-to-browserify
1188 silly gunzTarPerm extractEntry lib/mozilla-ast.js
1189 silly gunzTarPerm extractEntry lib/output.js
1190 silly gunzTarPerm extractEntry lib/parse.js
1191 silly gunzTarPerm extractEntry lib/scope.js
1192 silly gunzTarPerm extractEntry lib/sourcemap.js
1193 http 200 https://registry.npmjs.org/is-promise
1194 silly registry.get cb [ 200,
1194 silly registry.get   { date: 'Mon, 26 May 2014 17:04:03 GMT',
1194 silly registry.get     server: 'CouchDB/1.5.0 (Erlang OTP/R14B04)',
1194 silly registry.get     etag: '"7N8IR83ORYF5EQ967VR5TQ05Q"',
1194 silly registry.get     'content-type': 'application/json',
1194 silly registry.get     via: '1.1 varnish',
1194 silly registry.get     'cache-control': 'max-age=1',
1194 silly registry.get     'content-length': '3438',
1194 silly registry.get     'accept-ranges': 'bytes',
1194 silly registry.get     age: '1010',
1194 silly registry.get     'x-served-by': 'cache-v42-ASH, cache-lcy1132-LCY',
1194 silly registry.get     'x-cache': 'HIT, HIT',
1194 silly registry.get     'x-cache-hits': '1, 1',
1194 silly registry.get     'x-timer': 'S1401123843.647269,VS0,VE162',
1194 silly registry.get     vary: 'Accept',
1194 silly registry.get     'keep-alive': 'timeout=10, max=50',
1194 silly registry.get     connection: 'Keep-Alive' } ]
1195 silly addNameRange number 2 { name: 'is-promise',
1195 silly addNameRange   range: '>=1.0.0-0 <2.0.0-0',
1195 silly addNameRange   hasData: true }
1196 silly addNameRange versions [ 'is-promise', [ '1.0.0', '1.0.1' ] ]
1197 verbose addNamed [ 'is-promise', '1.0.1' ]
1198 verbose addNamed [ '1.0.1', '1.0.1' ]
1199 silly lockFile fb524531-is-promise-1-0-1 is-promise@1.0.1
1200 verbose lock is-promise@1.0.1 /Users/marc.bluemner/.npm/fb524531-is-promise-1-0-1.lock
1201 silly lockFile ef847fa5--is-promise-is-promise-1-0-1-tgz https://registry.npmjs.org/is-promise/-/is-promise-1.0.1.tgz
1202 verbose lock https://registry.npmjs.org/is-promise/-/is-promise-1.0.1.tgz /Users/marc.bluemner/.npm/ef847fa5--is-promise-is-promise-1-0-1-tgz.lock
1203 verbose addRemoteTarball [ 'https://registry.npmjs.org/is-promise/-/is-promise-1.0.1.tgz',
1203 verbose addRemoteTarball   '31573761c057e33c2e91aab9e96da08cefbe76e5' ]
1204 http 304 https://registry.npmjs.org/css-parse
1205 silly registry.get cb [ 304,
1205 silly registry.get   { date: 'Mon, 26 May 2014 17:04:03 GMT',
1205 silly registry.get     server: 'Apache',
1205 silly registry.get     via: '1.1 varnish',
1205 silly registry.get     'last-modified': 'Mon, 26 May 2014 17:04:03 GMT',
1205 silly registry.get     'cache-control': 'max-age=1',
1205 silly registry.get     etag: '"6BXOGAP55YA6GWKVZ5L6NZF73"',
1205 silly registry.get     'x-served-by': 'cache-lcy1120-LCY',
1205 silly registry.get     'x-cache': 'HIT',
1205 silly registry.get     'x-cache-hits': '1',
1205 silly registry.get     'x-timer': 'S1401123843.666390,VS0,VE156',
1205 silly registry.get     vary: 'Accept',
1205 silly registry.get     'content-length': '0',
1205 silly registry.get     'keep-alive': 'timeout=10, max=50',
1205 silly registry.get     connection: 'Keep-Alive' } ]
1206 verbose etag css-parse from cache
1207 info retry fetch attempt 1 at 19:04:03
1208 verbose fetch to= /var/folders/ln/thz02fyj0ll9_055y0fs6534fq_3w0/T/npm-64780-CRGbDJLW/1401123843915-0.6624766737222672/tmp.tgz
1209 http GET https://registry.npmjs.org/is-promise/-/is-promise-1.0.1.tgz
1210 http 304 https://registry.npmjs.org/css-stringify
1211 silly registry.get cb [ 304,
1211 silly registry.get   { date: 'Mon, 26 May 2014 17:04:03 GMT',
1211 silly registry.get     server: 'Apache',
1211 silly registry.get     via: '1.1 varnish',
1211 silly registry.get     'last-modified': 'Mon, 26 May 2014 17:04:03 GMT',
1211 silly registry.get     'cache-control': 'max-age=1',
1211 silly registry.get     etag: '"CXFOJSWJPME67ZKO9AVZQTSUG"',
1211 silly registry.get     'x-served-by': 'cache-lcy1125-LCY',
1211 silly registry.get     'x-cache': 'HIT',
1211 silly registry.get     'x-cache-hits': '1',
1211 silly registry.get     'x-timer': 'S1401123843.728373,VS0,VE154',
1211 silly registry.get     vary: 'Accept',
1211 silly registry.get     'content-length': '0',
1211 silly registry.get     'keep-alive': 'timeout=10, max=50',
1211 silly registry.get     connection: 'Keep-Alive' } ]
1212 verbose etag css-stringify from cache
1213 silly gunzTarPerm extractEntry lib/transform.js
1214 silly gunzTarPerm extractEntry lib/utils.js
1215 silly lockFile cd476481-css-parse-1-0-4 css-parse@1.0.4
1216 silly lockFile cd476481-css-parse-1-0-4 css-parse@1.0.4
1217 silly lockFile cee81f18-css-stringify-1-0-5 css-stringify@1.0.5
1218 silly lockFile cee81f18-css-stringify-1-0-5 css-stringify@1.0.5
1219 http 304 https://registry.npmjs.org/source-map
1220 silly registry.get cb [ 304,
1220 silly registry.get   { date: 'Mon, 26 May 2014 17:04:04 GMT',
1220 silly registry.get     server: 'Apache',
1220 silly registry.get     via: '1.1 varnish',
1220 silly registry.get     'last-modified': 'Mon, 26 May 2014 17:04:04 GMT',
1220 silly registry.get     'cache-control': 'max-age=1',
1220 silly registry.get     etag: '"8ANCV3RWS7H3RZ8BR64ARCR28"',
1220 silly registry.get     'x-served-by': 'cache-lcy1132-LCY',
1220 silly registry.get     'x-cache': 'HIT',
1220 silly registry.get     'x-cache-hits': '1',
1220 silly registry.get     'x-timer': 'S1401123844.130411,VS0,VE82',
1220 silly registry.get     vary: 'Accept',
1220 silly registry.get     'content-length': '0',
1220 silly registry.get     'keep-alive': 'timeout=10, max=49',
1220 silly registry.get     connection: 'Keep-Alive' } ]
1221 verbose etag source-map from cache
1222 silly addNameRange number 2 { name: 'source-map',
1222 silly addNameRange   range: '>=0.1.33-0 <0.2.0-0',
1222 silly addNameRange   hasData: true }
1223 silly addNameRange versions [ 'source-map',
1223 silly addNameRange   [ '0.0.0',
1223 silly addNameRange     '0.1.0',
1223 silly addNameRange     '0.1.1',
1223 silly addNameRange     '0.1.2',
1223 silly addNameRange     '0.1.3',
1223 silly addNameRange     '0.1.4',
1223 silly addNameRange     '0.1.5',
1223 silly addNameRange     '0.1.6',
1223 silly addNameRange     '0.1.7',
1223 silly addNameRange     '0.1.8',
1223 silly addNameRange     '0.1.9',
1223 silly addNameRange     '0.1.10',
1223 silly addNameRange     '0.1.11',
1223 silly addNameRange     '0.1.12',
1223 silly addNameRange     '0.1.13',
1223 silly addNameRange     '0.1.14',
1223 silly addNameRange     '0.1.15',
1223 silly addNameRange     '0.1.16',
1223 silly addNameRange     '0.1.17',
1223 silly addNameRange     '0.1.18',
1223 silly addNameRange     '0.1.19',
1223 silly addNameRange     '0.1.20',
1223 silly addNameRange     '0.1.21',
1223 silly addNameRange     '0.1.22',
1223 silly addNameRange     '0.1.23',
1223 silly addNameRange     '0.1.24',
1223 silly addNameRange     '0.1.25',
1223 silly addNameRange     '0.1.26',
1223 silly addNameRange     '0.1.27',
1223 silly addNameRange     '0.1.28',
1223 silly addNameRange     '0.1.29',
1223 silly addNameRange     '0.1.30',
1223 silly addNameRange     '0.1.31',
1223 silly addNameRange     '0.1.32',
1223 silly addNameRange     '0.1.33' ] ]
1224 verbose addNamed [ 'source-map', '0.1.33' ]
1225 verbose addNamed [ '0.1.33', '0.1.33' ]
1226 silly lockFile 0c9e4a5b-source-map-0-1-33 source-map@0.1.33
1227 verbose lock source-map@0.1.33 /Users/marc.bluemner/.npm/0c9e4a5b-source-map-0-1-33.lock
1228 silly gunzTarPerm extractEntry test/run-tests.js
1229 silly gunzTarPerm extractEntry test/compress/arrays.js
1230 silly gunzTarPerm extractEntry test/compress/issue-12.js
1231 silly gunzTarPerm extractEntry test/compress/issue-126.js
1232 silly lockFile 0c9e4a5b-source-map-0-1-33 source-map@0.1.33
1233 silly lockFile 0c9e4a5b-source-map-0-1-33 source-map@0.1.33
1234 silly resolved [ { name: 'css-parse',
1234 silly resolved     version: '1.0.4',
1234 silly resolved     description: 'CSS parser',
1234 silly resolved     keywords: [ 'css', 'parser', 'stylesheet' ],
1234 silly resolved     author: { name: 'TJ Holowaychuk', email: 'tj@vision-media.ca' },
1234 silly resolved     devDependencies: { mocha: '*', should: '*' },
1234 silly resolved     main: 'index',
1234 silly resolved     readme: '\n# css-parse\n\n  CSS parser.\n\n## Example\n\njs:\n\n```js\nvar parse = require(\'css-parse\')\nparse(\'tobi { name: "tobi" }\')\n```\n\nobject returned:\n\n```json\n{\n  "stylesheet": {\n    "rules": [\n      {\n        "selectors": ["tobi"],\n        "declarations": [\n          {\n            "property": "name",\n            "value": "tobi"\n          }\n        ]\n      }\n    ]\n  }\n}\n```\n\n## Performance\n\n  Parsed 15,000 lines of CSS (2mb) in 40ms on my macbook air.\n\n## License \n\n(The MIT License)\n\nCopyright (c) 2012 TJ Holowaychuk &lt;tj@vision-media.ca&gt;\n\nPermission is hereby granted, free of charge, to any person obtaining\na copy of this software and associated documentation files (the\n\'Software\'), to deal in the Software without restriction, including\nwithout limitation the rights to use, copy, modify, merge, publish,\ndistribute, sublicense, and/or sell copies of the Software, and to\npermit persons to whom the Software is furnished to do so, subject to\nthe following conditions:\n\nThe above copyright notice and this permission notice shall be\nincluded in all copies or substantial portions of the Software.\n\nTHE SOFTWARE IS PROVIDED \'AS IS\', WITHOUT WARRANTY OF ANY KIND,\nEXPRESS OR IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF\nMERCHANTABILITY, FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT.\nIN NO EVENT SHALL THE AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY\nCLAIM, DAMAGES OR OTHER LIABILITY, WHETHER IN AN ACTION OF CONTRACT,\nTORT OR OTHERWISE, ARISING FROM, OUT OF OR IN CONNECTION WITH THE\nSOFTWARE OR THE USE OR OTHER DEALINGS IN THE SOFTWARE.',
1234 silly resolved     readmeFilename: 'Readme.md',
1234 silly resolved     _id: 'css-parse@1.0.4',
1234 silly resolved     _shasum: '38b0503fbf9da9f54e9c1dbda60e145c77117bdd',
1234 silly resolved     _from: 'css-parse@1.0.4',
1234 silly resolved     _resolved: 'https://registry.npmjs.org/css-parse/-/css-parse-1.0.4.tgz' },
1234 silly resolved   { name: 'css-stringify',
1234 silly resolved     version: '1.0.5',
1234 silly resolved     description: 'CSS compiler',
1234 silly resolved     keywords: [ 'css', 'stringify', 'stylesheet' ],
1234 silly resolved     author: { name: 'TJ Holowaychuk', email: 'tj@vision-media.ca' },
1234 silly resolved     devDependencies: { mocha: '*', should: '*', 'css-parse': '1.0.3' },
1234 silly resolved     main: 'index',
1234 silly resolved     readme: '\n# css-stringify\n\n  CSS compiler using the AST provided by [css-parse](https://github.com/visionmedia/css-parse).\n\n## Performance\n\n  Formats 15,000 lines of CSS (2mb) in 23ms on my macbook air.\n\n## License\n\n(The MIT License)\n\nCopyright (c) 2012 TJ Holowaychuk &lt;tj@vision-media.ca&gt;\n\nPermission is hereby granted, free of charge, to any person obtaining\na copy of this software and associated documentation files (the\n\'Software\'), to deal in the Software without restriction, including\nwithout limitation the rights to use, copy, modify, merge, publish,\ndistribute, sublicense, and/or sell copies of the Software, and to\npermit persons to whom the Software is furnished to do so, subject to\nthe following conditions:\n\nThe above copyright notice and this permission notice shall be\nincluded in all copies or substantial portions of the Software.\n\nTHE SOFTWARE IS PROVIDED \'AS IS\', WITHOUT WARRANTY OF ANY KIND,\nEXPRESS OR IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF\nMERCHANTABILITY, FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT.\nIN NO EVENT SHALL THE AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY\nCLAIM, DAMAGES OR OTHER LIABILITY, WHETHER IN AN ACTION OF CONTRACT,\nTORT OR OTHERWISE, ARISING FROM, OUT OF OR IN CONNECTION WITH THE\nSOFTWARE OR THE USE OR OTHER DEALINGS IN THE SOFTWARE.\n',
1234 silly resolved     readmeFilename: 'Readme.md',
1234 silly resolved     _id: 'css-stringify@1.0.5',
1234 silly resolved     _shasum: 'b0d042946db2953bb9d292900a6cb5f6d0122031',
1234 silly resolved     _from: 'css-stringify@1.0.5',
1234 silly resolved     _resolved: 'https://registry.npmjs.org/css-stringify/-/css-stringify-1.0.5.tgz' } ]
1235 info install css-parse@1.0.4 into /usr/local/lib/node_modules/jade/node_modules/transformers/node_modules/css
1236 info install css-stringify@1.0.5 into /usr/local/lib/node_modules/jade/node_modules/transformers/node_modules/css
1237 info installOne css-parse@1.0.4
1238 info installOne css-stringify@1.0.5
1239 silly lockFile 0fe92a26-source-map-0-1-33 source-map@~0.1.33
1240 silly lockFile 0fe92a26-source-map-0-1-33 source-map@~0.1.33
1241 info /usr/local/lib/node_modules/jade/node_modules/transformers/node_modules/css/node_modules/css-parse unbuild
1242 info /usr/local/lib/node_modules/jade/node_modules/transformers/node_modules/css/node_modules/css-stringify unbuild
1243 silly gunzTarPerm extractEntry test/compress/issue-143.js
1244 silly gunzTarPerm extractEntry test/compress/issue-105.js
1245 verbose tar unpack /Users/marc.bluemner/.npm/css-parse/1.0.4/package.tgz
1246 silly lockFile 4b7f715c-dules-css-node-modules-css-parse tar:///usr/local/lib/node_modules/jade/node_modules/transformers/node_modules/css/node_modules/css-parse
1247 verbose lock tar:///usr/local/lib/node_modules/jade/node_modules/transformers/node_modules/css/node_modules/css-parse /Users/marc.bluemner/.npm/4b7f715c-dules-css-node-modules-css-parse.lock
1248 silly lockFile 964a9b80--npm-css-parse-1-0-4-package-tgz tar:///Users/marc.bluemner/.npm/css-parse/1.0.4/package.tgz
1249 verbose lock tar:///Users/marc.bluemner/.npm/css-parse/1.0.4/package.tgz /Users/marc.bluemner/.npm/964a9b80--npm-css-parse-1-0-4-package-tgz.lock
1250 verbose tar unpack /Users/marc.bluemner/.npm/css-stringify/1.0.5/package.tgz
1251 silly lockFile 9982c746-s-css-node-modules-css-stringify tar:///usr/local/lib/node_modules/jade/node_modules/transformers/node_modules/css/node_modules/css-stringify
1252 verbose lock tar:///usr/local/lib/node_modules/jade/node_modules/transformers/node_modules/css/node_modules/css-stringify /Users/marc.bluemner/.npm/9982c746-s-css-node-modules-css-stringify.lock
1253 silly lockFile b4fd1cc9--css-stringify-1-0-5-package-tgz tar:///Users/marc.bluemner/.npm/css-stringify/1.0.5/package.tgz
1254 verbose lock tar:///Users/marc.bluemner/.npm/css-stringify/1.0.5/package.tgz /Users/marc.bluemner/.npm/b4fd1cc9--css-stringify-1-0-5-package-tgz.lock
1255 silly gunzTarPerm modes [ '755', '644' ]
1256 silly gunzTarPerm modes [ '755', '644' ]
1257 http 304 https://registry.npmjs.org/uglify-to-browserify
1258 silly registry.get cb [ 304,
1258 silly registry.get   { date: 'Mon, 26 May 2014 17:04:04 GMT',
1258 silly registry.get     server: 'Apache',
1258 silly registry.get     via: '1.1 varnish',
1258 silly registry.get     'last-modified': 'Mon, 26 May 2014 17:04:04 GMT',
1258 silly registry.get     'cache-control': 'max-age=1',
1258 silly registry.get     etag: '"14ZOWXXYNOUHCBA3EDYFH6O08"',
1258 silly registry.get     'x-served-by': 'cache-lcy1125-LCY',
1258 silly registry.get     'x-cache': 'HIT',
1258 silly registry.get     'x-cache-hits': '1',
1258 silly registry.get     'x-timer': 'S1401123844.225556,VS0,VE168',
1258 silly registry.get     vary: 'Accept',
1258 silly registry.get     'content-length': '0',
1258 silly registry.get     'keep-alive': 'timeout=10, max=49',
1258 silly registry.get     connection: 'Keep-Alive' } ]
1259 verbose etag uglify-to-browserify from cache
1260 http 304 https://registry.npmjs.org/source-map
1261 silly registry.get cb [ 304,
1261 silly registry.get   { date: 'Mon, 26 May 2014 17:04:04 GMT',
1261 silly registry.get     server: 'Apache',
1261 silly registry.get     via: '1.1 varnish',
1261 silly registry.get     'last-modified': 'Mon, 26 May 2014 17:04:04 GMT',
1261 silly registry.get     'cache-control': 'max-age=1',
1261 silly registry.get     etag: '"8ANCV3RWS7H3RZ8BR64ARCR28"',
1261 silly registry.get     'x-served-by': 'cache-lcy1127-LCY',
1261 silly registry.get     'x-cache': 'HIT',
1261 silly registry.get     'x-cache-hits': '1',
1261 silly registry.get     'x-timer': 'S1401123844.635862,VS0,VE0',
1261 silly registry.get     vary: 'Accept',
1261 silly registry.get     'content-length': '0',
1261 silly registry.get     'keep-alive': 'timeout=10, max=50',
1261 silly registry.get     connection: 'Keep-Alive' } ]
1262 verbose etag source-map from cache
1263 http 304 https://registry.npmjs.org/optimist
1264 silly registry.get cb [ 304,
1264 silly registry.get   { date: 'Mon, 26 May 2014 17:04:04 GMT',
1264 silly registry.get     server: 'Apache',
1264 silly registry.get     via: '1.1 varnish',
1264 silly registry.get     'last-modified': 'Mon, 26 May 2014 17:04:04 GMT',
1264 silly registry.get     'cache-control': 'max-age=1',
1264 silly registry.get     etag: '"1IKU6GRZMZDCQ2MB3C2XUCU7G"',
1264 silly registry.get     'x-served-by': 'cache-lcy1125-LCY',
1264 silly registry.get     'x-cache': 'HIT',
1264 silly registry.get     'x-cache-hits': '1',
1264 silly registry.get     'x-timer': 'S1401123844.623797,VS0,VE81',
1264 silly registry.get     vary: 'Accept',
1264 silly registry.get     'content-length': '0',
1264 silly registry.get     'keep-alive': 'timeout=10, max=50',
1264 silly registry.get     connection: 'Keep-Alive' } ]
1265 verbose etag optimist from cache
1266 silly gunzTarPerm extractEntry package.json
1267 silly gunzTarPerm extractEntry package.json
1268 silly addNameRange number 2 { name: 'uglify-to-browserify',
1268 silly addNameRange   range: '>=1.0.0-0 <1.1.0-0',
1268 silly addNameRange   hasData: true }
1269 silly addNameRange versions [ 'uglify-to-browserify',
1269 silly addNameRange   [ '0.0.1', '1.0.0', '1.0.1', '1.0.2' ] ]
1270 verbose addNamed [ 'uglify-to-browserify', '1.0.2' ]
1271 verbose addNamed [ '1.0.2', '1.0.2' ]
1272 silly lockFile 1fc290f9-uglify-to-browserify-1-0-2 uglify-to-browserify@1.0.2
1273 verbose lock uglify-to-browserify@1.0.2 /Users/marc.bluemner/.npm/1fc290f9-uglify-to-browserify-1-0-2.lock
1274 silly gunzTarPerm extractEntry .npmignore
1275 silly gunzTarPerm extractEntry index.js
1276 silly addNameRange number 2 { name: 'optimist', range: '>=0.3.5-0 <0.4.0-0', hasData: true }
1277 silly addNameRange versions [ 'optimist',
1277 silly addNameRange   [ '0.0.1',
1277 silly addNameRange     '0.0.2',
1277 silly addNameRange     '0.0.4',
1277 silly addNameRange     '0.0.5',
1277 silly addNameRange     '0.0.6',
1277 silly addNameRange     '0.0.7',
1277 silly addNameRange     '0.1.0',
1277 silly addNameRange     '0.1.1',
1277 silly addNameRange     '0.1.2',
1277 silly addNameRange     '0.1.3',
1277 silly addNameRange     '0.1.4',
1277 silly addNameRange     '0.1.5',
1277 silly addNameRange     '0.1.6',
1277 silly addNameRange     '0.1.7',
1277 silly addNameRange     '0.1.8',
1277 silly addNameRange     '0.1.9',
1277 silly addNameRange     '0.0.3',
1277 silly addNameRange     '0.2.0',
1277 silly addNameRange     '0.2.1',
1277 silly addNameRange     '0.2.2',
1277 silly addNameRange     '0.2.3',
1277 silly addNameRange     '0.2.4',
1277 silly addNameRange     '0.2.5',
1277 silly addNameRange     '0.2.6',
1277 silly addNameRange     '0.2.7',
1277 silly addNameRange     '0.2.8',
1277 silly addNameRange     '0.3.0',
1277 silly addNameRange     '0.3.1',
1277 silly addNameRange     '0.3.3',
1277 silly addNameRange     '0.3.4',
1277 silly addNameRange     '0.3.5',
1277 silly addNameRange     '0.3.6',
1277 silly addNameRange     '0.3.7',
1277 silly addNameRange     '0.4.0',
1277 silly addNameRange     '0.5.0',
1277 silly addNameRange     '0.5.1',
1277 silly addNameRange     '0.5.2',
1277 silly addNameRange     '0.6.0',
1277 silly addNameRange     '0.6.1' ] ]
1278 verbose addNamed [ 'optimist', '0.3.7' ]
1279 verbose addNamed [ '0.3.7', '0.3.7' ]
1280 silly lockFile 090e1d8d-optimist-0-3-7 optimist@0.3.7
1281 verbose lock optimist@0.3.7 /Users/marc.bluemner/.npm/090e1d8d-optimist-0-3-7.lock
1282 silly addNameRange number 2 { name: 'source-map',
1282 silly addNameRange   range: '>=0.1.7-0 <0.2.0-0',
1282 silly addNameRange   hasData: true }
1283 silly addNameRange versions [ 'source-map',
1283 silly addNameRange   [ '0.0.0',
1283 silly addNameRange     '0.1.0',
1283 silly addNameRange     '0.1.1',
1283 silly addNameRange     '0.1.2',
1283 silly addNameRange     '0.1.3',
1283 silly addNameRange     '0.1.4',
1283 silly addNameRange     '0.1.5',
1283 silly addNameRange     '0.1.6',
1283 silly addNameRange     '0.1.7',
1283 silly addNameRange     '0.1.8',
1283 silly addNameRange     '0.1.9',
1283 silly addNameRange     '0.1.10',
1283 silly addNameRange     '0.1.11',
1283 silly addNameRange     '0.1.12',
1283 silly addNameRange     '0.1.13',
1283 silly addNameRange     '0.1.14',
1283 silly addNameRange     '0.1.15',
1283 silly addNameRange     '0.1.16',
1283 silly addNameRange     '0.1.17',
1283 silly addNameRange     '0.1.18',
1283 silly addNameRange     '0.1.19',
1283 silly addNameRange     '0.1.20',
1283 silly addNameRange     '0.1.21',
1283 silly addNameRange     '0.1.22',
1283 silly addNameRange     '0.1.23',
1283 silly addNameRange     '0.1.24',
1283 silly addNameRange     '0.1.25',
1283 silly addNameRange     '0.1.26',
1283 silly addNameRange     '0.1.27',
1283 silly addNameRange     '0.1.28',
1283 silly addNameRange     '0.1.29',
1283 silly addNameRange     '0.1.30',
1283 silly addNameRange     '0.1.31',
1283 silly addNameRange     '0.1.32',
1283 silly addNameRange     '0.1.33' ] ]
1284 verbose addNamed [ 'source-map', '0.1.33' ]
1285 verbose addNamed [ '0.1.33', '0.1.33' ]
1286 silly lockFile 0c9e4a5b-source-map-0-1-33 source-map@0.1.33
1287 verbose lock source-map@0.1.33 /Users/marc.bluemner/.npm/0c9e4a5b-source-map-0-1-33.lock
1288 silly gunzTarPerm extractEntry .npmignore
1289 silly gunzTarPerm extractEntry index.js
1290 silly lockFile 0c9e4a5b-source-map-0-1-33 source-map@0.1.33
1291 silly lockFile 0c9e4a5b-source-map-0-1-33 source-map@0.1.33
1292 silly lockFile 19b4245f-source-map-0-1-7 source-map@~0.1.7
1293 silly lockFile 19b4245f-source-map-0-1-7 source-map@~0.1.7
1294 silly gunzTarPerm extractEntry component.json
1295 silly gunzTarPerm extractEntry History.md
1296 silly gunzTarPerm extractEntry component.json
1297 silly gunzTarPerm extractEntry History.md
1298 http 200 https://registry.npmjs.org/async
1299 silly registry.get cb [ 200,
1299 silly registry.get   { date: 'Mon, 26 May 2014 17:04:04 GMT',
1299 silly registry.get     server: 'CouchDB/1.5.0 (Erlang OTP/R14B04)',
1299 silly registry.get     etag: '"4K1SRVPGM1UH094TLV7URU7J6"',
1299 silly registry.get     'content-type': 'application/json',
1299 silly registry.get     via: '1.1 varnish',
1299 silly registry.get     'cache-control': 'max-age=1',
1299 silly registry.get     'content-length': '103165',
1299 silly registry.get     'accept-ranges': 'bytes',
1299 silly registry.get     age: '2',
1299 silly registry.get     'x-served-by': 'cache-v37-ASH, cache-lcy1120-LCY',
1299 silly registry.get     'x-cache': 'HIT, MISS',
1299 silly registry.get     'x-cache-hits': '3, 0',
1299 silly registry.get     'x-timer': 'S1401123844.148052,VS0,VE82',
1299 silly registry.get     vary: 'Accept',
1299 silly registry.get     'keep-alive': 'timeout=10, max=49',
1299 silly registry.get     connection: 'Keep-Alive' } ]
1300 silly lockFile 1fc290f9-uglify-to-browserify-1-0-2 uglify-to-browserify@1.0.2
1301 silly lockFile 1fc290f9-uglify-to-browserify-1-0-2 uglify-to-browserify@1.0.2
1302 silly lockFile 8d4498e3-uglify-to-browserify-1-0-0 uglify-to-browserify@~1.0.0
1303 silly lockFile 8d4498e3-uglify-to-browserify-1-0-0 uglify-to-browserify@~1.0.0
1304 silly addNameRange number 2 { name: 'async', range: '>=0.2.6-0 <0.3.0-0', hasData: true }
1305 silly addNameRange versions [ 'async',
1305 silly addNameRange   [ '0.1.0',
1305 silly addNameRange     '0.1.1',
1305 silly addNameRange     '0.1.2',
1305 silly addNameRange     '0.1.3',
1305 silly addNameRange     '0.1.4',
1305 silly addNameRange     '0.1.5',
1305 silly addNameRange     '0.1.6',
1305 silly addNameRange     '0.1.7',
1305 silly addNameRange     '0.1.8',
1305 silly addNameRange     '0.1.9',
1305 silly addNameRange     '0.1.10',
1305 silly addNameRange     '0.1.11',
1305 silly addNameRange     '0.1.12',
1305 silly addNameRange     '0.1.13',
1305 silly addNameRange     '0.1.14',
1305 silly addNameRange     '0.1.15',
1305 silly addNameRange     '0.1.16',
1305 silly addNameRange     '0.1.17',
1305 silly addNameRange     '0.1.18',
1305 silly addNameRange     '0.1.19',
1305 silly addNameRange     '0.1.20',
1305 silly addNameRange     '0.1.21',
1305 silly addNameRange     '0.1.22',
1305 silly addNameRange     '0.2.0',
1305 silly addNameRange     '0.2.1',
1305 silly addNameRange     '0.2.2',
1305 silly addNameRange     '0.2.3',
1305 silly addNameRange     '0.2.4',
1305 silly addNameRange     '0.2.5',
1305 silly addNameRange     '0.2.6',
1305 silly addNameRange     '0.2.7',
1305 silly addNameRange     '0.2.8',
1305 silly addNameRange     '0.2.9',
1305 silly addNameRange     '0.2.10',
1305 silly addNameRange     '0.3.0',
1305 silly addNameRange     '0.4.0',
1305 silly addNameRange     '0.4.1',
1305 silly addNameRange     '0.5.0',
1305 silly addNameRange     '0.6.0',
1305 silly addNameRange     '0.6.1',
1305 silly addNameRange     '0.6.2',
1305 silly addNameRange     '0.7.0',
1305 silly addNameRange     '0.8.0',
1305 silly addNameRange     '0.9.0' ] ]
1306 verbose addNamed [ 'async', '0.2.10' ]
1307 verbose addNamed [ '0.2.10', '0.2.10' ]
1308 silly lockFile 098b530d-async-0-2-10 async@0.2.10
1309 verbose lock async@0.2.10 /Users/marc.bluemner/.npm/098b530d-async-0-2-10.lock
1310 silly gunzTarPerm extractEntry Makefile
1311 silly gunzTarPerm extractEntry Readme.md
1312 silly gunzTarPerm extractEntry Makefile
1313 silly gunzTarPerm extractEntry Readme.md
1314 silly lockFile 090e1d8d-optimist-0-3-7 optimist@0.3.7
1315 silly lockFile 090e1d8d-optimist-0-3-7 optimist@0.3.7
1316 silly lockFile a1f99b53-optimist-0-3-5 optimist@~0.3.5
1317 silly lockFile a1f99b53-optimist-0-3-5 optimist@~0.3.5
1318 silly lockFile 098b530d-async-0-2-10 async@0.2.10
1319 silly lockFile 098b530d-async-0-2-10 async@0.2.10
1320 silly resolved [ { name: 'source-map',
1320 silly resolved     description: 'Generates and consumes source maps',
1320 silly resolved     version: '0.1.33',
1320 silly resolved     homepage: 'https://github.com/mozilla/source-map',
1320 silly resolved     author: { name: 'Nick Fitzgerald', email: 'nfitzgerald@mozilla.com' },
1320 silly resolved     contributors:
1320 silly resolved      [ [Object],
1320 silly resolved        [Object],
1320 silly resolved        [Object],
1320 silly resolved        [Object],
1320 silly resolved        [Object],
1320 silly resolved        [Object],
1320 silly resolved        [Object],
1320 silly resolved        [Object],
1320 silly resolved        [Object],
1320 silly resolved        [Object],
1320 silly resolved        [Object],
1320 silly resolved        [Object],
1320 silly resolved        [Object],
1320 silly resolved        [Object],
1320 silly resolved        [Object],
1320 silly resolved        [Object],
1320 silly resolved        [Object],
1320 silly resolved        [Object],
1320 silly resolved        [Object],
1320 silly resolved        [Object] ],
1320 silly resolved     repository: { type: 'git', url: 'http://github.com/mozilla/source-map.git' },
1320 silly resolved     directories: { lib: './lib' },
1320 silly resolved     main: './lib/source-map.js',
1320 silly resolved     engines: { node: '>=0.8.0' },
1320 silly resolved     licenses: [ [Object] ],
1320 silly resolved     dependencies: { amdefine: '>=0.0.4' },
1320 silly resolved     devDependencies: { dryice: '>=0.4.8' },
1320 silly resolved     scripts:
1320 silly resolved      { test: 'node test/run-tests.js',
1320 silly resolved        build: 'node Makefile.dryice.js' },
1320 silly resolved     readme: '# Source Map\n\nThis is a library to generate and consume the source map format\n[described here][format].\n\nThis library is written in the Asynchronous Module Definition format, and works\nin the following environments:\n\n* Modern Browsers supporting ECMAScript 5 (either after the build, or with an\n  AMD loader such as RequireJS)\n\n* Inside Firefox (as a JSM file, after the build)\n\n* With NodeJS versions 0.8.X and higher\n\n## Node\n\n    $ npm install source-map\n\n## Building from Source (for everywhere else)\n\nInstall Node and then run\n\n    $ git clone https://fitzgen@github.com/mozilla/source-map.git\n    $ cd source-map\n    $ npm link .\n\nNext, run\n\n    $ node Makefile.dryice.js\n\nThis should spew a bunch of stuff to stdout, and create the following files:\n\n* `dist/source-map.js` - The unminified browser version.\n\n* `dist/source-map.min.js` - The minified browser version.\n\n* `dist/SourceMap.jsm` - The JavaScript Module for inclusion in Firefox source.\n\n## Examples\n\n### Consuming a source map\n\n    var rawSourceMap = {\n      version: 3,\n      file: \'min.js\',\n      names: [\'bar\', \'baz\', \'n\'],\n      sources: [\'one.js\', \'two.js\'],\n      sourceRoot: \'http://example.com/www/js/\',\n      mappings: \'CAAC,IAAI,IAAM,SAAUA,GAClB,OAAOC,IAAID;CCDb,IAAI,IAAM,SAAUE,GAClB,OAAOA\'\n    };\n\n    var smc = new SourceMapConsumer(rawSourceMap);\n\n    console.log(smc.sources);\n    // [ \'http://example.com/www/js/one.js\',\n    //   \'http://example.com/www/js/two.js\' ]\n\n    console.log(smc.originalPositionFor({\n      line: 2,\n      column: 28\n    }));\n    // { source: \'http://example.com/www/js/two.js\',\n    //   line: 2,\n    //   column: 10,\n    //   name: \'n\' }\n\n    console.log(smc.generatedPositionFor({\n      source: \'http://example.com/www/js/two.js\',\n      line: 2,\n      column: 10\n    }));\n    // { line: 2, column: 28 }\n\n    smc.eachMapping(function (m) {\n      // ...\n    });\n\n### Generating a source map\n\nIn depth guide:\n[**Compiling to JavaScript, and Debugging with Source Maps**](https://hacks.mozilla.org/2013/05/compiling-to-javascript-and-debugging-with-source-maps/)\n\n#### With SourceNode (high level API)\n\n    function compile(ast) {\n      switch (ast.type) {\n      case \'BinaryExpression\':\n        return new SourceNode(\n          ast.location.line,\n          ast.location.column,\n          ast.location.source,\n          [compile(ast.left), " + ", compile(ast.right)]\n        );\n      case \'Literal\':\n        return new SourceNode(\n          ast.location.line,\n          ast.location.column,\n          ast.location.source,\n          String(ast.value)\n        );\n      // ...\n      default:\n        throw new Error("Bad AST");\n      }\n    }\n\n    var ast = parse("40 + 2", "add.js");\n    console.log(compile(ast).toStringWithSourceMap({\n      file: \'add.js\'\n    }));\n    // { code: \'40 + 2\',\n    //   map: [object SourceMapGenerator] }\n\n#### With SourceMapGenerator (low level API)\n\n    var map = new SourceMapGenerator({\n      file: "source-mapped.js"\n    });\n\n    map.addMapping({\n      generated: {\n        line: 10,\n        column: 35\n      },\n      source: "foo.js",\n      original: {\n        line: 33,\n        column: 2\n      },\n      name: "christopher"\n    });\n\n    console.log(map.toString());\n    // \'{"version":3,"file":"source-mapped.js","sources":["foo.js"],"names":["christopher"],"mappings":";;;;;;;;;mCAgCEA"}\'\n\n## API\n\nGet a reference to the module:\n\n    // NodeJS\n    var sourceMap = require(\'source-map\');\n\n    // Browser builds\n    var sourceMap = window.sourceMap;\n\n    // Inside Firefox\n    let sourceMap = {};\n    Components.utils.import(\'resource:///modules/devtools/SourceMap.jsm\', sourceMap);\n\n### SourceMapConsumer\n\nA SourceMapConsumer instance represents a parsed source map which we can query\nfor information about the original file positions by giving it a file position\nin the generated source.\n\n#### new SourceMapConsumer(rawSourceMap)\n\nThe only parameter is the raw source map (either as a string which can be\n`JSON.parse`\'d, or an object). According to the spec, source maps have the\nfollowing attributes:\n\n* `version`: Which version of the source map spec this map is following.\n\n* `sources`: An array of URLs to the original source files.\n\n* `names`: An array of identifiers which can be referrenced by individual\n  mappings.\n\n* `sourceRoot`: Optional. The URL root from which all sources are relative.\n\n* `sourcesContent`: Optional. An array of contents of the original source files.\n\n* `mappings`: A string of base64 VLQs which contain the actual mappings.\n\n* `file`: Optional. The generated filename this source map is associated with.\n\n#### SourceMapConsumer.prototype.originalPositionFor(generatedPosition)\n\nReturns the original source, line, and column information for the generated\nsource\'s line and column positions provided. The only argument is an object with\nthe following properties:\n\n* `line`: The line number in the generated source.\n\n* `column`: The column number in the generated source.\n\nand an object is returned with the following properties:\n\n* `source`: The original source file, or null if this information is not\n  available.\n\n* `line`: The line number in the original source, or null if this information is\n  not available.\n\n* `column`: The column number in the original source, or null or null if this\n  information is not available.\n\n* `name`: The original identifier, or null if this information is not available.\n\n#### SourceMapConsumer.prototype.generatedPositionFor(originalPosition)\n\nReturns the generated line and column information for the original source,\nline, and column positions provided. The only argument is an object with\nthe following properties:\n\n* `source`: The filename of the original source.\n\n* `line`: The line number in the original source.\n\n* `column`: The column number in the original source.\n\nand an object is returned with the following properties:\n\n* `line`: The line number in the generated source, or null.\n\n* `column`: The column number in the generated source, or null.\n\n#### SourceMapConsumer.prototype.sourceContentFor(source)\n\nReturns the original source content for the source provided. The only\nargument is the URL of the original source file.\n\n#### SourceMapConsumer.prototype.eachMapping(callback, context, order)\n\nIterate over each mapping between an original source/line/column and a\ngenerated line/column in this source map.\n\n* `callback`: The function that is called with each mapping. Mappings have the\n  form `{ source, generatedLine, generatedColumn, originalLine, originalColumn,\n  name }`\n\n* `context`: Optional. If specified, this object will be the value of `this`\n  every time that `callback` is called.\n\n* `order`: Either `SourceMapConsumer.GENERATED_ORDER` or\n  `SourceMapConsumer.ORIGINAL_ORDER`. Specifies whether you want to iterate over\n  the mappings sorted by the generated file\'s line/column order or the\n  original\'s source/line/column order, respectively. Defaults to\n  `SourceMapConsumer.GENERATED_ORDER`.\n\n### SourceMapGenerator\n\nAn instance of the SourceMapGenerator represents a source map which is being\nbuilt incrementally.\n\n#### new SourceMapGenerator([startOfSourceMap])\n\nYou may pass an object with the following properties:\n\n* `file`: The filename of the generated source that this source map is\n  associated with.\n\n* `sourceRoot`: A root for all relative URLs in this source map.\n\n#### SourceMapGenerator.fromSourceMap(sourceMapConsumer)\n\nCreates a new SourceMapGenerator based on a SourceMapConsumer\n\n* `sourceMapConsumer` The SourceMap.\n\n#### SourceMapGenerator.prototype.addMapping(mapping)\n\nAdd a single mapping from original source line and column to the generated\nsource\'s line and column for this source map being created. The mapping object\nshould have the following properties:\n\n* `generated`: An object with the generated line and column positions.\n\n* `original`: An object with the original line and column positions.\n\n* `source`: The original source file (relative to the sourceRoot).\n\n* `name`: An optional original token name for this mapping.\n\n#### SourceMapGenerator.prototype.setSourceContent(sourceFile, sourceContent)\n\nSet the source content for an original source file.\n\n* `sourceFile` the URL of the original source file.\n\n* `sourceContent` the content of the source file.\n\n#### SourceMapGenerator.prototype.applySourceMap(sourceMapConsumer[, sourceFile[, sourceMapPath]])\n\nApplies a SourceMap for a source file to the SourceMap.\nEach mapping to the supplied source file is rewritten using the\nsupplied SourceMap. Note: The resolution for the resulting mappings\nis the minimium of this map and the supplied map.\n\n* `sourceMapConsumer`: The SourceMap to be applied.\n\n* `sourceFile`: Optional. The filename of the source file.\n  If omitted, sourceMapConsumer.file will be used, if it exists.\n  Otherwise an error will be thrown.\n\n* `sourceMapPath`: Optional. The dirname of the path to the SourceMap\n  to be applied. If relative, it is relative to the SourceMap.\n\n  This parameter is needed when the two SourceMaps aren\'t in the same\n  directory, and the SourceMap to be applied contains relative source\n  paths. If so, those relative source paths need to be rewritten\n  relative to the SourceMap.\n\n  If omitted, it is assumed that both SourceMaps are in the same directory,\n  thus not needing any rewriting. (Supplying `\'.\'` has the same effect.)\n\n#### SourceMapGenerator.prototype.toString()\n\nRenders the source map being generated to a string.\n\n### SourceNode\n\nSourceNodes provide a way to abstract over interpolating and/or concatenating\nsnippets of generated JavaScript source code, while maintaining the line and\ncolumn information associated between those snippets and the original source\ncode. This is useful as the final intermediate representation a compiler might\nuse before outputting the generated JS and source map.\n\n#### new SourceNode([line, column, source[, chunk[, name]]])\n\n* `line`: The original line number associated with this source node, or null if\n  it isn\'t associated with an original line.\n\n* `column`: The original column number associated with this source node, or null\n  if it isn\'t associated with an original column.\n\n* `source`: The original source\'s filename; null if no filename is provided.\n\n* `chunk`: Optional. Is immediately passed to `SourceNode.prototype.add`, see\n  below.\n\n* `name`: Optional. The original identifier.\n\n#### SourceNode.fromStringWithSourceMap(code, sourceMapConsumer)\n\nCreates a SourceNode from generated code and a SourceMapConsumer.\n\n* `code`: The generated code\n\n* `sourceMapConsumer` The SourceMap for the generated code\n\n#### SourceNode.prototype.add(chunk)\n\nAdd a chunk of generated JS to this source node.\n\n* `chunk`: A string snippet of generated JS code, another instance of\n   `SourceNode`, or an array where each member is one of those things.\n\n#### SourceNode.prototype.prepend(chunk)\n\nPrepend a chunk of generated JS to this source node.\n\n* `chunk`: A string snippet of generated JS code, another instance of\n   `SourceNode`, or an array where each member is one of those things.\n\n#### SourceNode.prototype.setSourceContent(sourceFile, sourceContent)\n\nSet the source content for a source file. This will be added to the\n`SourceMap` in the `sourcesContent` field.\n\n* `sourceFile`: The filename of the source file\n\n* `sourceContent`: The content of the source file\n\n#### SourceNode.prototype.walk(fn)\n\nWalk over the tree of JS snippets in this node and its children. The walking\nfunction is called once for each snippet of JS and is passed that snippet and\nthe its original associated source\'s line/column location.\n\n* `fn`: The traversal function.\n\n#### SourceNode.prototype.walkSourceContents(fn)\n\nWalk over the tree of SourceNodes. The walking function is called for each\nsource file content and is passed the filename and source content.\n\n* `fn`: The traversal function.\n\n#### SourceNode.prototype.join(sep)\n\nLike `Array.prototype.join` except for SourceNodes. Inserts the separator\nbetween each of this source node\'s children.\n\n* `sep`: The separator.\n\n#### SourceNode.prototype.replaceRight(pattern, replacement)\n\nCall `String.prototype.replace` on the very right-most source snippet. Useful\nfor trimming whitespace from the end of a source node, etc.\n\n* `pattern`: The pattern to replace.\n\n* `replacement`: The thing to replace the pattern with.\n\n#### SourceNode.prototype.toString()\n\nReturn the string representation of this source node. Walks over the tree and\nconcatenates all the various snippets together to one string.\n\n### SourceNode.prototype.toStringWithSourceMap([startOfSourceMap])\n\nReturns the string representation of this tree of source nodes, plus a\nSourceMapGenerator which contains all the mappings between the generated and\noriginal sources.\n\nThe arguments are the same as those to `new SourceMapGenerator`.\n\n## Tests\n\n[![Build Status](https://travis-ci.org/mozilla/source-map.png?branch=master)](https://travis-ci.org/mozilla/source-map)\n\nInstall NodeJS version 0.8.0 or greater, then run `node test/run-tests.js`.\n\nTo add new tests, create a new file named `test/test-<your new test name>.js`\nand export your test functions with names that start with "test", for example\n\n    exports["test doing the foo bar"] = function (assert, util) {\n      ...\n    };\n\nThe new test will be located automatically when you run the suite.\n\nThe `util` argument is the test utility module located at `test/source-map/util`.\n\nThe `assert` argument is a cut down version of node\'s assert module. You have\naccess to the following assertion functions:\n\n* `doesNotThrow`\n\n* `equal`\n\n* `ok`\n\n* `strictEqual`\n\n* `throws`\n\n(The reason for the restricted set of test functions is because we need the\ntests to run inside Firefox\'s test suite as well and so the assert module is\nshimmed in that environment. See `build/assert-shim.js`.)\n\n[format]: https://docs.google.com/document/d/1U1RGAehQwRypUTovF1KRlpiOFze0b-_2gc6fAH0KY0k/edit\n[feature]: https://wiki.mozilla.org/DevTools/Features/SourceMap\n[Dryice]: https://github.com/mozilla/dryice\n',
1320 silly resolved     readmeFilename: 'README.md',
1320 silly resolved     bugs: { url: 'https://github.com/mozilla/source-map/issues' },
1320 silly resolved     _id: 'source-map@0.1.33',
1320 silly resolved     _from: 'source-map@~0.1.7' },
1320 silly resolved   { name: 'optimist',
1320 silly resolved     version: '0.3.7',
1320 silly resolved     description: 'Light-weight option parsing with an argv hash. No optstrings attached.',
1320 silly resolved     main: './index.js',
1320 silly resolved     dependencies: { wordwrap: '~0.0.2' },
1320 silly resolved     devDependencies: { hashish: '~0.0.4', tap: '~0.4.0' },
1320 silly resolved     scripts: { test: 'tap ./test/*.js' },
1320 silly resolved     repository:
1320 silly resolved      { type: 'git',
1320 silly resolved        url: 'http://github.com/substack/node-optimist.git' },
1320 silly resolved     keywords:
1320 silly resolved      [ 'argument',
1320 silly resolved        'args',
1320 silly resolved        'option',
1320 silly resolved        'parser',
1320 silly resolved        'parsing',
1320 silly resolved        'cli',
1320 silly resolved        'command' ],
1320 silly resolved     author:
1320 silly resolved      { name: 'James Halliday',
1320 silly resolved        email: 'mail@substack.net',
1320 silly resolved        url: 'http://substack.net' },
1320 silly resolved     license: 'MIT/X11',
1320 silly resolved     engine: { node: '>=0.4' },
1320 silly resolved     readme: 'optimist\n========\n\nOptimist is a node.js library for option parsing for people who hate option\nparsing. More specifically, this module is for people who like all the --bells\nand -whistlz of program usage but think optstrings are a waste of time.\n\nWith optimist, option parsing doesn\'t have to suck (as much).\n\n[![build status](https://secure.travis-ci.org/substack/node-optimist.png)](http://travis-ci.org/substack/node-optimist)\n\nexamples\n========\n\nWith Optimist, the options are just a hash! No optstrings attached.\n-------------------------------------------------------------------\n\nxup.js:\n\n````javascript\n#!/usr/bin/env node\nvar argv = require(\'optimist\').argv;\n\nif (argv.rif - 5 * argv.xup > 7.138) {\n    console.log(\'Buy more riffiwobbles\');\n}\nelse {\n    console.log(\'Sell the xupptumblers\');\n}\n````\n\n***\n\n    $ ./xup.js --rif=55 --xup=9.52\n    Buy more riffiwobbles\n    \n    $ ./xup.js --rif 12 --xup 8.1\n    Sell the xupptumblers\n\n![This one\'s optimistic.](http://substack.net/images/optimistic.png)\n\nBut wait! There\'s more! You can do short options:\n-------------------------------------------------\n \nshort.js:\n\n````javascript\n#!/usr/bin/env node\nvar argv = require(\'optimist\').argv;\nconsole.log(\'(%d,%d)\', argv.x, argv.y);\n````\n\n***\n\n    $ ./short.js -x 10 -y 21\n    (10,21)\n\nAnd booleans, both long and short (and grouped):\n----------------------------------\n\nbool.js:\n\n````javascript\n#!/usr/bin/env node\nvar util = require(\'util\');\nvar argv = require(\'optimist\').argv;\n\nif (argv.s) {\n    util.print(argv.fr ? \'Le chat dit: \' : \'The cat says: \');\n}\nconsole.log(\n    (argv.fr ? \'miaou\' : \'meow\') + (argv.p ? \'.\' : \'\')\n);\n````\n\n***\n\n    $ ./bool.js -s\n    The cat says: meow\n    \n    $ ./bool.js -sp\n    The cat says: meow.\n\n    $ ./bool.js -sp --fr\n    Le chat dit: miaou.\n\nAnd non-hypenated options too! Just use `argv._`!\n-------------------------------------------------\n \nnonopt.js:\n\n````javascript\n#!/usr/bin/env node\nvar argv = require(\'optimist\').argv;\nconsole.log(\'(%d,%d)\', argv.x, argv.y);\nconsole.log(argv._);\n````\n\n***\n\n    $ ./nonopt.js -x 6.82 -y 3.35 moo\n    (6.82,3.35)\n    [ \'moo\' ]\n    \n    $ ./nonopt.js foo -x 0.54 bar -y 1.12 baz\n    (0.54,1.12)\n    [ \'foo\', \'bar\', \'baz\' ]\n\nPlus, Optimist comes with .usage() and .demand()!\n-------------------------------------------------\n\ndivide.js:\n\n````javascript\n#!/usr/bin/env node\nvar argv = require(\'optimist\')\n    .usage(\'Usage: $0 -x [num] -y [num]\')\n    .demand([\'x\',\'y\'])\n    .argv;\n\nconsole.log(argv.x / argv.y);\n````\n\n***\n \n    $ ./divide.js -x 55 -y 11\n    5\n    \n    $ node ./divide.js -x 4.91 -z 2.51\n    Usage: node ./divide.js -x [num] -y [num]\n\n    Options:\n      -x  [required]\n      -y  [required]\n\n    Missing required arguments: y\n\nEVEN MORE HOLY COW\n------------------\n\ndefault_singles.js:\n\n````javascript\n#!/usr/bin/env node\nvar argv = require(\'optimist\')\n    .default(\'x\', 10)\n    .default(\'y\', 10)\n    .argv\n;\nconsole.log(argv.x + argv.y);\n````\n\n***\n\n    $ ./default_singles.js -x 5\n    15\n\ndefault_hash.js:\n\n````javascript\n#!/usr/bin/env node\nvar argv = require(\'optimist\')\n    .default({ x : 10, y : 10 })\n    .argv\n;\nconsole.log(argv.x + argv.y);\n````\n\n***\n\n    $ ./default_hash.js -y 7\n    17\n\nAnd if you really want to get all descriptive about it...\n---------------------------------------------------------\n\nboolean_single.js\n\n````javascript\n#!/usr/bin/env node\nvar argv = require(\'optimist\')\n    .boolean(\'v\')\n    .argv\n;\nconsole.dir(argv);\n````\n\n***\n\n    $ ./boolean_single.js -v foo bar baz\n    true\n    [ \'bar\', \'baz\', \'foo\' ]\n\nboolean_double.js\n\n````javascript\n#!/usr/bin/env node\nvar argv = require(\'optimist\')\n    .boolean([\'x\',\'y\',\'z\'])\n    .argv\n;\nconsole.dir([ argv.x, argv.y, argv.z ]);\nconsole.dir(argv._);\n````\n\n***\n\n    $ ./boolean_double.js -x -z one two three\n    [ true, false, true ]\n    [ \'one\', \'two\', \'three\' ]\n\nOptimist is here to help...\n---------------------------\n\nYou can describe parameters for help messages and set aliases. Optimist figures\nout how to format a handy help string automatically.\n\nline_count.js\n\n````javascript\n#!/usr/bin/env node\nvar argv = require(\'optimist\')\n    .usage(\'Count the lines in a file.\\nUsage: $0\')\n    .demand(\'f\')\n    .alias(\'f\', \'file\')\n    .describe(\'f\', \'Load a file\')\n    .argv\n;\n\nvar fs = require(\'fs\');\nvar s = fs.createReadStream(argv.file);\n\nvar lines = 0;\ns.on(\'data\', function (buf) {\n    lines += buf.toString().match(/\\n/g).length;\n});\n\ns.on(\'end\', function () {\n    console.log(lines);\n});\n````\n\n***\n\n    $ node line_count.js\n    Count the lines in a file.\n    Usage: node ./line_count.js\n\n    Options:\n      -f, --file  Load a file  [required]\n\n    Missing required arguments: f\n\n    $ node line_count.js --file line_count.js \n    20\n    \n    $ node line_count.js -f line_count.js \n    20\n\nmethods\n=======\n\nBy itself,\n\n````javascript\nrequire(\'optimist\').argv\n`````\n\nwill use `process.argv` array to construct the `argv` object.\n\nYou can pass in the `process.argv` yourself:\n\n````javascript\nrequire(\'optimist\')([ \'-x\', \'1\', \'-y\', \'2\' ]).argv\n````\n\nor use .parse() to do the same thing:\n\n````javascript\nrequire(\'optimist\').parse([ \'-x\', \'1\', \'-y\', \'2\' ])\n````\n\nThe rest of these methods below come in just before the terminating `.argv`.\n\n.alias(key, alias)\n------------------\n\nSet key names as equivalent such that updates to a key will propagate to aliases\nand vice-versa.\n\nOptionally `.alias()` can take an object that maps keys to aliases.\n\n.default(key, value)\n--------------------\n\nSet `argv[key]` to `value` if no option was specified on `process.argv`.\n\nOptionally `.default()` can take an object that maps keys to default values.\n\n.demand(key)\n------------\n\nIf `key` is a string, show the usage information and exit if `key` wasn\'t\nspecified in `process.argv`.\n\nIf `key` is a number, demand at least as many non-option arguments, which show\nup in `argv._`.\n\nIf `key` is an Array, demand each element.\n\n.describe(key, desc)\n--------------------\n\nDescribe a `key` for the generated usage information.\n\nOptionally `.describe()` can take an object that maps keys to descriptions.\n\n.options(key, opt)\n------------------\n\nInstead of chaining together `.alias().demand().default()`, you can specify\nkeys in `opt` for each of the chainable methods.\n\nFor example:\n\n````javascript\nvar argv = require(\'optimist\')\n    .options(\'f\', {\n        alias : \'file\',\n        default : \'/etc/passwd\',\n    })\n    .argv\n;\n````\n\nis the same as\n\n````javascript\nvar argv = require(\'optimist\')\n    .alias(\'f\', \'file\')\n    .default(\'f\', \'/etc/passwd\')\n    .argv\n;\n````\n\nOptionally `.options()` can take an object that maps keys to `opt` parameters.\n\n.usage(message)\n---------------\n\nSet a usage message to show which commands to use. Inside `message`, the string\n`$0` will get interpolated to the current script name or node command for the\npresent script similar to how `$0` works in bash or perl.\n\n.check(fn)\n----------\n\nCheck that certain conditions are met in the provided arguments.\n\nIf `fn` throws or returns `false`, show the thrown error, usage information, and\nexit.\n\n.boolean(key)\n-------------\n\nInterpret `key` as a boolean. If a non-flag option follows `key` in\n`process.argv`, that string won\'t get set as the value of `key`.\n\nIf `key` never shows up as a flag in `process.arguments`, `argv[key]` will be\n`false`.\n\nIf `key` is an Array, interpret all the elements as booleans.\n\n.string(key)\n------------\n\nTell the parser logic not to interpret `key` as a number or boolean.\nThis can be useful if you need to preserve leading zeros in an input.\n\nIf `key` is an Array, interpret all the elements as strings.\n\n.wrap(columns)\n--------------\n\nFormat usage output to wrap at `columns` many columns.\n\n.help()\n-------\n\nReturn the generated usage string.\n\n.showHelp(fn=console.error)\n---------------------------\n\nPrint the usage data using `fn` for printing.\n\n.parse(args)\n------------\n\nParse `args` instead of `process.argv`. Returns the `argv` object.\n\n.argv\n-----\n\nGet the arguments as a plain old object.\n\nArguments without a corresponding flag show up in the `argv._` array.\n\nThe script name or node command is available at `argv.$0` similarly to how `$0`\nworks in bash or perl.\n\nparsing tricks\n==============\n\nstop parsing\n------------\n\nUse `--` to stop parsing flags and stuff the remainder into `argv._`.\n\n    $ node examples/reflect.js -a 1 -b 2 -- -c 3 -d 4\n    { _: [ \'-c\', \'3\', \'-d\', \'4\' ],\n      \'$0\': \'node ./examples/reflect.js\',\n      a: 1,\n      b: 2 }\n\nnegate fields\n-------------\n\nIf you want to explicity set a field to false instead of just leaving it\nundefined or to override a default you can do `--no-key`.\n\n    $ node examples/reflect.js -a --no-b\n    { _: [],\n      \'$0\': \'node ./examples/reflect.js\',\n      a: true,\n      b: false }\n\nnumbers\n-------\n\nEvery argument that looks like a number (`!isNaN(Number(arg))`) is converted to\none. This way you can just `net.createConnection(argv.port)` and you can add\nnumbers out of `argv` with `+` without having that mean concatenation,\nwhich is super frustrating.\n\nduplicates\n----------\n\nIf you specify a flag multiple times it will get turned into an array containing\nall the values in order.\n\n    $ node examples/reflect.js -x 5 -x 8 -x 0\n    { _: [],\n      \'$0\': \'node ./examples/reflect.js\',\n        x: [ 5, 8, 0 ] }\n\ndot notation\n------------\n\nWhen you use dots (`.`s) in argument names, an implicit object path is assumed.\nThis lets you organize arguments into nested objects.\n\n     $ node examples/reflect.js --foo.bar.baz=33 --foo.quux=5\n     { _: [],\n       \'$0\': \'node ./examples/reflect.js\',\n         foo: { bar: { baz: 33 }, quux: 5 } }\n\ninstallation\n============\n\nWith [npm](http://github.com/isaacs/npm), just do:\n    npm install optimist\n \nor clone this project on github:\n\n    git clone http://github.com/substack/node-optimist.git\n\nTo run the tests with [expresso](http://github.com/visionmedia/expresso),\njust do:\n    \n    expresso\n\ninspired By\n===========\n\nThis module is loosely inspired by Perl\'s\n[Getopt::Casual](http://search.cpan.org/~photo/Getopt-Casual-0.13.1/Casual.pm).\n',
1320 silly resolved     readmeFilename: 'readme.markdown',
1320 silly resolved     bugs: { url: 'https://github.com/substack/node-optimist/issues' },
1320 silly resolved     homepage: 'https://github.com/substack/node-optimist',
1320 silly resolved     _id: 'optimist@0.3.7',
1320 silly resolved     _from: 'optimist@~0.3.5' } ]
1321 info install source-map@0.1.33 into /usr/local/lib/node_modules/jade/node_modules/transformers/node_modules/uglify-js
1322 info install optimist@0.3.7 into /usr/local/lib/node_modules/jade/node_modules/transformers/node_modules/uglify-js
1323 info installOne source-map@0.1.33
1324 info installOne optimist@0.3.7
1325 info /usr/local/lib/node_modules/jade/node_modules/transformers/node_modules/uglify-js/node_modules/source-map unbuild
1326 info /usr/local/lib/node_modules/jade/node_modules/transformers/node_modules/uglify-js/node_modules/optimist unbuild
1327 silly lockFile e00b1d77-async-0-2-6 async@~0.2.6
1328 silly lockFile e00b1d77-async-0-2-6 async@~0.2.6
1329 verbose tar unpack /Users/marc.bluemner/.npm/source-map/0.1.33/package.tgz
1330 silly lockFile 33acbac1-glify-js-node-modules-source-map tar:///usr/local/lib/node_modules/jade/node_modules/transformers/node_modules/uglify-js/node_modules/source-map
1331 verbose lock tar:///usr/local/lib/node_modules/jade/node_modules/transformers/node_modules/uglify-js/node_modules/source-map /Users/marc.bluemner/.npm/33acbac1-glify-js-node-modules-source-map.lock
1332 silly lockFile a877218c-pm-source-map-0-1-33-package-tgz tar:///Users/marc.bluemner/.npm/source-map/0.1.33/package.tgz
1333 verbose lock tar:///Users/marc.bluemner/.npm/source-map/0.1.33/package.tgz /Users/marc.bluemner/.npm/a877218c-pm-source-map-0-1-33-package-tgz.lock
1334 verbose tar unpack /Users/marc.bluemner/.npm/optimist/0.3.7/package.tgz
1335 silly lockFile 07dba1bf--uglify-js-node-modules-optimist tar:///usr/local/lib/node_modules/jade/node_modules/transformers/node_modules/uglify-js/node_modules/optimist
1336 verbose lock tar:///usr/local/lib/node_modules/jade/node_modules/transformers/node_modules/uglify-js/node_modules/optimist /Users/marc.bluemner/.npm/07dba1bf--uglify-js-node-modules-optimist.lock
1337 silly lockFile 04634416-r-npm-optimist-0-3-7-package-tgz tar:///Users/marc.bluemner/.npm/optimist/0.3.7/package.tgz
1338 verbose lock tar:///Users/marc.bluemner/.npm/optimist/0.3.7/package.tgz /Users/marc.bluemner/.npm/04634416-r-npm-optimist-0-3-7-package-tgz.lock
1339 silly gunzTarPerm modes [ '755', '644' ]
1340 silly gunzTarPerm modes [ '755', '644' ]
1341 silly gunzTarPerm extractEntry test/compress/issue-267.js
1342 silly gunzTarPerm extractEntry test/compress/issue-269.js
1343 silly lockFile 9982c746-s-css-node-modules-css-stringify tar:///usr/local/lib/node_modules/jade/node_modules/transformers/node_modules/css/node_modules/css-stringify
1344 silly lockFile 9982c746-s-css-node-modules-css-stringify tar:///usr/local/lib/node_modules/jade/node_modules/transformers/node_modules/css/node_modules/css-stringify
1345 silly gunzTarPerm extractEntry package.json
1346 silly lockFile 4b7f715c-dules-css-node-modules-css-parse tar:///usr/local/lib/node_modules/jade/node_modules/transformers/node_modules/css/node_modules/css-parse
1347 silly lockFile 4b7f715c-dules-css-node-modules-css-parse tar:///usr/local/lib/node_modules/jade/node_modules/transformers/node_modules/css/node_modules/css-parse
1348 silly lockFile b4fd1cc9--css-stringify-1-0-5-package-tgz tar:///Users/marc.bluemner/.npm/css-stringify/1.0.5/package.tgz
1349 silly lockFile b4fd1cc9--css-stringify-1-0-5-package-tgz tar:///Users/marc.bluemner/.npm/css-stringify/1.0.5/package.tgz
1350 silly resolved [ { name: 'source-map',
1350 silly resolved     description: 'Generates and consumes source maps',
1350 silly resolved     version: '0.1.33',
1350 silly resolved     homepage: 'https://github.com/mozilla/source-map',
1350 silly resolved     author: { name: 'Nick Fitzgerald', email: 'nfitzgerald@mozilla.com' },
1350 silly resolved     contributors:
1350 silly resolved      [ [Object],
1350 silly resolved        [Object],
1350 silly resolved        [Object],
1350 silly resolved        [Object],
1350 silly resolved        [Object],
1350 silly resolved        [Object],
1350 silly resolved        [Object],
1350 silly resolved        [Object],
1350 silly resolved        [Object],
1350 silly resolved        [Object],
1350 silly resolved        [Object],
1350 silly resolved        [Object],
1350 silly resolved        [Object],
1350 silly resolved        [Object],
1350 silly resolved        [Object],
1350 silly resolved        [Object],
1350 silly resolved        [Object],
1350 silly resolved        [Object],
1350 silly resolved        [Object],
1350 silly resolved        [Object] ],
1350 silly resolved     repository: { type: 'git', url: 'http://github.com/mozilla/source-map.git' },
1350 silly resolved     directories: { lib: './lib' },
1350 silly resolved     main: './lib/source-map.js',
1350 silly resolved     engines: { node: '>=0.8.0' },
1350 silly resolved     licenses: [ [Object] ],
1350 silly resolved     dependencies: { amdefine: '>=0.0.4' },
1350 silly resolved     devDependencies: { dryice: '>=0.4.8' },
1350 silly resolved     scripts:
1350 silly resolved      { test: 'node test/run-tests.js',
1350 silly resolved        build: 'node Makefile.dryice.js' },
1350 silly resolved     readme: '# Source Map\n\nThis is a library to generate and consume the source map format\n[described here][format].\n\nThis library is written in the Asynchronous Module Definition format, and works\nin the following environments:\n\n* Modern Browsers supporting ECMAScript 5 (either after the build, or with an\n  AMD loader such as RequireJS)\n\n* Inside Firefox (as a JSM file, after the build)\n\n* With NodeJS versions 0.8.X and higher\n\n## Node\n\n    $ npm install source-map\n\n## Building from Source (for everywhere else)\n\nInstall Node and then run\n\n    $ git clone https://fitzgen@github.com/mozilla/source-map.git\n    $ cd source-map\n    $ npm link .\n\nNext, run\n\n    $ node Makefile.dryice.js\n\nThis should spew a bunch of stuff to stdout, and create the following files:\n\n* `dist/source-map.js` - The unminified browser version.\n\n* `dist/source-map.min.js` - The minified browser version.\n\n* `dist/SourceMap.jsm` - The JavaScript Module for inclusion in Firefox source.\n\n## Examples\n\n### Consuming a source map\n\n    var rawSourceMap = {\n      version: 3,\n      file: \'min.js\',\n      names: [\'bar\', \'baz\', \'n\'],\n      sources: [\'one.js\', \'two.js\'],\n      sourceRoot: \'http://example.com/www/js/\',\n      mappings: \'CAAC,IAAI,IAAM,SAAUA,GAClB,OAAOC,IAAID;CCDb,IAAI,IAAM,SAAUE,GAClB,OAAOA\'\n    };\n\n    var smc = new SourceMapConsumer(rawSourceMap);\n\n    console.log(smc.sources);\n    // [ \'http://example.com/www/js/one.js\',\n    //   \'http://example.com/www/js/two.js\' ]\n\n    console.log(smc.originalPositionFor({\n      line: 2,\n      column: 28\n    }));\n    // { source: \'http://example.com/www/js/two.js\',\n    //   line: 2,\n    //   column: 10,\n    //   name: \'n\' }\n\n    console.log(smc.generatedPositionFor({\n      source: \'http://example.com/www/js/two.js\',\n      line: 2,\n      column: 10\n    }));\n    // { line: 2, column: 28 }\n\n    smc.eachMapping(function (m) {\n      // ...\n    });\n\n### Generating a source map\n\nIn depth guide:\n[**Compiling to JavaScript, and Debugging with Source Maps**](https://hacks.mozilla.org/2013/05/compiling-to-javascript-and-debugging-with-source-maps/)\n\n#### With SourceNode (high level API)\n\n    function compile(ast) {\n      switch (ast.type) {\n      case \'BinaryExpression\':\n        return new SourceNode(\n          ast.location.line,\n          ast.location.column,\n          ast.location.source,\n          [compile(ast.left), " + ", compile(ast.right)]\n        );\n      case \'Literal\':\n        return new SourceNode(\n          ast.location.line,\n          ast.location.column,\n          ast.location.source,\n          String(ast.value)\n        );\n      // ...\n      default:\n        throw new Error("Bad AST");\n      }\n    }\n\n    var ast = parse("40 + 2", "add.js");\n    console.log(compile(ast).toStringWithSourceMap({\n      file: \'add.js\'\n    }));\n    // { code: \'40 + 2\',\n    //   map: [object SourceMapGenerator] }\n\n#### With SourceMapGenerator (low level API)\n\n    var map = new SourceMapGenerator({\n      file: "source-mapped.js"\n    });\n\n    map.addMapping({\n      generated: {\n        line: 10,\n        column: 35\n      },\n      source: "foo.js",\n      original: {\n        line: 33,\n        column: 2\n      },\n      name: "christopher"\n    });\n\n    console.log(map.toString());\n    // \'{"version":3,"file":"source-mapped.js","sources":["foo.js"],"names":["christopher"],"mappings":";;;;;;;;;mCAgCEA"}\'\n\n## API\n\nGet a reference to the module:\n\n    // NodeJS\n    var sourceMap = require(\'source-map\');\n\n    // Browser builds\n    var sourceMap = window.sourceMap;\n\n    // Inside Firefox\n    let sourceMap = {};\n    Components.utils.import(\'resource:///modules/devtools/SourceMap.jsm\', sourceMap);\n\n### SourceMapConsumer\n\nA SourceMapConsumer instance represents a parsed source map which we can query\nfor information about the original file positions by giving it a file position\nin the generated source.\n\n#### new SourceMapConsumer(rawSourceMap)\n\nThe only parameter is the raw source map (either as a string which can be\n`JSON.parse`\'d, or an object). According to the spec, source maps have the\nfollowing attributes:\n\n* `version`: Which version of the source map spec this map is following.\n\n* `sources`: An array of URLs to the original source files.\n\n* `names`: An array of identifiers which can be referrenced by individual\n  mappings.\n\n* `sourceRoot`: Optional. The URL root from which all sources are relative.\n\n* `sourcesContent`: Optional. An array of contents of the original source files.\n\n* `mappings`: A string of base64 VLQs which contain the actual mappings.\n\n* `file`: Optional. The generated filename this source map is associated with.\n\n#### SourceMapConsumer.prototype.originalPositionFor(generatedPosition)\n\nReturns the original source, line, and column information for the generated\nsource\'s line and column positions provided. The only argument is an object with\nthe following properties:\n\n* `line`: The line number in the generated source.\n\n* `column`: The column number in the generated source.\n\nand an object is returned with the following properties:\n\n* `source`: The original source file, or null if this information is not\n  available.\n\n* `line`: The line number in the original source, or null if this information is\n  not available.\n\n* `column`: The column number in the original source, or null or null if this\n  information is not available.\n\n* `name`: The original identifier, or null if this information is not available.\n\n#### SourceMapConsumer.prototype.generatedPositionFor(originalPosition)\n\nReturns the generated line and column information for the original source,\nline, and column positions provided. The only argument is an object with\nthe following properties:\n\n* `source`: The filename of the original source.\n\n* `line`: The line number in the original source.\n\n* `column`: The column number in the original source.\n\nand an object is returned with the following properties:\n\n* `line`: The line number in the generated source, or null.\n\n* `column`: The column number in the generated source, or null.\n\n#### SourceMapConsumer.prototype.sourceContentFor(source)\n\nReturns the original source content for the source provided. The only\nargument is the URL of the original source file.\n\n#### SourceMapConsumer.prototype.eachMapping(callback, context, order)\n\nIterate over each mapping between an original source/line/column and a\ngenerated line/column in this source map.\n\n* `callback`: The function that is called with each mapping. Mappings have the\n  form `{ source, generatedLine, generatedColumn, originalLine, originalColumn,\n  name }`\n\n* `context`: Optional. If specified, this object will be the value of `this`\n  every time that `callback` is called.\n\n* `order`: Either `SourceMapConsumer.GENERATED_ORDER` or\n  `SourceMapConsumer.ORIGINAL_ORDER`. Specifies whether you want to iterate over\n  the mappings sorted by the generated file\'s line/column order or the\n  original\'s source/line/column order, respectively. Defaults to\n  `SourceMapConsumer.GENERATED_ORDER`.\n\n### SourceMapGenerator\n\nAn instance of the SourceMapGenerator represents a source map which is being\nbuilt incrementally.\n\n#### new SourceMapGenerator([startOfSourceMap])\n\nYou may pass an object with the following properties:\n\n* `file`: The filename of the generated source that this source map is\n  associated with.\n\n* `sourceRoot`: A root for all relative URLs in this source map.\n\n#### SourceMapGenerator.fromSourceMap(sourceMapConsumer)\n\nCreates a new SourceMapGenerator based on a SourceMapConsumer\n\n* `sourceMapConsumer` The SourceMap.\n\n#### SourceMapGenerator.prototype.addMapping(mapping)\n\nAdd a single mapping from original source line and column to the generated\nsource\'s line and column for this source map being created. The mapping object\nshould have the following properties:\n\n* `generated`: An object with the generated line and column positions.\n\n* `original`: An object with the original line and column positions.\n\n* `source`: The original source file (relative to the sourceRoot).\n\n* `name`: An optional original token name for this mapping.\n\n#### SourceMapGenerator.prototype.setSourceContent(sourceFile, sourceContent)\n\nSet the source content for an original source file.\n\n* `sourceFile` the URL of the original source file.\n\n* `sourceContent` the content of the source file.\n\n#### SourceMapGenerator.prototype.applySourceMap(sourceMapConsumer[, sourceFile[, sourceMapPath]])\n\nApplies a SourceMap for a source file to the SourceMap.\nEach mapping to the supplied source file is rewritten using the\nsupplied SourceMap. Note: The resolution for the resulting mappings\nis the minimium of this map and the supplied map.\n\n* `sourceMapConsumer`: The SourceMap to be applied.\n\n* `sourceFile`: Optional. The filename of the source file.\n  If omitted, sourceMapConsumer.file will be used, if it exists.\n  Otherwise an error will be thrown.\n\n* `sourceMapPath`: Optional. The dirname of the path to the SourceMap\n  to be applied. If relative, it is relative to the SourceMap.\n\n  This parameter is needed when the two SourceMaps aren\'t in the same\n  directory, and the SourceMap to be applied contains relative source\n  paths. If so, those relative source paths need to be rewritten\n  relative to the SourceMap.\n\n  If omitted, it is assumed that both SourceMaps are in the same directory,\n  thus not needing any rewriting. (Supplying `\'.\'` has the same effect.)\n\n#### SourceMapGenerator.prototype.toString()\n\nRenders the source map being generated to a string.\n\n### SourceNode\n\nSourceNodes provide a way to abstract over interpolating and/or concatenating\nsnippets of generated JavaScript source code, while maintaining the line and\ncolumn information associated between those snippets and the original source\ncode. This is useful as the final intermediate representation a compiler might\nuse before outputting the generated JS and source map.\n\n#### new SourceNode([line, column, source[, chunk[, name]]])\n\n* `line`: The original line number associated with this source node, or null if\n  it isn\'t associated with an original line.\n\n* `column`: The original column number associated with this source node, or null\n  if it isn\'t associated with an original column.\n\n* `source`: The original source\'s filename; null if no filename is provided.\n\n* `chunk`: Optional. Is immediately passed to `SourceNode.prototype.add`, see\n  below.\n\n* `name`: Optional. The original identifier.\n\n#### SourceNode.fromStringWithSourceMap(code, sourceMapConsumer)\n\nCreates a SourceNode from generated code and a SourceMapConsumer.\n\n* `code`: The generated code\n\n* `sourceMapConsumer` The SourceMap for the generated code\n\n#### SourceNode.prototype.add(chunk)\n\nAdd a chunk of generated JS to this source node.\n\n* `chunk`: A string snippet of generated JS code, another instance of\n   `SourceNode`, or an array where each member is one of those things.\n\n#### SourceNode.prototype.prepend(chunk)\n\nPrepend a chunk of generated JS to this source node.\n\n* `chunk`: A string snippet of generated JS code, another instance of\n   `SourceNode`, or an array where each member is one of those things.\n\n#### SourceNode.prototype.setSourceContent(sourceFile, sourceContent)\n\nSet the source content for a source file. This will be added to the\n`SourceMap` in the `sourcesContent` field.\n\n* `sourceFile`: The filename of the source file\n\n* `sourceContent`: The content of the source file\n\n#### SourceNode.prototype.walk(fn)\n\nWalk over the tree of JS snippets in this node and its children. The walking\nfunction is called once for each snippet of JS and is passed that snippet and\nthe its original associated source\'s line/column location.\n\n* `fn`: The traversal function.\n\n#### SourceNode.prototype.walkSourceContents(fn)\n\nWalk over the tree of SourceNodes. The walking function is called for each\nsource file content and is passed the filename and source content.\n\n* `fn`: The traversal function.\n\n#### SourceNode.prototype.join(sep)\n\nLike `Array.prototype.join` except for SourceNodes. Inserts the separator\nbetween each of this source node\'s children.\n\n* `sep`: The separator.\n\n#### SourceNode.prototype.replaceRight(pattern, replacement)\n\nCall `String.prototype.replace` on the very right-most source snippet. Useful\nfor trimming whitespace from the end of a source node, etc.\n\n* `pattern`: The pattern to replace.\n\n* `replacement`: The thing to replace the pattern with.\n\n#### SourceNode.prototype.toString()\n\nReturn the string representation of this source node. Walks over the tree and\nconcatenates all the various snippets together to one string.\n\n### SourceNode.prototype.toStringWithSourceMap([startOfSourceMap])\n\nReturns the string representation of this tree of source nodes, plus a\nSourceMapGenerator which contains all the mappings between the generated and\noriginal sources.\n\nThe arguments are the same as those to `new SourceMapGenerator`.\n\n## Tests\n\n[![Build Status](https://travis-ci.org/mozilla/source-map.png?branch=master)](https://travis-ci.org/mozilla/source-map)\n\nInstall NodeJS version 0.8.0 or greater, then run `node test/run-tests.js`.\n\nTo add new tests, create a new file named `test/test-<your new test name>.js`\nand export your test functions with names that start with "test", for example\n\n    exports["test doing the foo bar"] = function (assert, util) {\n      ...\n    };\n\nThe new test will be located automatically when you run the suite.\n\nThe `util` argument is the test utility module located at `test/source-map/util`.\n\nThe `assert` argument is a cut down version of node\'s assert module. You have\naccess to the following assertion functions:\n\n* `doesNotThrow`\n\n* `equal`\n\n* `ok`\n\n* `strictEqual`\n\n* `throws`\n\n(The reason for the restricted set of test functions is because we need the\ntests to run inside Firefox\'s test suite as well and so the assert module is\nshimmed in that environment. See `build/assert-shim.js`.)\n\n[format]: https://docs.google.com/document/d/1U1RGAehQwRypUTovF1KRlpiOFze0b-_2gc6fAH0KY0k/edit\n[feature]: https://wiki.mozilla.org/DevTools/Features/SourceMap\n[Dryice]: https://github.com/mozilla/dryice\n',
1350 silly resolved     readmeFilename: 'README.md',
1350 silly resolved     bugs: { url: 'https://github.com/mozilla/source-map/issues' },
1350 silly resolved     _id: 'source-map@0.1.33',
1350 silly resolved     _from: 'source-map@~0.1.7' },
1350 silly resolved   { name: 'uglify-to-browserify',
1350 silly resolved     version: '1.0.2',
1350 silly resolved     description: 'A transform to make UglifyJS work in browserify.',
1350 silly resolved     keywords: [],
1350 silly resolved     dependencies: {},
1350 silly resolved     devDependencies: { 'uglify-js': '~2.4.0', 'source-map': '~0.1.27' },
1350 silly resolved     scripts: { test: 'node test/index.js' },
1350 silly resolved     repository:
1350 silly resolved      { type: 'git',
1350 silly resolved        url: 'https://github.com/ForbesLindesay/uglify-to-browserify.git' },
1350 silly resolved     author: { name: 'ForbesLindesay' },
1350 silly resolved     license: 'MIT',
1350 silly resolved     readme: '# uglify-to-browserify\r\n\r\nA transform to make UglifyJS work in browserify.\r\n\r\n[![Build Status](https://travis-ci.org/ForbesLindesay/uglify-to-browserify.png?branch=master)](https://travis-ci.org/ForbesLindesay/uglify-to-browserify)\r\n[![Dependency Status](https://gemnasium.com/ForbesLindesay/uglify-to-browserify.png)](https://gemnasium.com/ForbesLindesay/uglify-to-browserify)\r\n[![NPM version](https://badge.fury.io/js/uglify-to-browserify.png)](http://badge.fury.io/js/uglify-to-browserify)\r\n\r\n## Installation\r\n\r\n    npm install uglify-to-browserify\r\n\r\n## License\r\n\r\n  MIT',
1350 silly resolved     readmeFilename: 'README.md',
1350 silly resolved     bugs: { url: 'https://github.com/ForbesLindesay/uglify-to-browserify/issues' },
1350 silly resolved     homepage: 'https://github.com/ForbesLindesay/uglify-to-browserify',
1350 silly resolved     _id: 'uglify-to-browserify@1.0.2',
1350 silly resolved     _from: 'uglify-to-browserify@~1.0.0' },
1350 silly resolved   { name: 'optimist',
1350 silly resolved     version: '0.3.7',
1350 silly resolved     description: 'Light-weight option parsing with an argv hash. No optstrings attached.',
1350 silly resolved     main: './index.js',
1350 silly resolved     dependencies: { wordwrap: '~0.0.2' },
1350 silly resolved     devDependencies: { hashish: '~0.0.4', tap: '~0.4.0' },
1350 silly resolved     scripts: { test: 'tap ./test/*.js' },
1350 silly resolved     repository:
1350 silly resolved      { type: 'git',
1350 silly resolved        url: 'http://github.com/substack/node-optimist.git' },
1350 silly resolved     keywords:
1350 silly resolved      [ 'argument',
1350 silly resolved        'args',
1350 silly resolved        'option',
1350 silly resolved        'parser',
1350 silly resolved        'parsing',
1350 silly resolved        'cli',
1350 silly resolved        'command' ],
1350 silly resolved     author:
1350 silly resolved      { name: 'James Halliday',
1350 silly resolved        email: 'mail@substack.net',
1350 silly resolved        url: 'http://substack.net' },
1350 silly resolved     license: 'MIT/X11',
1350 silly resolved     engine: { node: '>=0.4' },
1350 silly resolved     readme: 'optimist\n========\n\nOptimist is a node.js library for option parsing for people who hate option\nparsing. More specifically, this module is for people who like all the --bells\nand -whistlz of program usage but think optstrings are a waste of time.\n\nWith optimist, option parsing doesn\'t have to suck (as much).\n\n[![build status](https://secure.travis-ci.org/substack/node-optimist.png)](http://travis-ci.org/substack/node-optimist)\n\nexamples\n========\n\nWith Optimist, the options are just a hash! No optstrings attached.\n-------------------------------------------------------------------\n\nxup.js:\n\n````javascript\n#!/usr/bin/env node\nvar argv = require(\'optimist\').argv;\n\nif (argv.rif - 5 * argv.xup > 7.138) {\n    console.log(\'Buy more riffiwobbles\');\n}\nelse {\n    console.log(\'Sell the xupptumblers\');\n}\n````\n\n***\n\n    $ ./xup.js --rif=55 --xup=9.52\n    Buy more riffiwobbles\n    \n    $ ./xup.js --rif 12 --xup 8.1\n    Sell the xupptumblers\n\n![This one\'s optimistic.](http://substack.net/images/optimistic.png)\n\nBut wait! There\'s more! You can do short options:\n-------------------------------------------------\n \nshort.js:\n\n````javascript\n#!/usr/bin/env node\nvar argv = require(\'optimist\').argv;\nconsole.log(\'(%d,%d)\', argv.x, argv.y);\n````\n\n***\n\n    $ ./short.js -x 10 -y 21\n    (10,21)\n\nAnd booleans, both long and short (and grouped):\n----------------------------------\n\nbool.js:\n\n````javascript\n#!/usr/bin/env node\nvar util = require(\'util\');\nvar argv = require(\'optimist\').argv;\n\nif (argv.s) {\n    util.print(argv.fr ? \'Le chat dit: \' : \'The cat says: \');\n}\nconsole.log(\n    (argv.fr ? \'miaou\' : \'meow\') + (argv.p ? \'.\' : \'\')\n);\n````\n\n***\n\n    $ ./bool.js -s\n    The cat says: meow\n    \n    $ ./bool.js -sp\n    The cat says: meow.\n\n    $ ./bool.js -sp --fr\n    Le chat dit: miaou.\n\nAnd non-hypenated options too! Just use `argv._`!\n-------------------------------------------------\n \nnonopt.js:\n\n````javascript\n#!/usr/bin/env node\nvar argv = require(\'optimist\').argv;\nconsole.log(\'(%d,%d)\', argv.x, argv.y);\nconsole.log(argv._);\n````\n\n***\n\n    $ ./nonopt.js -x 6.82 -y 3.35 moo\n    (6.82,3.35)\n    [ \'moo\' ]\n    \n    $ ./nonopt.js foo -x 0.54 bar -y 1.12 baz\n    (0.54,1.12)\n    [ \'foo\', \'bar\', \'baz\' ]\n\nPlus, Optimist comes with .usage() and .demand()!\n-------------------------------------------------\n\ndivide.js:\n\n````javascript\n#!/usr/bin/env node\nvar argv = require(\'optimist\')\n    .usage(\'Usage: $0 -x [num] -y [num]\')\n    .demand([\'x\',\'y\'])\n    .argv;\n\nconsole.log(argv.x / argv.y);\n````\n\n***\n \n    $ ./divide.js -x 55 -y 11\n    5\n    \n    $ node ./divide.js -x 4.91 -z 2.51\n    Usage: node ./divide.js -x [num] -y [num]\n\n    Options:\n      -x  [required]\n      -y  [required]\n\n    Missing required arguments: y\n\nEVEN MORE HOLY COW\n------------------\n\ndefault_singles.js:\n\n````javascript\n#!/usr/bin/env node\nvar argv = require(\'optimist\')\n    .default(\'x\', 10)\n    .default(\'y\', 10)\n    .argv\n;\nconsole.log(argv.x + argv.y);\n````\n\n***\n\n    $ ./default_singles.js -x 5\n    15\n\ndefault_hash.js:\n\n````javascript\n#!/usr/bin/env node\nvar argv = require(\'optimist\')\n    .default({ x : 10, y : 10 })\n    .argv\n;\nconsole.log(argv.x + argv.y);\n````\n\n***\n\n    $ ./default_hash.js -y 7\n    17\n\nAnd if you really want to get all descriptive about it...\n---------------------------------------------------------\n\nboolean_single.js\n\n````javascript\n#!/usr/bin/env node\nvar argv = require(\'optimist\')\n    .boolean(\'v\')\n    .argv\n;\nconsole.dir(argv);\n````\n\n***\n\n    $ ./boolean_single.js -v foo bar baz\n    true\n    [ \'bar\', \'baz\', \'foo\' ]\n\nboolean_double.js\n\n````javascript\n#!/usr/bin/env node\nvar argv = require(\'optimist\')\n    .boolean([\'x\',\'y\',\'z\'])\n    .argv\n;\nconsole.dir([ argv.x, argv.y, argv.z ]);\nconsole.dir(argv._);\n````\n\n***\n\n    $ ./boolean_double.js -x -z one two three\n    [ true, false, true ]\n    [ \'one\', \'two\', \'three\' ]\n\nOptimist is here to help...\n---------------------------\n\nYou can describe parameters for help messages and set aliases. Optimist figures\nout how to format a handy help string automatically.\n\nline_count.js\n\n````javascript\n#!/usr/bin/env node\nvar argv = require(\'optimist\')\n    .usage(\'Count the lines in a file.\\nUsage: $0\')\n    .demand(\'f\')\n    .alias(\'f\', \'file\')\n    .describe(\'f\', \'Load a file\')\n    .argv\n;\n\nvar fs = require(\'fs\');\nvar s = fs.createReadStream(argv.file);\n\nvar lines = 0;\ns.on(\'data\', function (buf) {\n    lines += buf.toString().match(/\\n/g).length;\n});\n\ns.on(\'end\', function () {\n    console.log(lines);\n});\n````\n\n***\n\n    $ node line_count.js\n    Count the lines in a file.\n    Usage: node ./line_count.js\n\n    Options:\n      -f, --file  Load a file  [required]\n\n    Missing required arguments: f\n\n    $ node line_count.js --file line_count.js \n    20\n    \n    $ node line_count.js -f line_count.js \n    20\n\nmethods\n=======\n\nBy itself,\n\n````javascript\nrequire(\'optimist\').argv\n`````\n\nwill use `process.argv` array to construct the `argv` object.\n\nYou can pass in the `process.argv` yourself:\n\n````javascript\nrequire(\'optimist\')([ \'-x\', \'1\', \'-y\', \'2\' ]).argv\n````\n\nor use .parse() to do the same thing:\n\n````javascript\nrequire(\'optimist\').parse([ \'-x\', \'1\', \'-y\', \'2\' ])\n````\n\nThe rest of these methods below come in just before the terminating `.argv`.\n\n.alias(key, alias)\n------------------\n\nSet key names as equivalent such that updates to a key will propagate to aliases\nand vice-versa.\n\nOptionally `.alias()` can take an object that maps keys to aliases.\n\n.default(key, value)\n--------------------\n\nSet `argv[key]` to `value` if no option was specified on `process.argv`.\n\nOptionally `.default()` can take an object that maps keys to default values.\n\n.demand(key)\n------------\n\nIf `key` is a string, show the usage information and exit if `key` wasn\'t\nspecified in `process.argv`.\n\nIf `key` is a number, demand at least as many non-option arguments, which show\nup in `argv._`.\n\nIf `key` is an Array, demand each element.\n\n.describe(key, desc)\n--------------------\n\nDescribe a `key` for the generated usage information.\n\nOptionally `.describe()` can take an object that maps keys to descriptions.\n\n.options(key, opt)\n------------------\n\nInstead of chaining together `.alias().demand().default()`, you can specify\nkeys in `opt` for each of the chainable methods.\n\nFor example:\n\n````javascript\nvar argv = require(\'optimist\')\n    .options(\'f\', {\n        alias : \'file\',\n        default : \'/etc/passwd\',\n    })\n    .argv\n;\n````\n\nis the same as\n\n````javascript\nvar argv = require(\'optimist\')\n    .alias(\'f\', \'file\')\n    .default(\'f\', \'/etc/passwd\')\n    .argv\n;\n````\n\nOptionally `.options()` can take an object that maps keys to `opt` parameters.\n\n.usage(message)\n---------------\n\nSet a usage message to show which commands to use. Inside `message`, the string\n`$0` will get interpolated to the current script name or node command for the\npresent script similar to how `$0` works in bash or perl.\n\n.check(fn)\n----------\n\nCheck that certain conditions are met in the provided arguments.\n\nIf `fn` throws or returns `false`, show the thrown error, usage information, and\nexit.\n\n.boolean(key)\n-------------\n\nInterpret `key` as a boolean. If a non-flag option follows `key` in\n`process.argv`, that string won\'t get set as the value of `key`.\n\nIf `key` never shows up as a flag in `process.arguments`, `argv[key]` will be\n`false`.\n\nIf `key` is an Array, interpret all the elements as booleans.\n\n.string(key)\n------------\n\nTell the parser logic not to interpret `key` as a number or boolean.\nThis can be useful if you need to preserve leading zeros in an input.\n\nIf `key` is an Array, interpret all the elements as strings.\n\n.wrap(columns)\n--------------\n\nFormat usage output to wrap at `columns` many columns.\n\n.help()\n-------\n\nReturn the generated usage string.\n\n.showHelp(fn=console.error)\n---------------------------\n\nPrint the usage data using `fn` for printing.\n\n.parse(args)\n------------\n\nParse `args` instead of `process.argv`. Returns the `argv` object.\n\n.argv\n-----\n\nGet the arguments as a plain old object.\n\nArguments without a corresponding flag show up in the `argv._` array.\n\nThe script name or node command is available at `argv.$0` similarly to how `$0`\nworks in bash or perl.\n\nparsing tricks\n==============\n\nstop parsing\n------------\n\nUse `--` to stop parsing flags and stuff the remainder into `argv._`.\n\n    $ node examples/reflect.js -a 1 -b 2 -- -c 3 -d 4\n    { _: [ \'-c\', \'3\', \'-d\', \'4\' ],\n      \'$0\': \'node ./examples/reflect.js\',\n      a: 1,\n      b: 2 }\n\nnegate fields\n-------------\n\nIf you want to explicity set a field to false instead of just leaving it\nundefined or to override a default you can do `--no-key`.\n\n    $ node examples/reflect.js -a --no-b\n    { _: [],\n      \'$0\': \'node ./examples/reflect.js\',\n      a: true,\n      b: false }\n\nnumbers\n-------\n\nEvery argument that looks like a number (`!isNaN(Number(arg))`) is converted to\none. This way you can just `net.createConnection(argv.port)` and you can add\nnumbers out of `argv` with `+` without having that mean concatenation,\nwhich is super frustrating.\n\nduplicates\n----------\n\nIf you specify a flag multiple times it will get turned into an array containing\nall the values in order.\n\n    $ node examples/reflect.js -x 5 -x 8 -x 0\n    { _: [],\n      \'$0\': \'node ./examples/reflect.js\',\n        x: [ 5, 8, 0 ] }\n\ndot notation\n------------\n\nWhen you use dots (`.`s) in argument names, an implicit object path is assumed.\nThis lets you organize arguments into nested objects.\n\n     $ node examples/reflect.js --foo.bar.baz=33 --foo.quux=5\n     { _: [],\n       \'$0\': \'node ./examples/reflect.js\',\n         foo: { bar: { baz: 33 }, quux: 5 } }\n\ninstallation\n============\n\nWith [npm](http://github.com/isaacs/npm), just do:\n    npm install optimist\n \nor clone this project on github:\n\n    git clone http://github.com/substack/node-optimist.git\n\nTo run the tests with [expresso](http://github.com/visionmedia/expresso),\njust do:\n    \n    expresso\n\ninspired By\n===========\n\nThis module is loosely inspired by Perl\'s\n[Getopt::Casual](http://search.cpan.org/~photo/Getopt-Casual-0.13.1/Casual.pm).\n',
1350 silly resolved     readmeFilename: 'readme.markdown',
1350 silly resolved     bugs: { url: 'https://github.com/substack/node-optimist/issues' },
1350 silly resolved     homepage: 'https://github.com/substack/node-optimist',
1350 silly resolved     _id: 'optimist@0.3.7',
1350 silly resolved     _from: 'optimist@~0.3.5' },
1350 silly resolved   { name: 'async',
1350 silly resolved     description: 'Higher-order functions and common patterns for asynchronous code',
1350 silly resolved     main: './lib/async',
1350 silly resolved     author: { name: 'Caolan McMahon' },
1350 silly resolved     version: '0.2.10',
1350 silly resolved     repository: { type: 'git', url: 'https://github.com/caolan/async.git' },
1350 silly resolved     bugs: { url: 'https://github.com/caolan/async/issues' },
1350 silly resolved     licenses: [ [Object] ],
1350 silly resolved     devDependencies: { nodeunit: '>0.0.0', 'uglify-js': '1.2.x', nodelint: '>0.0.0' },
1350 silly resolved     jam: { main: 'lib/async.js', include: [Object] },
1350 silly resolved     scripts: { test: 'nodeunit test/test-async.js' },
1350 silly resolved     readme: '# Async.js\n\nAsync is a utility module which provides straight-forward, powerful functions\nfor working with asynchronous JavaScript. Although originally designed for\nuse with [node.js](http://nodejs.org), it can also be used directly in the\nbrowser. Also supports [component](https://github.com/component/component).\n\nAsync provides around 20 functions that include the usual \'functional\'\nsuspects (map, reduce, filter, each…) as well as some common patterns\nfor asynchronous control flow (parallel, series, waterfall…). All these\nfunctions assume you follow the node.js convention of providing a single\ncallback as the last argument of your async function.\n\n\n## Quick Examples\n\n```javascript\nasync.map([\'file1\',\'file2\',\'file3\'], fs.stat, function(err, results){\n    // results is now an array of stats for each file\n});\n\nasync.filter([\'file1\',\'file2\',\'file3\'], fs.exists, function(results){\n    // results now equals an array of the existing files\n});\n\nasync.parallel([\n    function(){ ... },\n    function(){ ... }\n], callback);\n\nasync.series([\n    function(){ ... },\n    function(){ ... }\n]);\n```\n\nThere are many more functions available so take a look at the docs below for a\nfull list. This module aims to be comprehensive, so if you feel anything is\nmissing please create a GitHub issue for it.\n\n## Common Pitfalls\n\n### Binding a context to an iterator\n\nThis section is really about bind, not about async. If you are wondering how to\nmake async execute your iterators in a given context, or are confused as to why\na method of another library isn\'t working as an iterator, study this example:\n\n```js\n// Here is a simple object with an (unnecessarily roundabout) squaring method\nvar AsyncSquaringLibrary = {\n  squareExponent: 2,\n  square: function(number, callback){ \n    var result = Math.pow(number, this.squareExponent);\n    setTimeout(function(){\n      callback(null, result);\n    }, 200);\n  }\n};\n\nasync.map([1, 2, 3], AsyncSquaringLibrary.square, function(err, result){\n  // result is [NaN, NaN, NaN]\n  // This fails because the `this.squareExponent` expression in the square\n  // function is not evaluated in the context of AsyncSquaringLibrary, and is\n  // therefore undefined.\n});\n\nasync.map([1, 2, 3], AsyncSquaringLibrary.square.bind(AsyncSquaringLibrary), function(err, result){\n  // result is [1, 4, 9]\n  // With the help of bind we can attach a context to the iterator before\n  // passing it to async. Now the square function will be executed in its \n  // \'home\' AsyncSquaringLibrary context and the value of `this.squareExponent`\n  // will be as expected.\n});\n```\n\n## Download\n\nThe source is available for download from\n[GitHub](http://github.com/caolan/async).\nAlternatively, you can install using Node Package Manager (npm):\n\n    npm install async\n\n__Development:__ [async.js](https://github.com/caolan/async/raw/master/lib/async.js) - 29.6kb Uncompressed\n\n## In the Browser\n\nSo far it\'s been tested in IE6, IE7, IE8, FF3.6 and Chrome 5. Usage:\n\n```html\n<script type="text/javascript" src="async.js"></script>\n<script type="text/javascript">\n\n    async.map(data, asyncProcess, function(err, results){\n        alert(results);\n    });\n\n</script>\n```\n\n## Documentation\n\n### Collections\n\n* [each](#each)\n* [eachSeries](#eachSeries)\n* [eachLimit](#eachLimit)\n* [map](#map)\n* [mapSeries](#mapSeries)\n* [mapLimit](#mapLimit)\n* [filter](#filter)\n* [filterSeries](#filterSeries)\n* [reject](#reject)\n* [rejectSeries](#rejectSeries)\n* [reduce](#reduce)\n* [reduceRight](#reduceRight)\n* [detect](#detect)\n* [detectSeries](#detectSeries)\n* [sortBy](#sortBy)\n* [some](#some)\n* [every](#every)\n* [concat](#concat)\n* [concatSeries](#concatSeries)\n\n### Control Flow\n\n* [series](#series)\n* [parallel](#parallel)\n* [parallelLimit](#parallellimittasks-limit-callback)\n* [whilst](#whilst)\n* [doWhilst](#doWhilst)\n* [until](#until)\n* [doUntil](#doUntil)\n* [forever](#forever)\n* [waterfall](#waterfall)\n* [compose](#compose)\n* [applyEach](#applyEach)\n* [applyEachSeries](#applyEachSeries)\n* [queue](#queue)\n* [cargo](#cargo)\n* [auto](#auto)\n* [iterator](#iterator)\n* [apply](#apply)\n* [nextTick](#nextTick)\n* [times](#times)\n* [timesSeries](#timesSeries)\n\n### Utils\n\n* [memoize](#memoize)\n* [unmemoize](#unmemoize)\n* [log](#log)\n* [dir](#dir)\n* [noConflict](#noConflict)\n\n\n## Collections\n\n<a name="forEach" />\n<a name="each" />\n### each(arr, iterator, callback)\n\nApplies an iterator function to each item in an array, in parallel.\nThe iterator is called with an item from the list and a callback for when it\nhas finished. If the iterator passes an error to this callback, the main\ncallback for the each function is immediately called with the error.\n\nNote, that since this function applies the iterator to each item in parallel\nthere is no guarantee that the iterator functions will complete in order.\n\n__Arguments__\n\n* arr - An array to iterate over.\n* iterator(item, callback) - A function to apply to each item in the array.\n  The iterator is passed a callback(err) which must be called once it has \n  completed. If no error has occured, the callback should be run without \n  arguments or with an explicit null argument.\n* callback(err) - A callback which is called after all the iterator functions\n  have finished, or an error has occurred.\n\n__Example__\n\n```js\n// assuming openFiles is an array of file names and saveFile is a function\n// to save the modified contents of that file:\n\nasync.each(openFiles, saveFile, function(err){\n    // if any of the saves produced an error, err would equal that error\n});\n```\n\n---------------------------------------\n\n<a name="forEachSeries" />\n<a name="eachSeries" />\n### eachSeries(arr, iterator, callback)\n\nThe same as each only the iterator is applied to each item in the array in\nseries. The next iterator is only called once the current one has completed\nprocessing. This means the iterator functions will complete in order.\n\n\n---------------------------------------\n\n<a name="forEachLimit" />\n<a name="eachLimit" />\n### eachLimit(arr, limit, iterator, callback)\n\nThe same as each only no more than "limit" iterators will be simultaneously \nrunning at any time.\n\nNote that the items are not processed in batches, so there is no guarantee that\n the first "limit" iterator functions will complete before any others are \nstarted.\n\n__Arguments__\n\n* arr - An array to iterate over.\n* limit - The maximum number of iterators to run at any time.\n* iterator(item, callback) - A function to apply to each item in the array.\n  The iterator is passed a callback(err) which must be called once it has \n  completed. If no error has occured, the callback should be run without \n  arguments or with an explicit null argument.\n* callback(err) - A callback which is called after all the iterator functions\n  have finished, or an error has occurred.\n\n__Example__\n\n```js\n// Assume documents is an array of JSON objects and requestApi is a\n// function that interacts with a rate-limited REST api.\n\nasync.eachLimit(documents, 20, requestApi, function(err){\n    // if any of the saves produced an error, err would equal that error\n});\n```\n\n---------------------------------------\n\n<a name="map" />\n### map(arr, iterator, callback)\n\nProduces a new array of values by mapping each value in the given array through\nthe iterator function. The iterator is called with an item from the array and a\ncallback for when it has finished processing. The callback takes 2 arguments, \nan error and the transformed item from the array. If the iterator passes an\nerror to this callback, the main callback for the map function is immediately\ncalled with the error.\n\nNote, that since this function applies the iterator to each item in parallel\nthere is no guarantee that the iterator functions will complete in order, however\nthe results array will be in the same order as the original array.\n\n__Arguments__\n\n* arr - An array to iterate over.\n* iterator(item, callback) - A function to apply to each item in the array.\n  The iterator is passed a callback(err, transformed) which must be called once \n  it has completed with an error (which can be null) and a transformed item.\n* callback(err, results) - A callback which is called after all the iterator\n  functions have finished, or an error has occurred. Results is an array of the\n  transformed items from the original array.\n\n__Example__\n\n```js\nasync.map([\'file1\',\'file2\',\'file3\'], fs.stat, function(err, results){\n    // results is now an array of stats for each file\n});\n```\n\n---------------------------------------\n\n<a name="mapSeries" />\n### mapSeries(arr, iterator, callback)\n\nThe same as map only the iterator is applied to each item in the array in\nseries. The next iterator is only called once the current one has completed\nprocessing. The results array will be in the same order as the original.\n\n\n---------------------------------------\n\n<a name="mapLimit" />\n### mapLimit(arr, limit, iterator, callback)\n\nThe same as map only no more than "limit" iterators will be simultaneously \nrunning at any time.\n\nNote that the items are not processed in batches, so there is no guarantee that\n the first "limit" iterator functions will complete before any others are \nstarted.\n\n__Arguments__\n\n* arr - An array to iterate over.\n* limit - The maximum number of iterators to run at any time.\n* iterator(item, callback) - A function to apply to each item in the array.\n  The iterator is passed a callback(err, transformed) which must be called once \n  it has completed with an error (which can be null) and a transformed item.\n* callback(err, results) - A callback which is called after all the iterator\n  functions have finished, or an error has occurred. Results is an array of the\n  transformed items from the original array.\n\n__Example__\n\n```js\nasync.mapLimit([\'file1\',\'file2\',\'file3\'], 1, fs.stat, function(err, results){\n    // results is now an array of stats for each file\n});\n```\n\n---------------------------------------\n\n<a name="filter" />\n### filter(arr, iterator, callback)\n\n__Alias:__ select\n\nReturns a new array of all the values which pass an async truth test.\n_The callback for each iterator call only accepts a single argument of true or\nfalse, it does not accept an error argument first!_ This is in-line with the\nway node libraries work with truth tests like fs.exists. This operation is\nperformed in parallel, but the results array will be in the same order as the\noriginal.\n\n__Arguments__\n\n* arr - An array to iterate over.\n* iterator(item, callback) - A truth test to apply to each item in the array.\n  The iterator is passed a callback(truthValue) which must be called with a \n  boolean argument once it has completed.\n* callback(results) - A callback which is called after all the iterator\n  functions have finished.\n\n__Example__\n\n```js\nasync.filter([\'file1\',\'file2\',\'file3\'], fs.exists, function(results){\n    // results now equals an array of the existing files\n});\n```\n\n---------------------------------------\n\n<a name="filterSeries" />\n### filterSeries(arr, iterator, callback)\n\n__alias:__ selectSeries\n\nThe same as filter only the iterator is applied to each item in the array in\nseries. The next iterator is only called once the current one has completed\nprocessing. The results array will be in the same order as the original.\n\n---------------------------------------\n\n<a name="reject" />\n### reject(arr, iterator, callback)\n\nThe opposite of filter. Removes values that pass an async truth test.\n\n---------------------------------------\n\n<a name="rejectSeries" />\n### rejectSeries(arr, iterator, callback)\n\nThe same as reject, only the iterator is applied to each item in the array\nin series.\n\n\n---------------------------------------\n\n<a name="reduce" />\n### reduce(arr, memo, iterator, callback)\n\n__aliases:__ inject, foldl\n\nReduces a list of values into a single value using an async iterator to return\neach successive step. Memo is the initial state of the reduction. This\nfunction only operates in series. For performance reasons, it may make sense to\nsplit a call to this function into a parallel map, then use the normal\nArray.prototype.reduce on the results. This function is for situations where\neach step in the reduction needs to be async, if you can get the data before\nreducing it then it\'s probably a good idea to do so.\n\n__Arguments__\n\n* arr - An array to iterate over.\n* memo - The initial state of the reduction.\n* iterator(memo, item, callback) - A function applied to each item in the\n  array to produce the next step in the reduction. The iterator is passed a\n  callback(err, reduction) which accepts an optional error as its first \n  argument, and the state of the reduction as the second. If an error is \n  passed to the callback, the reduction is stopped and the main callback is \n  immediately called with the error.\n* callback(err, result) - A callback which is called after all the iterator\n  functions have finished. Result is the reduced value.\n\n__Example__\n\n```js\nasync.reduce([1,2,3], 0, function(memo, item, callback){\n    // pointless async:\n    process.nextTick(function(){\n        callback(null, memo + item)\n    });\n}, function(err, result){\n    // result is now equal to the last value of memo, which is 6\n});\n```\n\n---------------------------------------\n\n<a name="reduceRight" />\n### reduceRight(arr, memo, iterator, callback)\n\n__Alias:__ foldr\n\nSame as reduce, only operates on the items in the array in reverse order.\n\n\n---------------------------------------\n\n<a name="detect" />\n### detect(arr, iterator, callback)\n\nReturns the first value in a list that passes an async truth test. The\niterator is applied in parallel, meaning the first iterator to return true will\nfire the detect callback with that result. That means the result might not be\nthe first item in the original array (in terms of order) that passes the test.\n\nIf order within the original array is important then look at detectSeries.\n\n__Arguments__\n\n* arr - An array to iterate over.\n* iterator(item, callback) - A truth test to apply to each item in the array.\n  The iterator is passed a callback(truthValue) which must be called with a \n  boolean argument once it has completed.\n* callback(result) - A callback which is called as soon as any iterator returns\n  true, or after all the iterator functions have finished. Result will be\n  the first item in the array that passes the truth test (iterator) or the\n  value undefined if none passed.\n\n__Example__\n\n```js\nasync.detect([\'file1\',\'file2\',\'file3\'], fs.exists, function(result){\n    // result now equals the first file in the list that exists\n});\n```\n\n---------------------------------------\n\n<a name="detectSeries" />\n### detectSeries(arr, iterator, callback)\n\nThe same as detect, only the iterator is applied to each item in the array\nin series. This means the result is always the first in the original array (in\nterms of array order) that passes the truth test.\n\n\n---------------------------------------\n\n<a name="sortBy" />\n### sortBy(arr, iterator, callback)\n\nSorts a list by the results of running each value through an async iterator.\n\n__Arguments__\n\n* arr - An array to iterate over.\n* iterator(item, callback) - A function to apply to each item in the array.\n  The iterator is passed a callback(err, sortValue) which must be called once it\n  has completed with an error (which can be null) and a value to use as the sort\n  criteria.\n* callback(err, results) - A callback which is called after all the iterator\n  functions have finished, or an error has occurred. Results is the items from\n  the original array sorted by the values returned by the iterator calls.\n\n__Example__\n\n```js\nasync.sortBy([\'file1\',\'file2\',\'file3\'], function(file, callback){\n    fs.stat(file, function(err, stats){\n        callback(err, stats.mtime);\n    });\n}, function(err, results){\n    // results is now the original array of files sorted by\n    // modified date\n});\n```\n\n---------------------------------------\n\n<a name="some" />\n### some(arr, iterator, callback)\n\n__Alias:__ any\n\nReturns true if at least one element in the array satisfies an async test.\n_The callback for each iterator call only accepts a single argument of true or\nfalse, it does not accept an error argument first!_ This is in-line with the\nway node libraries work with truth tests like fs.exists. Once any iterator\ncall returns true, the main callback is immediately called.\n\n__Arguments__\n\n* arr - An array to iterate over.\n* iterator(item, callback) - A truth test to apply to each item in the array.\n  The iterator is passed a callback(truthValue) which must be called with a \n  boolean argument once it has completed.\n* callback(result) - A callback which is called as soon as any iterator returns\n  true, or after all the iterator functions have finished. Result will be\n  either true or false depending on the values of the async tests.\n\n__Example__\n\n```js\nasync.some([\'file1\',\'file2\',\'file3\'], fs.exists, function(result){\n    // if result is true then at least one of the files exists\n});\n```\n\n---------------------------------------\n\n<a name="every" />\n### every(arr, iterator, callback)\n\n__Alias:__ all\n\nReturns true if every element in the array satisfies an async test.\n_The callback for each iterator call only accepts a single argument of true or\nfalse, it does not accept an error argument first!_ This is in-line with the\nway node libraries work with truth tests like fs.exists.\n\n__Arguments__\n\n* arr - An array to iterate over.\n* iterator(item, callback) - A truth test to apply to each item in the array.\n  The iterator is passed a callback(truthValue) which must be called with a \n  boolean argument once it has completed.\n* callback(result) - A callback which is called after all the iterator\n  functions have finished. Result will be either true or false depending on\n  the values of the async tests.\n\n__Example__\n\n```js\nasync.every([\'file1\',\'file2\',\'file3\'], fs.exists, function(result){\n    // if result is true then every file exists\n});\n```\n\n---------------------------------------\n\n<a name="concat" />\n### concat(arr, iterator, callback)\n\nApplies an iterator to each item in a list, concatenating the results. Returns the\nconcatenated list. The iterators are called in parallel, and the results are\nconcatenated as they return. There is no guarantee that the results array will\nbe returned in the original order of the arguments passed to the iterator function.\n\n__Arguments__\n\n* arr - An array to iterate over\n* iterator(item, callback) - A function to apply to each item in the array.\n  The iterator is passed a callback(err, results) which must be called once it \n  has completed with an error (which can be null) and an array of results.\n* callback(err, results) - A callback which is called after all the iterator\n  functions have finished, or an error has occurred. Results is an array containing\n  the concatenated results of the iterator function.\n\n__Example__\n\n```js\nasync.concat([\'dir1\',\'dir2\',\'dir3\'], fs.readdir, function(err, files){\n    // files is now a list of filenames that exist in the 3 directories\n});\n```\n\n---------------------------------------\n\n<a name="concatSeries" />\n### concatSeries(arr, iterator, callback)\n\nSame as async.concat, but executes in series instead of parallel.\n\n\n## Control Flow\n\n<a name="series" />\n### series(tasks, [callback])\n\nRun an array of functions in series, each one running once the previous\nfunction has completed. If any functions in the series pass an error to its\ncallback, no more functions are run and the callback for the series is\nimmediately called with the value of the error. Once the tasks have completed,\nthe results are passed to the final callback as an array.\n\nIt is also possible to use an object instead of an array. Each property will be\nrun as a function and the results will be passed to the final callback as an object\ninstead of an array. This can be a more readable way of handling results from\nasync.series.\n\n\n__Arguments__\n\n* tasks - An array or object containing functions to run, each function is passed\n  a callback(err, result) it must call on completion with an error (which can\n  be null) and an optional result value.\n* callback(err, results) - An optional callback to run once all the functions\n  have completed. This function gets a results array (or object) containing all \n  the result arguments passed to the task callbacks.\n\n__Example__\n\n```js\nasync.series([\n    function(callback){\n        // do some stuff ...\n        callback(null, \'one\');\n    },\n    function(callback){\n        // do some more stuff ...\n        callback(null, \'two\');\n    }\n],\n// optional callback\nfunction(err, results){\n    // results is now equal to [\'one\', \'two\']\n});\n\n\n// an example using an object instead of an array\nasync.series({\n    one: function(callback){\n        setTimeout(function(){\n            callback(null, 1);\n        }, 200);\n    },\n    two: function(callback){\n        setTimeout(function(){\n            callback(null, 2);\n        }, 100);\n    }\n},\nfunction(err, results) {\n    // results is now equal to: {one: 1, two: 2}\n});\n```\n\n---------------------------------------\n\n<a name="parallel" />\n### parallel(tasks, [callback])\n\nRun an array of functions in parallel, without waiting until the previous\nfunction has completed. If any of the functions pass an error to its\ncallback, the main callback is immediately called with the value of the error.\nOnce the tasks have completed, the results are passed to the final callback as an\narray.\n\nIt is also possible to use an object instead of an array. Each property will be\nrun as a function and the results will be passed to the final callback as an object\ninstead of an array. This can be a more readable way of handling results from\nasync.parallel.\n\n\n__Arguments__\n\n* tasks - An array or object containing functions to run, each function is passed \n  a callback(err, result) it must call on completion with an error (which can\n  be null) and an optional result value.\n* callback(err, results) - An optional callback to run once all the functions\n  have completed. This function gets a results array (or object) containing all \n  the result arguments passed to the task callbacks.\n\n__Example__\n\n```js\nasync.parallel([\n    function(callback){\n        setTimeout(function(){\n            callback(null, \'one\');\n        }, 200);\n    },\n    function(callback){\n        setTimeout(function(){\n            callback(null, \'two\');\n        }, 100);\n    }\n],\n// optional callback\nfunction(err, results){\n    // the results array will equal [\'one\',\'two\'] even though\n    // the second function had a shorter timeout.\n});\n\n\n// an example using an object instead of an array\nasync.parallel({\n    one: function(callback){\n        setTimeout(function(){\n            callback(null, 1);\n        }, 200);\n    },\n    two: function(callback){\n        setTimeout(function(){\n            callback(null, 2);\n        }, 100);\n    }\n},\nfunction(err, results) {\n    // results is now equals to: {one: 1, two: 2}\n});\n```\n\n---------------------------------------\n\n<a name="parallel" />\n### parallelLimit(tasks, limit, [callback])\n\nThe same as parallel only the tasks are executed in parallel with a maximum of "limit" \ntasks executing at any time.\n\nNote that the tasks are not executed in batches, so there is no guarantee that \nthe first "limit" tasks will complete before any others are started.\n\n__Arguments__\n\n* tasks - An array or object containing functions to run, each function is passed \n  a callback(err, result) it must call on completion with an error (which can\n  be null) and an optional result value.\n* limit - The maximum number of tasks to run at any time.\n* callback(err, results) - An optional callback to run once all the functions\n  have completed. This function gets a results array (or object) containing all \n  the result arguments passed to the task callbacks.\n\n---------------------------------------\n\n<a name="whilst" />\n### whilst(test, fn, callback)\n\nRepeatedly call fn, while test returns true. Calls the callback when stopped,\nor an error occurs.\n\n__Arguments__\n\n* test() - synchronous truth test to perform before each execution of fn.\n* fn(callback) - A function to call each time the test passes. The function is\n  passed a callback(err) which must be called once it has completed with an \n  optional error argument.\n* callback(err) - A callback which is called after the test fails and repeated\n  execution of fn has stopped.\n\n__Example__\n\n```js\nvar count = 0;\n\nasync.whilst(\n    function () { return count < 5; },\n    function (callback) {\n        count++;\n        setTimeout(callback, 1000);\n    },\n    function (err) {\n        // 5 seconds have passed\n    }\n);\n```\n\n---------------------------------------\n\n<a name="doWhilst" />\n### doWhilst(fn, test, callback)\n\nThe post check version of whilst. To reflect the difference in the order of operations `test` and `fn` arguments are switched. `doWhilst` is to `whilst` as `do while` is to `while` in plain JavaScript.\n\n---------------------------------------\n\n<a name="until" />\n### until(test, fn, callback)\n\nRepeatedly call fn, until test returns true. Calls the callback when stopped,\nor an error occurs.\n\nThe inverse of async.whilst.\n\n---------------------------------------\n\n<a name="doUntil" />\n### doUntil(fn, test, callback)\n\nLike doWhilst except the test is inverted. Note the argument ordering differs from `until`.\n\n---------------------------------------\n\n<a name="forever" />\n### forever(fn, callback)\n\nCalls the asynchronous function \'fn\' repeatedly, in series, indefinitely.\nIf an error is passed to fn\'s callback then \'callback\' is called with the\nerror, otherwise it will never be called.\n\n---------------------------------------\n\n<a name="waterfall" />\n### waterfall(tasks, [callback])\n\nRuns an array of functions in series, each passing their results to the next in\nthe array. However, if any of the functions pass an error to the callback, the\nnext function is not executed and the main callback is immediately called with\nthe error.\n\n__Arguments__\n\n* tasks - An array of functions to run, each function is passed a \n  callback(err, result1, result2, ...) it must call on completion. The first\n  argument is an error (which can be null) and any further arguments will be \n  passed as arguments in order to the next task.\n* callback(err, [results]) - An optional callback to run once all the functions\n  have completed. This will be passed the results of the last task\'s callback.\n\n\n\n__Example__\n\n```js\nasync.waterfall([\n    function(callback){\n        callback(null, \'one\', \'two\');\n    },\n    function(arg1, arg2, callback){\n        callback(null, \'three\');\n    },\n    function(arg1, callback){\n        // arg1 now equals \'three\'\n        callback(null, \'done\');\n    }\n], function (err, result) {\n   // result now equals \'done\'    \n});\n```\n\n---------------------------------------\n<a name="compose" />\n### compose(fn1, fn2...)\n\nCreates a function which is a composition of the passed asynchronous\nfunctions. Each function consumes the return value of the function that\nfollows. Composing functions f(), g() and h() would produce the result of\nf(g(h())), only this version uses callbacks to obtain the return values.\n\nEach function is executed with the `this` binding of the composed function.\n\n__Arguments__\n\n* functions... - the asynchronous functions to compose\n\n\n__Example__\n\n```js\nfunction add1(n, callback) {\n    setTimeout(function () {\n        callback(null, n + 1);\n    }, 10);\n}\n\nfunction mul3(n, callback) {\n    setTimeout(function () {\n        callback(null, n * 3);\n    }, 10);\n}\n\nvar add1mul3 = async.compose(mul3, add1);\n\nadd1mul3(4, function (err, result) {\n   // result now equals 15\n});\n```\n\n---------------------------------------\n<a name="applyEach" />\n### applyEach(fns, args..., callback)\n\nApplies the provided arguments to each function in the array, calling the\ncallback after all functions have completed. If you only provide the first\nargument then it will return a function which lets you pass in the\narguments as if it were a single function call.\n\n__Arguments__\n\n* fns - the asynchronous functions to all call with the same arguments\n* args... - any number of separate arguments to pass to the function\n* callback - the final argument should be the callback, called when all\n  functions have completed processing\n\n\n__Example__\n\n```js\nasync.applyEach([enableSearch, updateSchema], \'bucket\', callback);\n\n// partial application example:\nasync.each(\n    buckets,\n    async.applyEach([enableSearch, updateSchema]),\n    callback\n);\n```\n\n---------------------------------------\n\n<a name="applyEachSeries" />\n### applyEachSeries(arr, iterator, callback)\n\nThe same as applyEach only the functions are applied in series.\n\n---------------------------------------\n\n<a name="queue" />\n### queue(worker, concurrency)\n\nCreates a queue object with the specified concurrency. Tasks added to the\nqueue will be processed in parallel (up to the concurrency limit). If all\nworkers are in progress, the task is queued until one is available. Once\na worker has completed a task, the task\'s callback is called.\n\n__Arguments__\n\n* worker(task, callback) - An asynchronous function for processing a queued\n  task, which must call its callback(err) argument when finished, with an \n  optional error as an argument.\n* concurrency - An integer for determining how many worker functions should be\n  run in parallel.\n\n__Queue objects__\n\nThe queue object returned by this function has the following properties and\nmethods:\n\n* length() - a function returning the number of items waiting to be processed.\n* concurrency - an integer for determining how many worker functions should be\n  run in parallel. This property can be changed after a queue is created to\n  alter the concurrency on-the-fly.\n* push(task, [callback]) - add a new task to the queue, the callback is called\n  once the worker has finished processing the task.\n  instead of a single task, an array of tasks can be submitted. the respective callback is used for every task in the list.\n* unshift(task, [callback]) - add a new task to the front of the queue.\n* saturated - a callback that is called when the queue length hits the concurrency and further tasks will be queued\n* empty - a callback that is called when the last item from the queue is given to a worker\n* drain - a callback that is called when the last item from the queue has returned from the worker\n\n__Example__\n\n```js\n// create a queue object with concurrency 2\n\nvar q = async.queue(function (task, callback) {\n    console.log(\'hello \' + task.name);\n    callback();\n}, 2);\n\n\n// assign a callback\nq.drain = function() {\n    console.log(\'all items have been processed\');\n}\n\n// add some items to the queue\n\nq.push({name: \'foo\'}, function (err) {\n    console.log(\'finished processing foo\');\n});\nq.push({name: \'bar\'}, function (err) {\n    console.log(\'finished processing bar\');\n});\n\n// add some items to the queue (batch-wise)\n\nq.push([{name: \'baz\'},{name: \'bay\'},{name: \'bax\'}], function (err) {\n    console.log(\'finished processing bar\');\n});\n\n// add some items to the front of the queue\n\nq.unshift({name: \'bar\'}, function (err) {\n    console.log(\'finished processing bar\');\n});\n```\n\n---------------------------------------\n\n<a name="cargo" />\n### cargo(worker, [payload])\n\nCreates a cargo object with the specified payload. Tasks added to the\ncargo will be processed altogether (up to the payload limit). If the\nworker is in progress, the task is queued until it is available. Once\nthe worker has completed some tasks, each callback of those tasks is called.\n\n__Arguments__\n\n* worker(tasks, callback) - An asynchronous function for processing an array of\n  queued tasks, which must call its callback(err) argument when finished, with \n  an optional error as an argument.\n* payload - An optional integer for determining how many tasks should be\n  processed per round; if omitted, the default is unlimited.\n\n__Cargo objects__\n\nThe cargo object returned by this function has the following properties and\nmethods:\n\n* length() - a function returning the number of items waiting to be processed.\n* payload - an integer for determining how many tasks should be\n  process per round. This property can be changed after a cargo is created to\n  alter the payload on-the-fly.\n* push(task, [callback]) - add a new task to the queue, the callback is called\n  once the worker has finished processing the task.\n  instead of a single task, an array of tasks can be submitted. the respective callback is used for every task in the list.\n* saturated - a callback that is called when the queue length hits the concurrency and further tasks will be queued\n* empty - a callback that is called when the last item from the queue is given to a worker\n* drain - a callback that is called when the last item from the queue has returned from the worker\n\n__Example__\n\n```js\n// create a cargo object with payload 2\n\nvar cargo = async.cargo(function (tasks, callback) {\n    for(var i=0; i<tasks.length; i++){\n      console.log(\'hello \' + tasks[i].name);\n    }\n    callback();\n}, 2);\n\n\n// add some items\n\ncargo.push({name: \'foo\'}, function (err) {\n    console.log(\'finished processing foo\');\n});\ncargo.push({name: \'bar\'}, function (err) {\n    console.log(\'finished processing bar\');\n});\ncargo.push({name: \'baz\'}, function (err) {\n    console.log(\'finished processing baz\');\n});\n```\n\n---------------------------------------\n\n<a name="auto" />\n### auto(tasks, [callback])\n\nDetermines the best order for running functions based on their requirements.\nEach function can optionally depend on other functions being completed first,\nand each function is run as soon as its requirements are satisfied. If any of\nthe functions pass an error to their callback, that function will not complete\n(so any other functions depending on it will not run) and the main callback\nwill be called immediately with the error. Functions also receive an object\ncontaining the results of functions which have completed so far.\n\nNote, all functions are called with a results object as a second argument, \nso it is unsafe to pass functions in the tasks object which cannot handle the\nextra argument. For example, this snippet of code:\n\n```js\nasync.auto({\n  readData: async.apply(fs.readFile, \'data.txt\', \'utf-8\')\n}, callback);\n```\n\nwill have the effect of calling readFile with the results object as the last\nargument, which will fail:\n\n```js\nfs.readFile(\'data.txt\', \'utf-8\', cb, {});\n```\n\nInstead, wrap the call to readFile in a function which does not forward the \nresults object:\n\n```js\nasync.auto({\n  readData: function(cb, results){\n    fs.readFile(\'data.txt\', \'utf-8\', cb);\n  }\n}, callback);\n```\n\n__Arguments__\n\n* tasks - An object literal containing named functions or an array of\n  requirements, with the function itself the last item in the array. The key\n  used for each function or array is used when specifying requirements. The \n  function receives two arguments: (1) a callback(err, result) which must be \n  called when finished, passing an error (which can be null) and the result of \n  the function\'s execution, and (2) a results object, containing the results of\n  the previously executed functions.\n* callback(err, results) - An optional callback which is called when all the\n  tasks have been completed. The callback will receive an error as an argument\n  if any tasks pass an error to their callback. Results will always be passed\n\tbut if an error occurred, no other tasks will be performed, and the results\n\tobject will only contain partial results.\n  \n\n__Example__\n\n```js\nasync.auto({\n    get_data: function(callback){\n        // async code to get some data\n    },\n    make_folder: function(callback){\n        // async code to create a directory to store a file in\n        // this is run at the same time as getting the data\n    },\n    write_file: [\'get_data\', \'make_folder\', function(callback){\n        // once there is some data and the directory exists,\n        // write the data to a file in the directory\n        callback(null, filename);\n    }],\n    email_link: [\'write_file\', function(callback, results){\n        // once the file is written let\'s email a link to it...\n        // results.write_file contains the filename returned by write_file.\n    }]\n});\n```\n\nThis is a fairly trivial example, but to do this using the basic parallel and\nseries functions would look like this:\n\n```js\nasync.parallel([\n    function(callback){\n        // async code to get some data\n    },\n    function(callback){\n        // async code to create a directory to store a file in\n        // this is run at the same time as getting the data\n    }\n],\nfunction(err, results){\n    async.series([\n        function(callback){\n            // once there is some data and the directory exists,\n            // write the data to a file in the directory\n        },\n        function(callback){\n            // once the file is written let\'s email a link to it...\n        }\n    ]);\n});\n```\n\nFor a complicated series of async tasks using the auto function makes adding\nnew tasks much easier and makes the code more readable.\n\n\n---------------------------------------\n\n<a name="iterator" />\n### iterator(tasks)\n\nCreates an iterator function which calls the next function in the array,\nreturning a continuation to call the next one after that. It\'s also possible to\n\'peek\' the next iterator by doing iterator.next().\n\nThis function is used internally by the async module but can be useful when\nyou want to manually control the flow of functions in series.\n\n__Arguments__\n\n* tasks - An array of functions to run.\n\n__Example__\n\n```js\nvar iterator = async.iterator([\n    function(){ sys.p(\'one\'); },\n    function(){ sys.p(\'two\'); },\n    function(){ sys.p(\'three\'); }\n]);\n\nnode> var iterator2 = iterator();\n\'one\'\nnode> var iterator3 = iterator2();\n\'two\'\nnode> iterator3();\n\'three\'\nnode> var nextfn = iterator2.next();\nnode> nextfn();\n\'three\'\n```\n\n---------------------------------------\n\n<a name="apply" />\n### apply(function, arguments..)\n\nCreates a continuation function with some arguments already applied, a useful\nshorthand when combined with other control flow functions. Any arguments\npassed to the returned function are added to the arguments originally passed\nto apply.\n\n__Arguments__\n\n* function - The function you want to eventually apply all arguments to.\n* arguments... - Any number of arguments to automatically apply when the\n  continuation is called.\n\n__Example__\n\n```js\n// using apply\n\nasync.parallel([\n    async.apply(fs.writeFile, \'testfile1\', \'test1\'),\n    async.apply(fs.writeFile, \'testfile2\', \'test2\'),\n]);\n\n\n// the same process without using apply\n\nasync.parallel([\n    function(callback){\n        fs.writeFile(\'testfile1\', \'test1\', callback);\n    },\n    function(callback){\n        fs.writeFile(\'testfile2\', \'test2\', callback);\n    }\n]);\n```\n\nIt\'s possible to pass any number of additional arguments when calling the\ncontinuation:\n\n```js\nnode> var fn = async.apply(sys.puts, \'one\');\nnode> fn(\'two\', \'three\');\none\ntwo\nthree\n```\n\n---------------------------------------\n\n<a name="nextTick" />\n### nextTick(callback)\n\nCalls the callback on a later loop around the event loop. In node.js this just\ncalls process.nextTick, in the browser it falls back to setImmediate(callback)\nif available, otherwise setTimeout(callback, 0), which means other higher priority\nevents may precede the execution of the callback.\n\nThis is used internally for browser-compatibility purposes.\n\n__Arguments__\n\n* callback - The function to call on a later loop around the event loop.\n\n__Example__\n\n```js\nvar call_order = [];\nasync.nextTick(function(){\n    call_order.push(\'two\');\n    // call_order now equals [\'one\',\'two\']\n});\ncall_order.push(\'one\')\n```\n\n<a name="times" />\n### times(n, callback)\n\nCalls the callback n times and accumulates results in the same manner\nyou would use with async.map.\n\n__Arguments__\n\n* n - The number of times to run the function.\n* callback - The function to call n times.\n\n__Example__\n\n```js\n// Pretend this is some complicated async factory\nvar createUser = function(id, callback) {\n  callback(null, {\n    id: \'user\' + id\n  })\n}\n// generate 5 users\nasync.times(5, function(n, next){\n    createUser(n, function(err, user) {\n      next(err, user)\n    })\n}, function(err, users) {\n  // we should now have 5 users\n});\n```\n\n<a name="timesSeries" />\n### timesSeries(n, callback)\n\nThe same as times only the iterator is applied to each item in the array in\nseries. The next iterator is only called once the current one has completed\nprocessing. The results array will be in the same order as the original.\n\n\n## Utils\n\n<a name="memoize" />\n### memoize(fn, [hasher])\n\nCaches the results of an async function. When creating a hash to store function\nresults against, the callback is omitted from the hash and an optional hash\nfunction can be used.\n\nThe cache of results is exposed as the `memo` property of the function returned\nby `memoize`.\n\n__Arguments__\n\n* fn - the function you to proxy and cache results from.\n* hasher - an optional function for generating a custom hash for storing\n  results, it has all the arguments applied to it apart from the callback, and\n  must be synchronous.\n\n__Example__\n\n```js\nvar slow_fn = function (name, callback) {\n    // do something\n    callback(null, result);\n};\nvar fn = async.memoize(slow_fn);\n\n// fn can now be used as if it were slow_fn\nfn(\'some name\', function () {\n    // callback\n});\n```\n\n<a name="unmemoize" />\n### unmemoize(fn)\n\nUndoes a memoized function, reverting it to the original, unmemoized\nform. Comes handy in tests.\n\n__Arguments__\n\n* fn - the memoized function\n\n<a name="log" />\n### log(function, arguments)\n\nLogs the result of an async function to the console. Only works in node.js or\nin browsers that support console.log and console.error (such as FF and Chrome).\nIf multiple arguments are returned from the async function, console.log is\ncalled on each argument in order.\n\n__Arguments__\n\n* function - The function you want to eventually apply all arguments to.\n* arguments... - Any number of arguments to apply to the function.\n\n__Example__\n\n```js\nvar hello = function(name, callback){\n    setTimeout(function(){\n        callback(null, \'hello \' + name);\n    }, 1000);\n};\n```\n```js\nnode> async.log(hello, \'world\');\n\'hello world\'\n```\n\n---------------------------------------\n\n<a name="dir" />\n### dir(function, arguments)\n\nLogs the result of an async function to the console using console.dir to\ndisplay the properties of the resulting object. Only works in node.js or\nin browsers that support console.dir and console.error (such as FF and Chrome).\nIf multiple arguments are returned from the async function, console.dir is\ncalled on each argument in order.\n\n__Arguments__\n\n* function - The function you want to eventually apply all arguments to.\n* arguments... - Any number of arguments to apply to the function.\n\n__Example__\n\n```js\nvar hello = function(name, callback){\n    setTimeout(function(){\n        callback(null, {hello: name});\n    }, 1000);\n};\n```\n```js\nnode> async.dir(hello, \'world\');\n{hello: \'world\'}\n```\n\n---------------------------------------\n\n<a name="noConflict" />\n### noConflict()\n\nChanges the value of async back to its original value, returning a reference to the\nasync object.\n',
1350 silly resolved     readmeFilename: 'README.md',
1350 silly resolved     homepage: 'https://github.com/caolan/async',
1350 silly resolved     _id: 'async@0.2.10',
1350 silly resolved     _from: 'async@~0.2.6' } ]
1351 info install source-map@0.1.33 into /usr/local/lib/node_modules/jade/node_modules/with/node_modules/uglify-js
1352 info install uglify-to-browserify@1.0.2 into /usr/local/lib/node_modules/jade/node_modules/with/node_modules/uglify-js
1353 info install optimist@0.3.7 into /usr/local/lib/node_modules/jade/node_modules/with/node_modules/uglify-js
1354 info install async@0.2.10 into /usr/local/lib/node_modules/jade/node_modules/with/node_modules/uglify-js
1355 info installOne source-map@0.1.33
1356 info installOne uglify-to-browserify@1.0.2
1357 info installOne optimist@0.3.7
1358 info installOne async@0.2.10
1359 silly lockFile 964a9b80--npm-css-parse-1-0-4-package-tgz tar:///Users/marc.bluemner/.npm/css-parse/1.0.4/package.tgz
1360 silly lockFile 964a9b80--npm-css-parse-1-0-4-package-tgz tar:///Users/marc.bluemner/.npm/css-parse/1.0.4/package.tgz
1361 silly gunzTarPerm extractEntry package.json
1362 info /usr/local/lib/node_modules/jade/node_modules/with/node_modules/uglify-js/node_modules/source-map unbuild
1363 info /usr/local/lib/node_modules/jade/node_modules/with/node_modules/uglify-js/node_modules/uglify-to-browserify unbuild
1364 info /usr/local/lib/node_modules/jade/node_modules/with/node_modules/uglify-js/node_modules/optimist unbuild
1365 info /usr/local/lib/node_modules/jade/node_modules/with/node_modules/uglify-js/node_modules/async unbuild
1366 http 200 https://registry.npmjs.org/is-promise/-/is-promise-1.0.1.tgz
1367 silly gunzTarPerm extractEntry .npmignore
1368 silly gunzTarPerm extractEntry README.md
1369 verbose tar unpack /Users/marc.bluemner/.npm/source-map/0.1.33/package.tgz
1370 silly lockFile 5f526001-glify-js-node-modules-source-map tar:///usr/local/lib/node_modules/jade/node_modules/with/node_modules/uglify-js/node_modules/source-map
1371 verbose lock tar:///usr/local/lib/node_modules/jade/node_modules/with/node_modules/uglify-js/node_modules/source-map /Users/marc.bluemner/.npm/5f526001-glify-js-node-modules-source-map.lock
1372 silly lockFile a877218c-pm-source-map-0-1-33-package-tgz tar:///Users/marc.bluemner/.npm/source-map/0.1.33/package.tgz
1373 verbose lock tar:///Users/marc.bluemner/.npm/source-map/0.1.33/package.tgz /Users/marc.bluemner/.npm/a877218c-pm-source-map-0-1-33-package-tgz.lock
1374 verbose tar unpack /Users/marc.bluemner/.npm/uglify-to-browserify/1.0.2/package.tgz
1375 silly lockFile d423fd75-ode-modules-uglify-to-browserify tar:///usr/local/lib/node_modules/jade/node_modules/with/node_modules/uglify-js/node_modules/uglify-to-browserify
1376 verbose lock tar:///usr/local/lib/node_modules/jade/node_modules/with/node_modules/uglify-js/node_modules/uglify-to-browserify /Users/marc.bluemner/.npm/d423fd75-ode-modules-uglify-to-browserify.lock
1377 silly lockFile fde5703a--to-browserify-1-0-2-package-tgz tar:///Users/marc.bluemner/.npm/uglify-to-browserify/1.0.2/package.tgz
1378 verbose lock tar:///Users/marc.bluemner/.npm/uglify-to-browserify/1.0.2/package.tgz /Users/marc.bluemner/.npm/fde5703a--to-browserify-1-0-2-package-tgz.lock
1379 verbose tar unpack /Users/marc.bluemner/.npm/async/0.2.10/package.tgz
1380 silly lockFile cd867dbe-les-uglify-js-node-modules-async tar:///usr/local/lib/node_modules/jade/node_modules/with/node_modules/uglify-js/node_modules/async
1381 verbose lock tar:///usr/local/lib/node_modules/jade/node_modules/with/node_modules/uglify-js/node_modules/async /Users/marc.bluemner/.npm/cd867dbe-les-uglify-js-node-modules-async.lock
1382 silly lockFile 39bc0fc0-ner-npm-async-0-2-10-package-tgz tar:///Users/marc.bluemner/.npm/async/0.2.10/package.tgz
1383 verbose lock tar:///Users/marc.bluemner/.npm/async/0.2.10/package.tgz /Users/marc.bluemner/.npm/39bc0fc0-ner-npm-async-0-2-10-package-tgz.lock
1384 verbose tar unpack /Users/marc.bluemner/.npm/optimist/0.3.7/package.tgz
1385 silly lockFile 8a4f310b--uglify-js-node-modules-optimist tar:///usr/local/lib/node_modules/jade/node_modules/with/node_modules/uglify-js/node_modules/optimist
1386 verbose lock tar:///usr/local/lib/node_modules/jade/node_modules/with/node_modules/uglify-js/node_modules/optimist /Users/marc.bluemner/.npm/8a4f310b--uglify-js-node-modules-optimist.lock
1387 silly lockFile 04634416-r-npm-optimist-0-3-7-package-tgz tar:///Users/marc.bluemner/.npm/optimist/0.3.7/package.tgz
1388 verbose lock tar:///Users/marc.bluemner/.npm/optimist/0.3.7/package.tgz /Users/marc.bluemner/.npm/04634416-r-npm-optimist-0-3-7-package-tgz.lock
1389 silly gunzTarPerm extractEntry LICENSE
1390 silly gunzTarPerm extractEntry index.js
1391 info preinstall css-stringify@1.0.5
1392 info preinstall css-parse@1.0.4
1393 silly gunzTarPerm modes [ '755', '644' ]
1394 silly gunzTarPerm modes [ '755', '644' ]
1395 verbose readDependencies using package.json deps
1396 verbose readDependencies using package.json deps
1397 silly resolved []
1398 verbose about to build /usr/local/lib/node_modules/jade/node_modules/transformers/node_modules/css/node_modules/css-stringify
1399 info build /usr/local/lib/node_modules/jade/node_modules/transformers/node_modules/css/node_modules/css-stringify
1400 verbose linkStuff [ true,
1400 verbose linkStuff   '/usr/local/lib/node_modules',
1400 verbose linkStuff   false,
1400 verbose linkStuff   '/usr/local/lib/node_modules/jade/node_modules/transformers/node_modules/css/node_modules' ]
1401 info linkStuff css-stringify@1.0.5
1402 verbose linkBins css-stringify@1.0.5
1403 verbose linkMans css-stringify@1.0.5
1404 verbose rebuildBundles css-stringify@1.0.5
1405 verbose readDependencies using package.json deps
1406 info install css-stringify@1.0.5
1407 verbose readDependencies using package.json deps
1408 silly resolved []
1409 verbose about to build /usr/local/lib/node_modules/jade/node_modules/transformers/node_modules/css/node_modules/css-parse
1410 info build /usr/local/lib/node_modules/jade/node_modules/transformers/node_modules/css/node_modules/css-parse
1411 verbose linkStuff [ true,
1411 verbose linkStuff   '/usr/local/lib/node_modules',
1411 verbose linkStuff   false,
1411 verbose linkStuff   '/usr/local/lib/node_modules/jade/node_modules/transformers/node_modules/css/node_modules' ]
1412 info linkStuff css-parse@1.0.4
1413 verbose linkBins css-parse@1.0.4
1414 verbose linkMans css-parse@1.0.4
1415 verbose rebuildBundles css-parse@1.0.4
1416 info install css-parse@1.0.4
1417 info postinstall css-stringify@1.0.5
1418 info postinstall css-parse@1.0.4
1419 silly gunzTarPerm extractEntry .travis.yml
1420 silly gunzTarPerm extractEntry LICENSE
1421 verbose about to build /usr/local/lib/node_modules/jade/node_modules/transformers/node_modules/css
1422 info build /usr/local/lib/node_modules/jade/node_modules/transformers/node_modules/css
1423 verbose linkStuff [ true,
1423 verbose linkStuff   '/usr/local/lib/node_modules',
1423 verbose linkStuff   false,
1423 verbose linkStuff   '/usr/local/lib/node_modules/jade/node_modules/transformers/node_modules' ]
1424 info linkStuff css@1.0.8
1425 verbose linkBins css@1.0.8
1426 verbose linkMans css@1.0.8
1427 verbose rebuildBundles css@1.0.8
1428 verbose rebuildBundles [ 'css-parse', 'css-stringify' ]
1429 info install css@1.0.8
1430 info postinstall css@1.0.8
1431 silly gunzTarPerm extractEntry Makefile.dryice.js
1432 silly gunzTarPerm extractEntry .travis.yml
1433 silly gunzTarPerm extractEntry example/bool.js
1434 silly gunzTarPerm extractEntry example/default_singles.js
1435 silly gunzTarPerm extractEntry test/compress/issue-44.js
1436 silly gunzTarPerm extractEntry test/compress/issue-59.js
1437 verbose tar unpack /var/folders/ln/thz02fyj0ll9_055y0fs6534fq_3w0/T/npm-64780-CRGbDJLW/1401123843915-0.6624766737222672/tmp.tgz
1438 silly lockFile c6638fbb-ner-npm-is-promise-1-0-1-package tar:///Users/marc.bluemner/.npm/is-promise/1.0.1/package
1439 verbose lock tar:///Users/marc.bluemner/.npm/is-promise/1.0.1/package /Users/marc.bluemner/.npm/c6638fbb-ner-npm-is-promise-1-0-1-package.lock
1440 silly lockFile 0f23f258-43915-0-6624766737222672-tmp-tgz tar:///var/folders/ln/thz02fyj0ll9_055y0fs6534fq_3w0/T/npm-64780-CRGbDJLW/1401123843915-0.6624766737222672/tmp.tgz
1441 verbose lock tar:///var/folders/ln/thz02fyj0ll9_055y0fs6534fq_3w0/T/npm-64780-CRGbDJLW/1401123843915-0.6624766737222672/tmp.tgz /Users/marc.bluemner/.npm/0f23f258-43915-0-6624766737222672-tmp-tgz.lock
1442 silly gunzTarPerm modes [ '755', '644' ]
1443 silly gunzTarPerm extractEntry package.json
1444 silly gunzTarPerm modified mode [ 'package.json', 438, 420 ]
1445 silly gunzTarPerm extractEntry test/compress/labels.js
1446 silly gunzTarPerm extractEntry test/compress/drop-unused.js
1447 silly gunzTarPerm extractEntry .npmignore
1448 silly gunzTarPerm modified mode [ '.npmignore', 438, 420 ]
1449 silly gunzTarPerm extractEntry LICENSE
1450 silly gunzTarPerm modified mode [ 'LICENSE', 438, 420 ]
1451 silly gunzTarPerm extractEntry CHANGELOG.md
1452 silly gunzTarPerm extractEntry build/assert-shim.js
1453 silly gunzTarPerm extractEntry example/divide.js
1454 silly gunzTarPerm extractEntry example/line_count.js
1455 silly gunzTarPerm extractEntry package.json
1456 silly gunzTarPerm extractEntry index.js
1457 silly gunzTarPerm modified mode [ 'index.js', 438, 420 ]
1458 silly gunzTarPerm extractEntry .travis.yml
1459 silly gunzTarPerm modified mode [ '.travis.yml', 438, 420 ]
1460 silly gunzTarPerm extractEntry example/default_hash.js
1461 silly gunzTarPerm extractEntry example/line_count_wrap.js
1462 silly gunzTarPerm extractEntry README.md
1463 silly gunzTarPerm extractEntry LICENSE
1464 silly gunzTarPerm extractEntry component.json
1465 silly gunzTarPerm extractEntry lib/async.js
1466 silly gunzTarPerm extractEntry build/mini-require.js
1467 silly gunzTarPerm extractEntry build/suffix-browser.js
1468 silly gunzTarPerm extractEntry test/compress/loops.js
1469 silly gunzTarPerm extractEntry test/compress/debugger.js
1470 silly gunzTarPerm extractEntry readme.md
1471 silly gunzTarPerm modified mode [ 'readme.md', 438, 420 ]
1472 silly gunzTarPerm extractEntry example/nonopt.js
1473 silly gunzTarPerm extractEntry example/reflect.js
1474 silly gunzTarPerm extractEntry build/test-prefix.js
1475 silly gunzTarPerm extractEntry build/test-suffix.js
1476 silly gunzTarPerm extractEntry example/short.js
1477 silly gunzTarPerm extractEntry example/string.js
1478 silly gunzTarPerm extractEntry build/prefix-source-map.jsm
1479 silly gunzTarPerm extractEntry build/prefix-utils.jsm
1480 silly gunzTarPerm extractEntry example/boolean_single.js
1481 silly gunzTarPerm extractEntry example/usage-options.js
1482 silly gunzTarPerm extractEntry test/compress/negate-iife.js
1483 silly gunzTarPerm extractEntry test/compress/dead-code.js
1484 silly gunzTarPerm extractEntry example/boolean_double.js
1485 silly gunzTarPerm extractEntry example/xup.js
1486 silly gunzTarPerm extractEntry build/suffix-source-map.jsm
1487 silly gunzTarPerm extractEntry build/suffix-utils.jsm
1488 silly gunzTarPerm extractEntry example/line_count_options.js
1489 silly gunzTarPerm extractEntry readme.markdown
1490 silly gunzTarPerm extractEntry test/compress/properties.js
1491 silly gunzTarPerm extractEntry test/compress/conditionals.js
1492 silly gunzTarPerm extractEntry lib/source-map.js
1493 silly gunzTarPerm extractEntry lib/source-map/array-set.js
1494 silly gunzTarPerm extractEntry test/_.js
1495 silly gunzTarPerm extractEntry test/parse.js
1496 silly gunzTarPerm extractEntry package.json
1497 silly gunzTarPerm extractEntry .npmignore
1498 silly gunzTarPerm extractEntry README.md
1499 silly gunzTarPerm extractEntry test/usage.js
1500 silly gunzTarPerm extractEntry test/_/argv.js
1501 silly gunzTarPerm extractEntry test/compress/sequences.js
1502 silly gunzTarPerm extractEntry test/compress/concat-strings.js
1503 silly gunzTarPerm extractEntry lib/source-map/base64-vlq.js
1504 silly gunzTarPerm extractEntry lib/source-map/base64.js
1505 silly gunzTarPerm extractEntry LICENSE
1506 silly gunzTarPerm extractEntry index.js
1507 silly gunzTarPerm extractEntry test/_/bin.js
1508 silly gunzTarPerm extractEntry test/compress/switch.js
1509 silly gunzTarPerm extractEntry test/compress/blocks.js
1510 silly gunzTarPerm extractEntry lib/source-map/binary-search.js
1511 silly gunzTarPerm extractEntry lib/source-map/source-map-consumer.js
1512 silly gunzTarPerm extractEntry .travis.yml
1513 silly gunzTarPerm extractEntry test/compress/typeof.js
1514 silly gunzTarPerm extractEntry test/compress/issue-22.js
1515 silly gunzTarPerm extractEntry lib/source-map/source-map-generator.js
1516 silly gunzTarPerm extractEntry lib/source-map/source-node.js
1517 silly gunzTarPerm extractEntry test/index.js
1518 silly lockFile c6638fbb-ner-npm-is-promise-1-0-1-package tar:///Users/marc.bluemner/.npm/is-promise/1.0.1/package
1519 silly lockFile c6638fbb-ner-npm-is-promise-1-0-1-package tar:///Users/marc.bluemner/.npm/is-promise/1.0.1/package
1520 silly lockFile 0f23f258-43915-0-6624766737222672-tmp-tgz tar:///var/folders/ln/thz02fyj0ll9_055y0fs6534fq_3w0/T/npm-64780-CRGbDJLW/1401123843915-0.6624766737222672/tmp.tgz
1521 silly lockFile 0f23f258-43915-0-6624766737222672-tmp-tgz tar:///var/folders/ln/thz02fyj0ll9_055y0fs6534fq_3w0/T/npm-64780-CRGbDJLW/1401123843915-0.6624766737222672/tmp.tgz
1522 silly gunzTarPerm extractEntry lib/source-map/util.js
1523 silly gunzTarPerm extractEntry test/run-tests.js
1524 silly gunzTarPerm extractEntry tools/node.js
1525 silly lockFile ef847fa5--is-promise-is-promise-1-0-1-tgz https://registry.npmjs.org/is-promise/-/is-promise-1.0.1.tgz
1526 silly lockFile ef847fa5--is-promise-is-promise-1-0-1-tgz https://registry.npmjs.org/is-promise/-/is-promise-1.0.1.tgz
1527 silly lockFile fb524531-is-promise-1-0-1 is-promise@1.0.1
1528 silly lockFile fb524531-is-promise-1-0-1 is-promise@1.0.1
1529 silly lockFile 7e480b0f-is-promise-1 is-promise@~1
1530 silly lockFile 7e480b0f-is-promise-1 is-promise@~1
1531 silly gunzTarPerm extractEntry test/source-map/test-api.js
1532 silly gunzTarPerm extractEntry test/source-map/test-base64-vlq.js
1533 silly gunzTarPerm extractEntry test/source-map/test-base64.js
1534 silly gunzTarPerm extractEntry test/source-map/test-binary-search.js
1535 silly gunzTarPerm extractEntry test/source-map/test-array-set.js
1536 silly gunzTarPerm extractEntry test/source-map/test-source-map-consumer.js
1537 silly gunzTarPerm extractEntry test/source-map/test-source-map-generator.js
1538 silly gunzTarPerm extractEntry test/source-map/test-source-node.js
1539 silly lockFile d423fd75-ode-modules-uglify-to-browserify tar:///usr/local/lib/node_modules/jade/node_modules/with/node_modules/uglify-js/node_modules/uglify-to-browserify
1540 silly lockFile d423fd75-ode-modules-uglify-to-browserify tar:///usr/local/lib/node_modules/jade/node_modules/with/node_modules/uglify-js/node_modules/uglify-to-browserify
1541 silly lockFile fde5703a--to-browserify-1-0-2-package-tgz tar:///Users/marc.bluemner/.npm/uglify-to-browserify/1.0.2/package.tgz
1542 silly lockFile fde5703a--to-browserify-1-0-2-package-tgz tar:///Users/marc.bluemner/.npm/uglify-to-browserify/1.0.2/package.tgz
1543 info preinstall uglify-to-browserify@1.0.2
1544 silly gunzTarPerm extractEntry test/source-map/test-util.js
1545 silly gunzTarPerm extractEntry test/source-map/util.js
1546 verbose readDependencies using package.json deps
1547 verbose readDependencies using package.json deps
1548 silly resolved []
1549 verbose about to build /usr/local/lib/node_modules/jade/node_modules/with/node_modules/uglify-js/node_modules/uglify-to-browserify
1550 info build /usr/local/lib/node_modules/jade/node_modules/with/node_modules/uglify-js/node_modules/uglify-to-browserify
1551 verbose linkStuff [ true,
1551 verbose linkStuff   '/usr/local/lib/node_modules',
1551 verbose linkStuff   false,
1551 verbose linkStuff   '/usr/local/lib/node_modules/jade/node_modules/with/node_modules/uglify-js/node_modules' ]
1552 info linkStuff uglify-to-browserify@1.0.2
1553 verbose linkBins uglify-to-browserify@1.0.2
1554 verbose linkMans uglify-to-browserify@1.0.2
1555 verbose rebuildBundles uglify-to-browserify@1.0.2
1556 info install uglify-to-browserify@1.0.2
1557 info postinstall uglify-to-browserify@1.0.2
1558 silly lockFile ed76c268-es-monocle-node-modules-readdirp tar:///usr/local/lib/node_modules/jade/node_modules/monocle/node_modules/readdirp
1559 silly lockFile ed76c268-es-monocle-node-modules-readdirp tar:///usr/local/lib/node_modules/jade/node_modules/monocle/node_modules/readdirp
1560 silly lockFile 8ddbb90b-r-npm-readdirp-0-2-5-package-tgz tar:///Users/marc.bluemner/.npm/readdirp/0.2.5/package.tgz
1561 silly lockFile 8ddbb90b-r-npm-readdirp-0-2-5-package-tgz tar:///Users/marc.bluemner/.npm/readdirp/0.2.5/package.tgz
1562 silly gunzTarPerm extractEntry test/source-map/test-dog-fooding.js
1563 info preinstall readdirp@0.2.5
1564 verbose readDependencies using package.json deps
1565 verbose readDependencies using package.json deps
1566 verbose cache add [ 'minimatch@>=0.2.4', null ]
1567 verbose cache add name=undefined spec="minimatch@>=0.2.4" args=["minimatch@>=0.2.4",null]
1568 verbose parsed url { protocol: null,
1568 verbose parsed url   slashes: null,
1568 verbose parsed url   auth: null,
1568 verbose parsed url   host: null,
1568 verbose parsed url   port: null,
1568 verbose parsed url   hostname: null,
1568 verbose parsed url   hash: null,
1568 verbose parsed url   search: null,
1568 verbose parsed url   query: null,
1568 verbose parsed url   pathname: 'minimatch@%3E=0.2.4',
1568 verbose parsed url   path: 'minimatch@%3E=0.2.4',
1568 verbose parsed url   href: 'minimatch@%3E=0.2.4' }
1569 verbose cache add name="minimatch" spec=">=0.2.4" args=["minimatch",">=0.2.4"]
1570 verbose parsed url { protocol: null,
1570 verbose parsed url   slashes: null,
1570 verbose parsed url   auth: null,
1570 verbose parsed url   host: null,
1570 verbose parsed url   port: null,
1570 verbose parsed url   hostname: null,
1570 verbose parsed url   hash: null,
1570 verbose parsed url   search: null,
1570 verbose parsed url   query: null,
1570 verbose parsed url   pathname: '%3E=0.2.4',
1570 verbose parsed url   path: '%3E=0.2.4',
1570 verbose parsed url   href: '%3E=0.2.4' }
1571 verbose addNamed [ 'minimatch', '>=0.2.4' ]
1572 verbose addNamed [ null, '>=0.2.4' ]
1573 silly lockFile 5a1b7cbd-minimatch-0-2-4 minimatch@>=0.2.4
1574 verbose lock minimatch@>=0.2.4 /Users/marc.bluemner/.npm/5a1b7cbd-minimatch-0-2-4.lock
1575 silly addNameRange { name: 'minimatch', range: '>=0.2.4', hasData: false }
1576 silly resolved [ { name: 'is-promise',
1576 silly resolved     version: '1.0.1',
1576 silly resolved     description: 'Test whether an object looks like a promises-a+ promise',
1576 silly resolved     main: 'index.js',
1576 silly resolved     scripts: { test: 'mocha -R spec' },
1576 silly resolved     repository: { type: 'git', url: 'https://github.com/then/is-promise.git' },
1576 silly resolved     author: { name: 'ForbesLindesay' },
1576 silly resolved     license: 'MIT',
1576 silly resolved     devDependencies: { 'better-assert': '~0.1.0', mocha: '~1.7.4' },
1576 silly resolved     readme: '<a href="http://promises-aplus.github.com/promises-spec"><img src="http://promises-aplus.github.com/promises-spec/assets/logo-small.png" align="right" /></a>\r\n# is-promise\r\n\r\n  Test whether an object looks like a promises-a+ promise\r\n\r\n [![Build Status](https://img.shields.io/travis/then/is-promise/master.svg)](https://travis-ci.org/then/is-promise)\r\n [![Dependency Status](https://img.shields.io/gemnasium/then/is-promise.svg)](https://gemnasium.com/then/is-promise)\r\n [![NPM version](https://img.shields.io/npm/v/is-promise.svg)](https://www.npmjs.org/package/is-promise)\r\n\r\n## Installation\r\n\r\n    $ npm install is-promise\r\n\r\nYou can also use it client side via npm.\r\n\r\n## API\r\n\r\n```javascript\r\nvar isPromise = require(\'is-promise\');\r\n\r\nisPromise({then:function () {...}});//=>true\r\nisPromise(null);//=>false\r\nisPromise({});//=>false\r\nisPromise({then: true})//=>false\r\n```\r\n\r\n## License\r\n\r\n  MIT\r\n',
1576 silly resolved     readmeFilename: 'readme.md',
1576 silly resolved     bugs: { url: 'https://github.com/then/is-promise/issues' },
1576 silly resolved     homepage: 'https://github.com/then/is-promise',
1576 silly resolved     _id: 'is-promise@1.0.1',
1576 silly resolved     _shasum: '31573761c057e33c2e91aab9e96da08cefbe76e5',
1576 silly resolved     _from: 'is-promise@~1',
1576 silly resolved     _resolved: 'https://registry.npmjs.org/is-promise/-/is-promise-1.0.1.tgz' } ]
1577 info install is-promise@1.0.1 into /usr/local/lib/node_modules/jade/node_modules/transformers/node_modules/promise
1578 info installOne is-promise@1.0.1
1579 info /usr/local/lib/node_modules/jade/node_modules/transformers/node_modules/promise/node_modules/is-promise unbuild
1580 verbose tar unpack /Users/marc.bluemner/.npm/is-promise/1.0.1/package.tgz
1581 silly lockFile 61d1a878--promise-node-modules-is-promise tar:///usr/local/lib/node_modules/jade/node_modules/transformers/node_modules/promise/node_modules/is-promise
1582 verbose lock tar:///usr/local/lib/node_modules/jade/node_modules/transformers/node_modules/promise/node_modules/is-promise /Users/marc.bluemner/.npm/61d1a878--promise-node-modules-is-promise.lock
1583 silly lockFile 7cf5a93e-npm-is-promise-1-0-1-package-tgz tar:///Users/marc.bluemner/.npm/is-promise/1.0.1/package.tgz
1584 verbose lock tar:///Users/marc.bluemner/.npm/is-promise/1.0.1/package.tgz /Users/marc.bluemner/.npm/7cf5a93e-npm-is-promise-1-0-1-package-tgz.lock
1585 silly gunzTarPerm modes [ '755', '644' ]
1586 silly gunzTarPerm extractEntry package.json
1587 silly gunzTarPerm modified mode [ 'package.json', 438, 420 ]
1588 silly gunzTarPerm extractEntry .npmignore
1589 silly gunzTarPerm modified mode [ '.npmignore', 438, 420 ]
1590 silly gunzTarPerm extractEntry LICENSE
1591 silly gunzTarPerm modified mode [ 'LICENSE', 438, 420 ]
1592 verbose url raw minimatch
1593 verbose url resolving [ 'https://registry.npmjs.org/', './minimatch' ]
1594 verbose url resolved https://registry.npmjs.org/minimatch
1595 info trying registry request attempt 1 at 19:04:06
1596 verbose etag "64HZ0LR2MPZLWRRTTBF60QUIU"
1597 http GET https://registry.npmjs.org/minimatch
1598 silly lockFile cd867dbe-les-uglify-js-node-modules-async tar:///usr/local/lib/node_modules/jade/node_modules/with/node_modules/uglify-js/node_modules/async
1599 silly lockFile cd867dbe-les-uglify-js-node-modules-async tar:///usr/local/lib/node_modules/jade/node_modules/with/node_modules/uglify-js/node_modules/async
1600 silly lockFile 39bc0fc0-ner-npm-async-0-2-10-package-tgz tar:///Users/marc.bluemner/.npm/async/0.2.10/package.tgz
1601 silly lockFile 39bc0fc0-ner-npm-async-0-2-10-package-tgz tar:///Users/marc.bluemner/.npm/async/0.2.10/package.tgz
1602 silly gunzTarPerm extractEntry index.js
1603 silly gunzTarPerm modified mode [ 'index.js', 438, 420 ]
1604 silly gunzTarPerm extractEntry .travis.yml
1605 silly gunzTarPerm modified mode [ '.travis.yml', 438, 420 ]
1606 info preinstall async@0.2.10
1607 verbose readDependencies using package.json deps
1608 verbose readDependencies using package.json deps
1609 silly resolved []
1610 verbose about to build /usr/local/lib/node_modules/jade/node_modules/with/node_modules/uglify-js/node_modules/async
1611 info build /usr/local/lib/node_modules/jade/node_modules/with/node_modules/uglify-js/node_modules/async
1612 verbose linkStuff [ true,
1612 verbose linkStuff   '/usr/local/lib/node_modules',
1612 verbose linkStuff   false,
1612 verbose linkStuff   '/usr/local/lib/node_modules/jade/node_modules/with/node_modules/uglify-js/node_modules' ]
1613 info linkStuff async@0.2.10
1614 verbose linkBins async@0.2.10
1615 verbose linkMans async@0.2.10
1616 verbose rebuildBundles async@0.2.10
1617 info install async@0.2.10
1618 silly gunzTarPerm extractEntry readme.md
1619 silly gunzTarPerm modified mode [ 'readme.md', 438, 420 ]
1620 info postinstall async@0.2.10
1621 silly lockFile 07dba1bf--uglify-js-node-modules-optimist tar:///usr/local/lib/node_modules/jade/node_modules/transformers/node_modules/uglify-js/node_modules/optimist
1622 silly lockFile 07dba1bf--uglify-js-node-modules-optimist tar:///usr/local/lib/node_modules/jade/node_modules/transformers/node_modules/uglify-js/node_modules/optimist
1623 silly lockFile 04634416-r-npm-optimist-0-3-7-package-tgz tar:///Users/marc.bluemner/.npm/optimist/0.3.7/package.tgz
1624 silly lockFile 04634416-r-npm-optimist-0-3-7-package-tgz tar:///Users/marc.bluemner/.npm/optimist/0.3.7/package.tgz
1625 silly gunzTarPerm modes [ '755', '644' ]
1626 info preinstall optimist@0.3.7
1627 verbose readDependencies using package.json deps
1628 verbose readDependencies using package.json deps
1629 silly gunzTarPerm extractEntry package.json
1630 verbose cache add [ 'wordwrap@~0.0.2', null ]
1631 verbose cache add name=undefined spec="wordwrap@~0.0.2" args=["wordwrap@~0.0.2",null]
1632 verbose parsed url { protocol: null,
1632 verbose parsed url   slashes: null,
1632 verbose parsed url   auth: null,
1632 verbose parsed url   host: null,
1632 verbose parsed url   port: null,
1632 verbose parsed url   hostname: null,
1632 verbose parsed url   hash: null,
1632 verbose parsed url   search: null,
1632 verbose parsed url   query: null,
1632 verbose parsed url   pathname: 'wordwrap@~0.0.2',
1632 verbose parsed url   path: 'wordwrap@~0.0.2',
1632 verbose parsed url   href: 'wordwrap@~0.0.2' }
1633 verbose cache add name="wordwrap" spec="~0.0.2" args=["wordwrap","~0.0.2"]
1634 verbose parsed url { protocol: null,
1634 verbose parsed url   slashes: null,
1634 verbose parsed url   auth: null,
1634 verbose parsed url   host: null,
1634 verbose parsed url   port: null,
1634 verbose parsed url   hostname: null,
1634 verbose parsed url   hash: null,
1634 verbose parsed url   search: null,
1634 verbose parsed url   query: null,
1634 verbose parsed url   pathname: '~0.0.2',
1634 verbose parsed url   path: '~0.0.2',
1634 verbose parsed url   href: '~0.0.2' }
1635 verbose addNamed [ 'wordwrap', '~0.0.2' ]
1636 verbose addNamed [ null, '>=0.0.2-0 <0.1.0-0' ]
1637 silly lockFile 8bd42136-wordwrap-0-0-2 wordwrap@~0.0.2
1638 verbose lock wordwrap@~0.0.2 /Users/marc.bluemner/.npm/8bd42136-wordwrap-0-0-2.lock
1639 silly addNameRange { name: 'wordwrap', range: '>=0.0.2-0 <0.1.0-0', hasData: false }
1640 silly gunzTarPerm extractEntry LICENSE
1641 silly gunzTarPerm extractEntry index.js
1642 silly gunzTarPerm extractEntry .travis.yml
1643 silly gunzTarPerm extractEntry example/bool.js
1644 silly gunzTarPerm extractEntry example/default_singles.js
1645 silly gunzTarPerm extractEntry example/divide.js
1646 silly gunzTarPerm extractEntry example/line_count.js
1647 silly gunzTarPerm extractEntry example/default_hash.js
1648 silly gunzTarPerm extractEntry example/line_count_wrap.js
1649 silly gunzTarPerm extractEntry example/nonopt.js
1650 silly gunzTarPerm extractEntry example/reflect.js
1651 silly lockFile 849ea1d9-antinople-node-modules-uglify-js tar:///usr/local/lib/node_modules/jade/node_modules/constantinople/node_modules/uglify-js
1652 silly lockFile 849ea1d9-antinople-node-modules-uglify-js tar:///usr/local/lib/node_modules/jade/node_modules/constantinople/node_modules/uglify-js
1653 silly lockFile 97319dfd-npm-uglify-js-2-4-13-package-tgz tar:///Users/marc.bluemner/.npm/uglify-js/2.4.13/package.tgz
1654 silly lockFile 97319dfd-npm-uglify-js-2-4-13-package-tgz tar:///Users/marc.bluemner/.npm/uglify-js/2.4.13/package.tgz
1655 silly gunzTarPerm extractEntry example/short.js
1656 silly gunzTarPerm extractEntry example/string.js
1657 info preinstall uglify-js@2.4.13
1658 verbose readDependencies using package.json deps
1659 verbose readDependencies using package.json deps
1660 verbose cache add [ 'async@~0.2.6', null ]
1661 verbose cache add name=undefined spec="async@~0.2.6" args=["async@~0.2.6",null]
1662 verbose parsed url { protocol: null,
1662 verbose parsed url   slashes: null,
1662 verbose parsed url   auth: null,
1662 verbose parsed url   host: null,
1662 verbose parsed url   port: null,
1662 verbose parsed url   hostname: null,
1662 verbose parsed url   hash: null,
1662 verbose parsed url   search: null,
1662 verbose parsed url   query: null,
1662 verbose parsed url   pathname: 'async@~0.2.6',
1662 verbose parsed url   path: 'async@~0.2.6',
1662 verbose parsed url   href: 'async@~0.2.6' }
1663 verbose cache add name="async" spec="~0.2.6" args=["async","~0.2.6"]
1664 verbose parsed url { protocol: null,
1664 verbose parsed url   slashes: null,
1664 verbose parsed url   auth: null,
1664 verbose parsed url   host: null,
1664 verbose parsed url   port: null,
1664 verbose parsed url   hostname: null,
1664 verbose parsed url   hash: null,
1664 verbose parsed url   search: null,
1664 verbose parsed url   query: null,
1664 verbose parsed url   pathname: '~0.2.6',
1664 verbose parsed url   path: '~0.2.6',
1664 verbose parsed url   href: '~0.2.6' }
1665 verbose addNamed [ 'async', '~0.2.6' ]
1666 verbose addNamed [ null, '>=0.2.6-0 <0.3.0-0' ]
1667 silly lockFile e00b1d77-async-0-2-6 async@~0.2.6
1668 verbose lock async@~0.2.6 /Users/marc.bluemner/.npm/e00b1d77-async-0-2-6.lock
1669 verbose cache add [ 'source-map@~0.1.33', null ]
1670 verbose cache add name=undefined spec="source-map@~0.1.33" args=["source-map@~0.1.33",null]
1671 verbose parsed url { protocol: null,
1671 verbose parsed url   slashes: null,
1671 verbose parsed url   auth: null,
1671 verbose parsed url   host: null,
1671 verbose parsed url   port: null,
1671 verbose parsed url   hostname: null,
1671 verbose parsed url   hash: null,
1671 verbose parsed url   search: null,
1671 verbose parsed url   query: null,
1671 verbose parsed url   pathname: 'source-map@~0.1.33',
1671 verbose parsed url   path: 'source-map@~0.1.33',
1671 verbose parsed url   href: 'source-map@~0.1.33' }
1672 verbose cache add name="source-map" spec="~0.1.33" args=["source-map","~0.1.33"]
1673 verbose parsed url { protocol: null,
1673 verbose parsed url   slashes: null,
1673 verbose parsed url   auth: null,
1673 verbose parsed url   host: null,
1673 verbose parsed url   port: null,
1673 verbose parsed url   hostname: null,
1673 verbose parsed url   hash: null,
1673 verbose parsed url   search: null,
1673 verbose parsed url   query: null,
1673 verbose parsed url   pathname: '~0.1.33',
1673 verbose parsed url   path: '~0.1.33',
1673 verbose parsed url   href: '~0.1.33' }
1674 verbose addNamed [ 'source-map', '~0.1.33' ]
1675 verbose addNamed [ null, '>=0.1.33-0 <0.2.0-0' ]
1676 silly lockFile 0fe92a26-source-map-0-1-33 source-map@~0.1.33
1677 verbose lock source-map@~0.1.33 /Users/marc.bluemner/.npm/0fe92a26-source-map-0-1-33.lock
1678 verbose cache add [ 'optimist@~0.3.5', null ]
1679 verbose cache add name=undefined spec="optimist@~0.3.5" args=["optimist@~0.3.5",null]
1680 verbose parsed url { protocol: null,
1680 verbose parsed url   slashes: null,
1680 verbose parsed url   auth: null,
1680 verbose parsed url   host: null,
1680 verbose parsed url   port: null,
1680 verbose parsed url   hostname: null,
1680 verbose parsed url   hash: null,
1680 verbose parsed url   search: null,
1680 verbose parsed url   query: null,
1680 verbose parsed url   pathname: 'optimist@~0.3.5',
1680 verbose parsed url   path: 'optimist@~0.3.5',
1680 verbose parsed url   href: 'optimist@~0.3.5' }
1681 verbose cache add name="optimist" spec="~0.3.5" args=["optimist","~0.3.5"]
1682 verbose parsed url { protocol: null,
1682 verbose parsed url   slashes: null,
1682 verbose parsed url   auth: null,
1682 verbose parsed url   host: null,
1682 verbose parsed url   port: null,
1682 verbose parsed url   hostname: null,
1682 verbose parsed url   hash: null,
1682 verbose parsed url   search: null,
1682 verbose parsed url   query: null,
1682 verbose parsed url   pathname: '~0.3.5',
1682 verbose parsed url   path: '~0.3.5',
1682 verbose parsed url   href: '~0.3.5' }
1683 verbose addNamed [ 'optimist', '~0.3.5' ]
1684 verbose addNamed [ null, '>=0.3.5-0 <0.4.0-0' ]
1685 silly lockFile a1f99b53-optimist-0-3-5 optimist@~0.3.5
1686 verbose lock optimist@~0.3.5 /Users/marc.bluemner/.npm/a1f99b53-optimist-0-3-5.lock
1687 silly addNameRange { name: 'async', range: '>=0.2.6-0 <0.3.0-0', hasData: false }
1688 silly gunzTarPerm extractEntry example/boolean_single.js
1689 silly gunzTarPerm extractEntry example/usage-options.js
1690 verbose cache add [ 'uglify-to-browserify@~1.0.0', null ]
1691 verbose cache add name=undefined spec="uglify-to-browserify@~1.0.0" args=["uglify-to-browserify@~1.0.0",null]
1692 verbose parsed url { protocol: null,
1692 verbose parsed url   slashes: null,
1692 verbose parsed url   auth: null,
1692 verbose parsed url   host: null,
1692 verbose parsed url   port: null,
1692 verbose parsed url   hostname: null,
1692 verbose parsed url   hash: null,
1692 verbose parsed url   search: null,
1692 verbose parsed url   query: null,
1692 verbose parsed url   pathname: 'uglify-to-browserify@~1.0.0',
1692 verbose parsed url   path: 'uglify-to-browserify@~1.0.0',
1692 verbose parsed url   href: 'uglify-to-browserify@~1.0.0' }
1693 verbose cache add name="uglify-to-browserify" spec="~1.0.0" args=["uglify-to-browserify","~1.0.0"]
1694 verbose parsed url { protocol: null,
1694 verbose parsed url   slashes: null,
1694 verbose parsed url   auth: null,
1694 verbose parsed url   host: null,
1694 verbose parsed url   port: null,
1694 verbose parsed url   hostname: null,
1694 verbose parsed url   hash: null,
1694 verbose parsed url   search: null,
1694 verbose parsed url   query: null,
1694 verbose parsed url   pathname: '~1.0.0',
1694 verbose parsed url   path: '~1.0.0',
1694 verbose parsed url   href: '~1.0.0' }
1695 verbose addNamed [ 'uglify-to-browserify', '~1.0.0' ]
1696 verbose addNamed [ null, '>=1.0.0-0 <1.1.0-0' ]
1697 silly lockFile 8d4498e3-uglify-to-browserify-1-0-0 uglify-to-browserify@~1.0.0
1698 verbose lock uglify-to-browserify@~1.0.0 /Users/marc.bluemner/.npm/8d4498e3-uglify-to-browserify-1-0-0.lock
1699 silly addNameRange { name: 'source-map',
1699 silly addNameRange   range: '>=0.1.33-0 <0.2.0-0',
1699 silly addNameRange   hasData: false }
1700 silly addNameRange { name: 'optimist', range: '>=0.3.5-0 <0.4.0-0', hasData: false }
1701 silly addNameRange { name: 'uglify-to-browserify',
1701 silly addNameRange   range: '>=1.0.0-0 <1.1.0-0',
1701 silly addNameRange   hasData: false }
1702 verbose registry.get async not expired, no request
1703 silly addNameRange number 2 { name: 'async', range: '>=0.2.6-0 <0.3.0-0', hasData: true }
1704 silly addNameRange versions [ 'async',
1704 silly addNameRange   [ '0.1.0',
1704 silly addNameRange     '0.1.1',
1704 silly addNameRange     '0.1.2',
1704 silly addNameRange     '0.1.3',
1704 silly addNameRange     '0.1.4',
1704 silly addNameRange     '0.1.5',
1704 silly addNameRange     '0.1.6',
1704 silly addNameRange     '0.1.7',
1704 silly addNameRange     '0.1.8',
1704 silly addNameRange     '0.1.9',
1704 silly addNameRange     '0.1.10',
1704 silly addNameRange     '0.1.11',
1704 silly addNameRange     '0.1.12',
1704 silly addNameRange     '0.1.13',
1704 silly addNameRange     '0.1.14',
1704 silly addNameRange     '0.1.15',
1704 silly addNameRange     '0.1.16',
1704 silly addNameRange     '0.1.17',
1704 silly addNameRange     '0.1.18',
1704 silly addNameRange     '0.1.19',
1704 silly addNameRange     '0.1.20',
1704 silly addNameRange     '0.1.21',
1704 silly addNameRange     '0.1.22',
1704 silly addNameRange     '0.2.0',
1704 silly addNameRange     '0.2.1',
1704 silly addNameRange     '0.2.2',
1704 silly addNameRange     '0.2.3',
1704 silly addNameRange     '0.2.4',
1704 silly addNameRange     '0.2.5',
1704 silly addNameRange     '0.2.6',
1704 silly addNameRange     '0.2.7',
1704 silly addNameRange     '0.2.8',
1704 silly addNameRange     '0.2.9',
1704 silly addNameRange     '0.2.10',
1704 silly addNameRange     '0.3.0',
1704 silly addNameRange     '0.4.0',
1704 silly addNameRange     '0.4.1',
1704 silly addNameRange     '0.5.0',
1704 silly addNameRange     '0.6.0',
1704 silly addNameRange     '0.6.1',
1704 silly addNameRange     '0.6.2',
1704 silly addNameRange     '0.7.0',
1704 silly addNameRange     '0.8.0',
1704 silly addNameRange     '0.9.0' ] ]
1705 verbose addNamed [ 'async', '0.2.10' ]
1706 verbose addNamed [ '0.2.10', '0.2.10' ]
1707 silly lockFile 098b530d-async-0-2-10 async@0.2.10
1708 verbose lock async@0.2.10 /Users/marc.bluemner/.npm/098b530d-async-0-2-10.lock
1709 verbose registry.get source-map not expired, no request
1710 silly addNameRange number 2 { name: 'source-map',
1710 silly addNameRange   range: '>=0.1.33-0 <0.2.0-0',
1710 silly addNameRange   hasData: true }
1711 silly addNameRange versions [ 'source-map',
1711 silly addNameRange   [ '0.0.0',
1711 silly addNameRange     '0.1.0',
1711 silly addNameRange     '0.1.1',
1711 silly addNameRange     '0.1.2',
1711 silly addNameRange     '0.1.3',
1711 silly addNameRange     '0.1.4',
1711 silly addNameRange     '0.1.5',
1711 silly addNameRange     '0.1.6',
1711 silly addNameRange     '0.1.7',
1711 silly addNameRange     '0.1.8',
1711 silly addNameRange     '0.1.9',
1711 silly addNameRange     '0.1.10',
1711 silly addNameRange     '0.1.11',
1711 silly addNameRange     '0.1.12',
1711 silly addNameRange     '0.1.13',
1711 silly addNameRange     '0.1.14',
1711 silly addNameRange     '0.1.15',
1711 silly addNameRange     '0.1.16',
1711 silly addNameRange     '0.1.17',
1711 silly addNameRange     '0.1.18',
1711 silly addNameRange     '0.1.19',
1711 silly addNameRange     '0.1.20',
1711 silly addNameRange     '0.1.21',
1711 silly addNameRange     '0.1.22',
1711 silly addNameRange     '0.1.23',
1711 silly addNameRange     '0.1.24',
1711 silly addNameRange     '0.1.25',
1711 silly addNameRange     '0.1.26',
1711 silly addNameRange     '0.1.27',
1711 silly addNameRange     '0.1.28',
1711 silly addNameRange     '0.1.29',
1711 silly addNameRange     '0.1.30',
1711 silly addNameRange     '0.1.31',
1711 silly addNameRange     '0.1.32',
1711 silly addNameRange     '0.1.33' ] ]
1712 verbose addNamed [ 'source-map', '0.1.33' ]
1713 verbose addNamed [ '0.1.33', '0.1.33' ]
1714 silly lockFile 0c9e4a5b-source-map-0-1-33 source-map@0.1.33
1715 verbose lock source-map@0.1.33 /Users/marc.bluemner/.npm/0c9e4a5b-source-map-0-1-33.lock
1716 verbose registry.get optimist not expired, no request
1717 silly addNameRange number 2 { name: 'optimist', range: '>=0.3.5-0 <0.4.0-0', hasData: true }
1718 silly addNameRange versions [ 'optimist',
1718 silly addNameRange   [ '0.0.1',
1718 silly addNameRange     '0.0.2',
1718 silly addNameRange     '0.0.4',
1718 silly addNameRange     '0.0.5',
1718 silly addNameRange     '0.0.6',
1718 silly addNameRange     '0.0.7',
1718 silly addNameRange     '0.1.0',
1718 silly addNameRange     '0.1.1',
1718 silly addNameRange     '0.1.2',
1718 silly addNameRange     '0.1.3',
1718 silly addNameRange     '0.1.4',
1718 silly addNameRange     '0.1.5',
1718 silly addNameRange     '0.1.6',
1718 silly addNameRange     '0.1.7',
1718 silly addNameRange     '0.1.8',
1718 silly addNameRange     '0.1.9',
1718 silly addNameRange     '0.0.3',
1718 silly addNameRange     '0.2.0',
1718 silly addNameRange     '0.2.1',
1718 silly addNameRange     '0.2.2',
1718 silly addNameRange     '0.2.3',
1718 silly addNameRange     '0.2.4',
1718 silly addNameRange     '0.2.5',
1718 silly addNameRange     '0.2.6',
1718 silly addNameRange     '0.2.7',
1718 silly addNameRange     '0.2.8',
1718 silly addNameRange     '0.3.0',
1718 silly addNameRange     '0.3.1',
1718 silly addNameRange     '0.3.3',
1718 silly addNameRange     '0.3.4',
1718 silly addNameRange     '0.3.5',
1718 silly addNameRange     '0.3.6',
1718 silly addNameRange     '0.3.7',
1718 silly addNameRange     '0.4.0',
1718 silly addNameRange     '0.5.0',
1718 silly addNameRange     '0.5.1',
1718 silly addNameRange     '0.5.2',
1718 silly addNameRange     '0.6.0',
1718 silly addNameRange     '0.6.1' ] ]
1719 verbose addNamed [ 'optimist', '0.3.7' ]
1720 verbose addNamed [ '0.3.7', '0.3.7' ]
1721 silly lockFile 090e1d8d-optimist-0-3-7 optimist@0.3.7
1722 verbose lock optimist@0.3.7 /Users/marc.bluemner/.npm/090e1d8d-optimist-0-3-7.lock
1723 verbose registry.get uglify-to-browserify not expired, no request
1724 silly addNameRange number 2 { name: 'uglify-to-browserify',
1724 silly addNameRange   range: '>=1.0.0-0 <1.1.0-0',
1724 silly addNameRange   hasData: true }
1725 silly addNameRange versions [ 'uglify-to-browserify',
1725 silly addNameRange   [ '0.0.1', '1.0.0', '1.0.1', '1.0.2' ] ]
1726 verbose addNamed [ 'uglify-to-browserify', '1.0.2' ]
1727 verbose addNamed [ '1.0.2', '1.0.2' ]
1728 silly lockFile 1fc290f9-uglify-to-browserify-1-0-2 uglify-to-browserify@1.0.2
1729 verbose lock uglify-to-browserify@1.0.2 /Users/marc.bluemner/.npm/1fc290f9-uglify-to-browserify-1-0-2.lock
1730 silly gunzTarPerm extractEntry example/boolean_double.js
1731 silly gunzTarPerm extractEntry example/xup.js
1732 verbose url raw wordwrap
1733 verbose url resolving [ 'https://registry.npmjs.org/', './wordwrap' ]
1734 verbose url resolved https://registry.npmjs.org/wordwrap
1735 info trying registry request attempt 1 at 19:04:06
1736 verbose etag "6GUW1CYLCM04DMNSMK3F17IKN"
1737 http GET https://registry.npmjs.org/wordwrap
1738 silly lockFile 098b530d-async-0-2-10 async@0.2.10
1739 silly lockFile 098b530d-async-0-2-10 async@0.2.10
1740 silly lockFile 1fc290f9-uglify-to-browserify-1-0-2 uglify-to-browserify@1.0.2
1741 silly lockFile 1fc290f9-uglify-to-browserify-1-0-2 uglify-to-browserify@1.0.2
1742 silly lockFile 090e1d8d-optimist-0-3-7 optimist@0.3.7
1743 silly lockFile 090e1d8d-optimist-0-3-7 optimist@0.3.7
1744 silly lockFile e00b1d77-async-0-2-6 async@~0.2.6
1745 silly lockFile e00b1d77-async-0-2-6 async@~0.2.6
1746 silly lockFile 0c9e4a5b-source-map-0-1-33 source-map@0.1.33
1747 silly lockFile 0c9e4a5b-source-map-0-1-33 source-map@0.1.33
1748 silly lockFile 8d4498e3-uglify-to-browserify-1-0-0 uglify-to-browserify@~1.0.0
1749 silly lockFile 8d4498e3-uglify-to-browserify-1-0-0 uglify-to-browserify@~1.0.0
1750 silly lockFile a1f99b53-optimist-0-3-5 optimist@~0.3.5
1751 silly lockFile a1f99b53-optimist-0-3-5 optimist@~0.3.5
1752 silly lockFile 0fe92a26-source-map-0-1-33 source-map@~0.1.33
1753 silly lockFile 0fe92a26-source-map-0-1-33 source-map@~0.1.33
1754 silly lockFile 61d1a878--promise-node-modules-is-promise tar:///usr/local/lib/node_modules/jade/node_modules/transformers/node_modules/promise/node_modules/is-promise
1755 silly lockFile 61d1a878--promise-node-modules-is-promise tar:///usr/local/lib/node_modules/jade/node_modules/transformers/node_modules/promise/node_modules/is-promise
1756 silly lockFile 7cf5a93e-npm-is-promise-1-0-1-package-tgz tar:///Users/marc.bluemner/.npm/is-promise/1.0.1/package.tgz
1757 silly lockFile 7cf5a93e-npm-is-promise-1-0-1-package-tgz tar:///Users/marc.bluemner/.npm/is-promise/1.0.1/package.tgz
1758 silly gunzTarPerm extractEntry example/line_count_options.js
1759 silly gunzTarPerm extractEntry readme.markdown
1760 silly resolved [ { name: 'async',
1760 silly resolved     description: 'Higher-order functions and common patterns for asynchronous code',
1760 silly resolved     main: './lib/async',
1760 silly resolved     author: { name: 'Caolan McMahon' },
1760 silly resolved     version: '0.2.10',
1760 silly resolved     repository: { type: 'git', url: 'https://github.com/caolan/async.git' },
1760 silly resolved     bugs: { url: 'https://github.com/caolan/async/issues' },
1760 silly resolved     licenses: [ [Object] ],
1760 silly resolved     devDependencies: { nodeunit: '>0.0.0', 'uglify-js': '1.2.x', nodelint: '>0.0.0' },
1760 silly resolved     jam: { main: 'lib/async.js', include: [Object] },
1760 silly resolved     scripts: { test: 'nodeunit test/test-async.js' },
1760 silly resolved     readme: '# Async.js\n\nAsync is a utility module which provides straight-forward, powerful functions\nfor working with asynchronous JavaScript. Although originally designed for\nuse with [node.js](http://nodejs.org), it can also be used directly in the\nbrowser. Also supports [component](https://github.com/component/component).\n\nAsync provides around 20 functions that include the usual \'functional\'\nsuspects (map, reduce, filter, each…) as well as some common patterns\nfor asynchronous control flow (parallel, series, waterfall…). All these\nfunctions assume you follow the node.js convention of providing a single\ncallback as the last argument of your async function.\n\n\n## Quick Examples\n\n```javascript\nasync.map([\'file1\',\'file2\',\'file3\'], fs.stat, function(err, results){\n    // results is now an array of stats for each file\n});\n\nasync.filter([\'file1\',\'file2\',\'file3\'], fs.exists, function(results){\n    // results now equals an array of the existing files\n});\n\nasync.parallel([\n    function(){ ... },\n    function(){ ... }\n], callback);\n\nasync.series([\n    function(){ ... },\n    function(){ ... }\n]);\n```\n\nThere are many more functions available so take a look at the docs below for a\nfull list. This module aims to be comprehensive, so if you feel anything is\nmissing please create a GitHub issue for it.\n\n## Common Pitfalls\n\n### Binding a context to an iterator\n\nThis section is really about bind, not about async. If you are wondering how to\nmake async execute your iterators in a given context, or are confused as to why\na method of another library isn\'t working as an iterator, study this example:\n\n```js\n// Here is a simple object with an (unnecessarily roundabout) squaring method\nvar AsyncSquaringLibrary = {\n  squareExponent: 2,\n  square: function(number, callback){ \n    var result = Math.pow(number, this.squareExponent);\n    setTimeout(function(){\n      callback(null, result);\n    }, 200);\n  }\n};\n\nasync.map([1, 2, 3], AsyncSquaringLibrary.square, function(err, result){\n  // result is [NaN, NaN, NaN]\n  // This fails because the `this.squareExponent` expression in the square\n  // function is not evaluated in the context of AsyncSquaringLibrary, and is\n  // therefore undefined.\n});\n\nasync.map([1, 2, 3], AsyncSquaringLibrary.square.bind(AsyncSquaringLibrary), function(err, result){\n  // result is [1, 4, 9]\n  // With the help of bind we can attach a context to the iterator before\n  // passing it to async. Now the square function will be executed in its \n  // \'home\' AsyncSquaringLibrary context and the value of `this.squareExponent`\n  // will be as expected.\n});\n```\n\n## Download\n\nThe source is available for download from\n[GitHub](http://github.com/caolan/async).\nAlternatively, you can install using Node Package Manager (npm):\n\n    npm install async\n\n__Development:__ [async.js](https://github.com/caolan/async/raw/master/lib/async.js) - 29.6kb Uncompressed\n\n## In the Browser\n\nSo far it\'s been tested in IE6, IE7, IE8, FF3.6 and Chrome 5. Usage:\n\n```html\n<script type="text/javascript" src="async.js"></script>\n<script type="text/javascript">\n\n    async.map(data, asyncProcess, function(err, results){\n        alert(results);\n    });\n\n</script>\n```\n\n## Documentation\n\n### Collections\n\n* [each](#each)\n* [eachSeries](#eachSeries)\n* [eachLimit](#eachLimit)\n* [map](#map)\n* [mapSeries](#mapSeries)\n* [mapLimit](#mapLimit)\n* [filter](#filter)\n* [filterSeries](#filterSeries)\n* [reject](#reject)\n* [rejectSeries](#rejectSeries)\n* [reduce](#reduce)\n* [reduceRight](#reduceRight)\n* [detect](#detect)\n* [detectSeries](#detectSeries)\n* [sortBy](#sortBy)\n* [some](#some)\n* [every](#every)\n* [concat](#concat)\n* [concatSeries](#concatSeries)\n\n### Control Flow\n\n* [series](#series)\n* [parallel](#parallel)\n* [parallelLimit](#parallellimittasks-limit-callback)\n* [whilst](#whilst)\n* [doWhilst](#doWhilst)\n* [until](#until)\n* [doUntil](#doUntil)\n* [forever](#forever)\n* [waterfall](#waterfall)\n* [compose](#compose)\n* [applyEach](#applyEach)\n* [applyEachSeries](#applyEachSeries)\n* [queue](#queue)\n* [cargo](#cargo)\n* [auto](#auto)\n* [iterator](#iterator)\n* [apply](#apply)\n* [nextTick](#nextTick)\n* [times](#times)\n* [timesSeries](#timesSeries)\n\n### Utils\n\n* [memoize](#memoize)\n* [unmemoize](#unmemoize)\n* [log](#log)\n* [dir](#dir)\n* [noConflict](#noConflict)\n\n\n## Collections\n\n<a name="forEach" />\n<a name="each" />\n### each(arr, iterator, callback)\n\nApplies an iterator function to each item in an array, in parallel.\nThe iterator is called with an item from the list and a callback for when it\nhas finished. If the iterator passes an error to this callback, the main\ncallback for the each function is immediately called with the error.\n\nNote, that since this function applies the iterator to each item in parallel\nthere is no guarantee that the iterator functions will complete in order.\n\n__Arguments__\n\n* arr - An array to iterate over.\n* iterator(item, callback) - A function to apply to each item in the array.\n  The iterator is passed a callback(err) which must be called once it has \n  completed. If no error has occured, the callback should be run without \n  arguments or with an explicit null argument.\n* callback(err) - A callback which is called after all the iterator functions\n  have finished, or an error has occurred.\n\n__Example__\n\n```js\n// assuming openFiles is an array of file names and saveFile is a function\n// to save the modified contents of that file:\n\nasync.each(openFiles, saveFile, function(err){\n    // if any of the saves produced an error, err would equal that error\n});\n```\n\n---------------------------------------\n\n<a name="forEachSeries" />\n<a name="eachSeries" />\n### eachSeries(arr, iterator, callback)\n\nThe same as each only the iterator is applied to each item in the array in\nseries. The next iterator is only called once the current one has completed\nprocessing. This means the iterator functions will complete in order.\n\n\n---------------------------------------\n\n<a name="forEachLimit" />\n<a name="eachLimit" />\n### eachLimit(arr, limit, iterator, callback)\n\nThe same as each only no more than "limit" iterators will be simultaneously \nrunning at any time.\n\nNote that the items are not processed in batches, so there is no guarantee that\n the first "limit" iterator functions will complete before any others are \nstarted.\n\n__Arguments__\n\n* arr - An array to iterate over.\n* limit - The maximum number of iterators to run at any time.\n* iterator(item, callback) - A function to apply to each item in the array.\n  The iterator is passed a callback(err) which must be called once it has \n  completed. If no error has occured, the callback should be run without \n  arguments or with an explicit null argument.\n* callback(err) - A callback which is called after all the iterator functions\n  have finished, or an error has occurred.\n\n__Example__\n\n```js\n// Assume documents is an array of JSON objects and requestApi is a\n// function that interacts with a rate-limited REST api.\n\nasync.eachLimit(documents, 20, requestApi, function(err){\n    // if any of the saves produced an error, err would equal that error\n});\n```\n\n---------------------------------------\n\n<a name="map" />\n### map(arr, iterator, callback)\n\nProduces a new array of values by mapping each value in the given array through\nthe iterator function. The iterator is called with an item from the array and a\ncallback for when it has finished processing. The callback takes 2 arguments, \nan error and the transformed item from the array. If the iterator passes an\nerror to this callback, the main callback for the map function is immediately\ncalled with the error.\n\nNote, that since this function applies the iterator to each item in parallel\nthere is no guarantee that the iterator functions will complete in order, however\nthe results array will be in the same order as the original array.\n\n__Arguments__\n\n* arr - An array to iterate over.\n* iterator(item, callback) - A function to apply to each item in the array.\n  The iterator is passed a callback(err, transformed) which must be called once \n  it has completed with an error (which can be null) and a transformed item.\n* callback(err, results) - A callback which is called after all the iterator\n  functions have finished, or an error has occurred. Results is an array of the\n  transformed items from the original array.\n\n__Example__\n\n```js\nasync.map([\'file1\',\'file2\',\'file3\'], fs.stat, function(err, results){\n    // results is now an array of stats for each file\n});\n```\n\n---------------------------------------\n\n<a name="mapSeries" />\n### mapSeries(arr, iterator, callback)\n\nThe same as map only the iterator is applied to each item in the array in\nseries. The next iterator is only called once the current one has completed\nprocessing. The results array will be in the same order as the original.\n\n\n---------------------------------------\n\n<a name="mapLimit" />\n### mapLimit(arr, limit, iterator, callback)\n\nThe same as map only no more than "limit" iterators will be simultaneously \nrunning at any time.\n\nNote that the items are not processed in batches, so there is no guarantee that\n the first "limit" iterator functions will complete before any others are \nstarted.\n\n__Arguments__\n\n* arr - An array to iterate over.\n* limit - The maximum number of iterators to run at any time.\n* iterator(item, callback) - A function to apply to each item in the array.\n  The iterator is passed a callback(err, transformed) which must be called once \n  it has completed with an error (which can be null) and a transformed item.\n* callback(err, results) - A callback which is called after all the iterator\n  functions have finished, or an error has occurred. Results is an array of the\n  transformed items from the original array.\n\n__Example__\n\n```js\nasync.mapLimit([\'file1\',\'file2\',\'file3\'], 1, fs.stat, function(err, results){\n    // results is now an array of stats for each file\n});\n```\n\n---------------------------------------\n\n<a name="filter" />\n### filter(arr, iterator, callback)\n\n__Alias:__ select\n\nReturns a new array of all the values which pass an async truth test.\n_The callback for each iterator call only accepts a single argument of true or\nfalse, it does not accept an error argument first!_ This is in-line with the\nway node libraries work with truth tests like fs.exists. This operation is\nperformed in parallel, but the results array will be in the same order as the\noriginal.\n\n__Arguments__\n\n* arr - An array to iterate over.\n* iterator(item, callback) - A truth test to apply to each item in the array.\n  The iterator is passed a callback(truthValue) which must be called with a \n  boolean argument once it has completed.\n* callback(results) - A callback which is called after all the iterator\n  functions have finished.\n\n__Example__\n\n```js\nasync.filter([\'file1\',\'file2\',\'file3\'], fs.exists, function(results){\n    // results now equals an array of the existing files\n});\n```\n\n---------------------------------------\n\n<a name="filterSeries" />\n### filterSeries(arr, iterator, callback)\n\n__alias:__ selectSeries\n\nThe same as filter only the iterator is applied to each item in the array in\nseries. The next iterator is only called once the current one has completed\nprocessing. The results array will be in the same order as the original.\n\n---------------------------------------\n\n<a name="reject" />\n### reject(arr, iterator, callback)\n\nThe opposite of filter. Removes values that pass an async truth test.\n\n---------------------------------------\n\n<a name="rejectSeries" />\n### rejectSeries(arr, iterator, callback)\n\nThe same as reject, only the iterator is applied to each item in the array\nin series.\n\n\n---------------------------------------\n\n<a name="reduce" />\n### reduce(arr, memo, iterator, callback)\n\n__aliases:__ inject, foldl\n\nReduces a list of values into a single value using an async iterator to return\neach successive step. Memo is the initial state of the reduction. This\nfunction only operates in series. For performance reasons, it may make sense to\nsplit a call to this function into a parallel map, then use the normal\nArray.prototype.reduce on the results. This function is for situations where\neach step in the reduction needs to be async, if you can get the data before\nreducing it then it\'s probably a good idea to do so.\n\n__Arguments__\n\n* arr - An array to iterate over.\n* memo - The initial state of the reduction.\n* iterator(memo, item, callback) - A function applied to each item in the\n  array to produce the next step in the reduction. The iterator is passed a\n  callback(err, reduction) which accepts an optional error as its first \n  argument, and the state of the reduction as the second. If an error is \n  passed to the callback, the reduction is stopped and the main callback is \n  immediately called with the error.\n* callback(err, result) - A callback which is called after all the iterator\n  functions have finished. Result is the reduced value.\n\n__Example__\n\n```js\nasync.reduce([1,2,3], 0, function(memo, item, callback){\n    // pointless async:\n    process.nextTick(function(){\n        callback(null, memo + item)\n    });\n}, function(err, result){\n    // result is now equal to the last value of memo, which is 6\n});\n```\n\n---------------------------------------\n\n<a name="reduceRight" />\n### reduceRight(arr, memo, iterator, callback)\n\n__Alias:__ foldr\n\nSame as reduce, only operates on the items in the array in reverse order.\n\n\n---------------------------------------\n\n<a name="detect" />\n### detect(arr, iterator, callback)\n\nReturns the first value in a list that passes an async truth test. The\niterator is applied in parallel, meaning the first iterator to return true will\nfire the detect callback with that result. That means the result might not be\nthe first item in the original array (in terms of order) that passes the test.\n\nIf order within the original array is important then look at detectSeries.\n\n__Arguments__\n\n* arr - An array to iterate over.\n* iterator(item, callback) - A truth test to apply to each item in the array.\n  The iterator is passed a callback(truthValue) which must be called with a \n  boolean argument once it has completed.\n* callback(result) - A callback which is called as soon as any iterator returns\n  true, or after all the iterator functions have finished. Result will be\n  the first item in the array that passes the truth test (iterator) or the\n  value undefined if none passed.\n\n__Example__\n\n```js\nasync.detect([\'file1\',\'file2\',\'file3\'], fs.exists, function(result){\n    // result now equals the first file in the list that exists\n});\n```\n\n---------------------------------------\n\n<a name="detectSeries" />\n### detectSeries(arr, iterator, callback)\n\nThe same as detect, only the iterator is applied to each item in the array\nin series. This means the result is always the first in the original array (in\nterms of array order) that passes the truth test.\n\n\n---------------------------------------\n\n<a name="sortBy" />\n### sortBy(arr, iterator, callback)\n\nSorts a list by the results of running each value through an async iterator.\n\n__Arguments__\n\n* arr - An array to iterate over.\n* iterator(item, callback) - A function to apply to each item in the array.\n  The iterator is passed a callback(err, sortValue) which must be called once it\n  has completed with an error (which can be null) and a value to use as the sort\n  criteria.\n* callback(err, results) - A callback which is called after all the iterator\n  functions have finished, or an error has occurred. Results is the items from\n  the original array sorted by the values returned by the iterator calls.\n\n__Example__\n\n```js\nasync.sortBy([\'file1\',\'file2\',\'file3\'], function(file, callback){\n    fs.stat(file, function(err, stats){\n        callback(err, stats.mtime);\n    });\n}, function(err, results){\n    // results is now the original array of files sorted by\n    // modified date\n});\n```\n\n---------------------------------------\n\n<a name="some" />\n### some(arr, iterator, callback)\n\n__Alias:__ any\n\nReturns true if at least one element in the array satisfies an async test.\n_The callback for each iterator call only accepts a single argument of true or\nfalse, it does not accept an error argument first!_ This is in-line with the\nway node libraries work with truth tests like fs.exists. Once any iterator\ncall returns true, the main callback is immediately called.\n\n__Arguments__\n\n* arr - An array to iterate over.\n* iterator(item, callback) - A truth test to apply to each item in the array.\n  The iterator is passed a callback(truthValue) which must be called with a \n  boolean argument once it has completed.\n* callback(result) - A callback which is called as soon as any iterator returns\n  true, or after all the iterator functions have finished. Result will be\n  either true or false depending on the values of the async tests.\n\n__Example__\n\n```js\nasync.some([\'file1\',\'file2\',\'file3\'], fs.exists, function(result){\n    // if result is true then at least one of the files exists\n});\n```\n\n---------------------------------------\n\n<a name="every" />\n### every(arr, iterator, callback)\n\n__Alias:__ all\n\nReturns true if every element in the array satisfies an async test.\n_The callback for each iterator call only accepts a single argument of true or\nfalse, it does not accept an error argument first!_ This is in-line with the\nway node libraries work with truth tests like fs.exists.\n\n__Arguments__\n\n* arr - An array to iterate over.\n* iterator(item, callback) - A truth test to apply to each item in the array.\n  The iterator is passed a callback(truthValue) which must be called with a \n  boolean argument once it has completed.\n* callback(result) - A callback which is called after all the iterator\n  functions have finished. Result will be either true or false depending on\n  the values of the async tests.\n\n__Example__\n\n```js\nasync.every([\'file1\',\'file2\',\'file3\'], fs.exists, function(result){\n    // if result is true then every file exists\n});\n```\n\n---------------------------------------\n\n<a name="concat" />\n### concat(arr, iterator, callback)\n\nApplies an iterator to each item in a list, concatenating the results. Returns the\nconcatenated list. The iterators are called in parallel, and the results are\nconcatenated as they return. There is no guarantee that the results array will\nbe returned in the original order of the arguments passed to the iterator function.\n\n__Arguments__\n\n* arr - An array to iterate over\n* iterator(item, callback) - A function to apply to each item in the array.\n  The iterator is passed a callback(err, results) which must be called once it \n  has completed with an error (which can be null) and an array of results.\n* callback(err, results) - A callback which is called after all the iterator\n  functions have finished, or an error has occurred. Results is an array containing\n  the concatenated results of the iterator function.\n\n__Example__\n\n```js\nasync.concat([\'dir1\',\'dir2\',\'dir3\'], fs.readdir, function(err, files){\n    // files is now a list of filenames that exist in the 3 directories\n});\n```\n\n---------------------------------------\n\n<a name="concatSeries" />\n### concatSeries(arr, iterator, callback)\n\nSame as async.concat, but executes in series instead of parallel.\n\n\n## Control Flow\n\n<a name="series" />\n### series(tasks, [callback])\n\nRun an array of functions in series, each one running once the previous\nfunction has completed. If any functions in the series pass an error to its\ncallback, no more functions are run and the callback for the series is\nimmediately called with the value of the error. Once the tasks have completed,\nthe results are passed to the final callback as an array.\n\nIt is also possible to use an object instead of an array. Each property will be\nrun as a function and the results will be passed to the final callback as an object\ninstead of an array. This can be a more readable way of handling results from\nasync.series.\n\n\n__Arguments__\n\n* tasks - An array or object containing functions to run, each function is passed\n  a callback(err, result) it must call on completion with an error (which can\n  be null) and an optional result value.\n* callback(err, results) - An optional callback to run once all the functions\n  have completed. This function gets a results array (or object) containing all \n  the result arguments passed to the task callbacks.\n\n__Example__\n\n```js\nasync.series([\n    function(callback){\n        // do some stuff ...\n        callback(null, \'one\');\n    },\n    function(callback){\n        // do some more stuff ...\n        callback(null, \'two\');\n    }\n],\n// optional callback\nfunction(err, results){\n    // results is now equal to [\'one\', \'two\']\n});\n\n\n// an example using an object instead of an array\nasync.series({\n    one: function(callback){\n        setTimeout(function(){\n            callback(null, 1);\n        }, 200);\n    },\n    two: function(callback){\n        setTimeout(function(){\n            callback(null, 2);\n        }, 100);\n    }\n},\nfunction(err, results) {\n    // results is now equal to: {one: 1, two: 2}\n});\n```\n\n---------------------------------------\n\n<a name="parallel" />\n### parallel(tasks, [callback])\n\nRun an array of functions in parallel, without waiting until the previous\nfunction has completed. If any of the functions pass an error to its\ncallback, the main callback is immediately called with the value of the error.\nOnce the tasks have completed, the results are passed to the final callback as an\narray.\n\nIt is also possible to use an object instead of an array. Each property will be\nrun as a function and the results will be passed to the final callback as an object\ninstead of an array. This can be a more readable way of handling results from\nasync.parallel.\n\n\n__Arguments__\n\n* tasks - An array or object containing functions to run, each function is passed \n  a callback(err, result) it must call on completion with an error (which can\n  be null) and an optional result value.\n* callback(err, results) - An optional callback to run once all the functions\n  have completed. This function gets a results array (or object) containing all \n  the result arguments passed to the task callbacks.\n\n__Example__\n\n```js\nasync.parallel([\n    function(callback){\n        setTimeout(function(){\n            callback(null, \'one\');\n        }, 200);\n    },\n    function(callback){\n        setTimeout(function(){\n            callback(null, \'two\');\n        }, 100);\n    }\n],\n// optional callback\nfunction(err, results){\n    // the results array will equal [\'one\',\'two\'] even though\n    // the second function had a shorter timeout.\n});\n\n\n// an example using an object instead of an array\nasync.parallel({\n    one: function(callback){\n        setTimeout(function(){\n            callback(null, 1);\n        }, 200);\n    },\n    two: function(callback){\n        setTimeout(function(){\n            callback(null, 2);\n        }, 100);\n    }\n},\nfunction(err, results) {\n    // results is now equals to: {one: 1, two: 2}\n});\n```\n\n---------------------------------------\n\n<a name="parallel" />\n### parallelLimit(tasks, limit, [callback])\n\nThe same as parallel only the tasks are executed in parallel with a maximum of "limit" \ntasks executing at any time.\n\nNote that the tasks are not executed in batches, so there is no guarantee that \nthe first "limit" tasks will complete before any others are started.\n\n__Arguments__\n\n* tasks - An array or object containing functions to run, each function is passed \n  a callback(err, result) it must call on completion with an error (which can\n  be null) and an optional result value.\n* limit - The maximum number of tasks to run at any time.\n* callback(err, results) - An optional callback to run once all the functions\n  have completed. This function gets a results array (or object) containing all \n  the result arguments passed to the task callbacks.\n\n---------------------------------------\n\n<a name="whilst" />\n### whilst(test, fn, callback)\n\nRepeatedly call fn, while test returns true. Calls the callback when stopped,\nor an error occurs.\n\n__Arguments__\n\n* test() - synchronous truth test to perform before each execution of fn.\n* fn(callback) - A function to call each time the test passes. The function is\n  passed a callback(err) which must be called once it has completed with an \n  optional error argument.\n* callback(err) - A callback which is called after the test fails and repeated\n  execution of fn has stopped.\n\n__Example__\n\n```js\nvar count = 0;\n\nasync.whilst(\n    function () { return count < 5; },\n    function (callback) {\n        count++;\n        setTimeout(callback, 1000);\n    },\n    function (err) {\n        // 5 seconds have passed\n    }\n);\n```\n\n---------------------------------------\n\n<a name="doWhilst" />\n### doWhilst(fn, test, callback)\n\nThe post check version of whilst. To reflect the difference in the order of operations `test` and `fn` arguments are switched. `doWhilst` is to `whilst` as `do while` is to `while` in plain JavaScript.\n\n---------------------------------------\n\n<a name="until" />\n### until(test, fn, callback)\n\nRepeatedly call fn, until test returns true. Calls the callback when stopped,\nor an error occurs.\n\nThe inverse of async.whilst.\n\n---------------------------------------\n\n<a name="doUntil" />\n### doUntil(fn, test, callback)\n\nLike doWhilst except the test is inverted. Note the argument ordering differs from `until`.\n\n---------------------------------------\n\n<a name="forever" />\n### forever(fn, callback)\n\nCalls the asynchronous function \'fn\' repeatedly, in series, indefinitely.\nIf an error is passed to fn\'s callback then \'callback\' is called with the\nerror, otherwise it will never be called.\n\n---------------------------------------\n\n<a name="waterfall" />\n### waterfall(tasks, [callback])\n\nRuns an array of functions in series, each passing their results to the next in\nthe array. However, if any of the functions pass an error to the callback, the\nnext function is not executed and the main callback is immediately called with\nthe error.\n\n__Arguments__\n\n* tasks - An array of functions to run, each function is passed a \n  callback(err, result1, result2, ...) it must call on completion. The first\n  argument is an error (which can be null) and any further arguments will be \n  passed as arguments in order to the next task.\n* callback(err, [results]) - An optional callback to run once all the functions\n  have completed. This will be passed the results of the last task\'s callback.\n\n\n\n__Example__\n\n```js\nasync.waterfall([\n    function(callback){\n        callback(null, \'one\', \'two\');\n    },\n    function(arg1, arg2, callback){\n        callback(null, \'three\');\n    },\n    function(arg1, callback){\n        // arg1 now equals \'three\'\n        callback(null, \'done\');\n    }\n], function (err, result) {\n   // result now equals \'done\'    \n});\n```\n\n---------------------------------------\n<a name="compose" />\n### compose(fn1, fn2...)\n\nCreates a function which is a composition of the passed asynchronous\nfunctions. Each function consumes the return value of the function that\nfollows. Composing functions f(), g() and h() would produce the result of\nf(g(h())), only this version uses callbacks to obtain the return values.\n\nEach function is executed with the `this` binding of the composed function.\n\n__Arguments__\n\n* functions... - the asynchronous functions to compose\n\n\n__Example__\n\n```js\nfunction add1(n, callback) {\n    setTimeout(function () {\n        callback(null, n + 1);\n    }, 10);\n}\n\nfunction mul3(n, callback) {\n    setTimeout(function () {\n        callback(null, n * 3);\n    }, 10);\n}\n\nvar add1mul3 = async.compose(mul3, add1);\n\nadd1mul3(4, function (err, result) {\n   // result now equals 15\n});\n```\n\n---------------------------------------\n<a name="applyEach" />\n### applyEach(fns, args..., callback)\n\nApplies the provided arguments to each function in the array, calling the\ncallback after all functions have completed. If you only provide the first\nargument then it will return a function which lets you pass in the\narguments as if it were a single function call.\n\n__Arguments__\n\n* fns - the asynchronous functions to all call with the same arguments\n* args... - any number of separate arguments to pass to the function\n* callback - the final argument should be the callback, called when all\n  functions have completed processing\n\n\n__Example__\n\n```js\nasync.applyEach([enableSearch, updateSchema], \'bucket\', callback);\n\n// partial application example:\nasync.each(\n    buckets,\n    async.applyEach([enableSearch, updateSchema]),\n    callback\n);\n```\n\n---------------------------------------\n\n<a name="applyEachSeries" />\n### applyEachSeries(arr, iterator, callback)\n\nThe same as applyEach only the functions are applied in series.\n\n---------------------------------------\n\n<a name="queue" />\n### queue(worker, concurrency)\n\nCreates a queue object with the specified concurrency. Tasks added to the\nqueue will be processed in parallel (up to the concurrency limit). If all\nworkers are in progress, the task is queued until one is available. Once\na worker has completed a task, the task\'s callback is called.\n\n__Arguments__\n\n* worker(task, callback) - An asynchronous function for processing a queued\n  task, which must call its callback(err) argument when finished, with an \n  optional error as an argument.\n* concurrency - An integer for determining how many worker functions should be\n  run in parallel.\n\n__Queue objects__\n\nThe queue object returned by this function has the following properties and\nmethods:\n\n* length() - a function returning the number of items waiting to be processed.\n* concurrency - an integer for determining how many worker functions should be\n  run in parallel. This property can be changed after a queue is created to\n  alter the concurrency on-the-fly.\n* push(task, [callback]) - add a new task to the queue, the callback is called\n  once the worker has finished processing the task.\n  instead of a single task, an array of tasks can be submitted. the respective callback is used for every task in the list.\n* unshift(task, [callback]) - add a new task to the front of the queue.\n* saturated - a callback that is called when the queue length hits the concurrency and further tasks will be queued\n* empty - a callback that is called when the last item from the queue is given to a worker\n* drain - a callback that is called when the last item from the queue has returned from the worker\n\n__Example__\n\n```js\n// create a queue object with concurrency 2\n\nvar q = async.queue(function (task, callback) {\n    console.log(\'hello \' + task.name);\n    callback();\n}, 2);\n\n\n// assign a callback\nq.drain = function() {\n    console.log(\'all items have been processed\');\n}\n\n// add some items to the queue\n\nq.push({name: \'foo\'}, function (err) {\n    console.log(\'finished processing foo\');\n});\nq.push({name: \'bar\'}, function (err) {\n    console.log(\'finished processing bar\');\n});\n\n// add some items to the queue (batch-wise)\n\nq.push([{name: \'baz\'},{name: \'bay\'},{name: \'bax\'}], function (err) {\n    console.log(\'finished processing bar\');\n});\n\n// add some items to the front of the queue\n\nq.unshift({name: \'bar\'}, function (err) {\n    console.log(\'finished processing bar\');\n});\n```\n\n---------------------------------------\n\n<a name="cargo" />\n### cargo(worker, [payload])\n\nCreates a cargo object with the specified payload. Tasks added to the\ncargo will be processed altogether (up to the payload limit). If the\nworker is in progress, the task is queued until it is available. Once\nthe worker has completed some tasks, each callback of those tasks is called.\n\n__Arguments__\n\n* worker(tasks, callback) - An asynchronous function for processing an array of\n  queued tasks, which must call its callback(err) argument when finished, with \n  an optional error as an argument.\n* payload - An optional integer for determining how many tasks should be\n  processed per round; if omitted, the default is unlimited.\n\n__Cargo objects__\n\nThe cargo object returned by this function has the following properties and\nmethods:\n\n* length() - a function returning the number of items waiting to be processed.\n* payload - an integer for determining how many tasks should be\n  process per round. This property can be changed after a cargo is created to\n  alter the payload on-the-fly.\n* push(task, [callback]) - add a new task to the queue, the callback is called\n  once the worker has finished processing the task.\n  instead of a single task, an array of tasks can be submitted. the respective callback is used for every task in the list.\n* saturated - a callback that is called when the queue length hits the concurrency and further tasks will be queued\n* empty - a callback that is called when the last item from the queue is given to a worker\n* drain - a callback that is called when the last item from the queue has returned from the worker\n\n__Example__\n\n```js\n// create a cargo object with payload 2\n\nvar cargo = async.cargo(function (tasks, callback) {\n    for(var i=0; i<tasks.length; i++){\n      console.log(\'hello \' + tasks[i].name);\n    }\n    callback();\n}, 2);\n\n\n// add some items\n\ncargo.push({name: \'foo\'}, function (err) {\n    console.log(\'finished processing foo\');\n});\ncargo.push({name: \'bar\'}, function (err) {\n    console.log(\'finished processing bar\');\n});\ncargo.push({name: \'baz\'}, function (err) {\n    console.log(\'finished processing baz\');\n});\n```\n\n---------------------------------------\n\n<a name="auto" />\n### auto(tasks, [callback])\n\nDetermines the best order for running functions based on their requirements.\nEach function can optionally depend on other functions being completed first,\nand each function is run as soon as its requirements are satisfied. If any of\nthe functions pass an error to their callback, that function will not complete\n(so any other functions depending on it will not run) and the main callback\nwill be called immediately with the error. Functions also receive an object\ncontaining the results of functions which have completed so far.\n\nNote, all functions are called with a results object as a second argument, \nso it is unsafe to pass functions in the tasks object which cannot handle the\nextra argument. For example, this snippet of code:\n\n```js\nasync.auto({\n  readData: async.apply(fs.readFile, \'data.txt\', \'utf-8\')\n}, callback);\n```\n\nwill have the effect of calling readFile with the results object as the last\nargument, which will fail:\n\n```js\nfs.readFile(\'data.txt\', \'utf-8\', cb, {});\n```\n\nInstead, wrap the call to readFile in a function which does not forward the \nresults object:\n\n```js\nasync.auto({\n  readData: function(cb, results){\n    fs.readFile(\'data.txt\', \'utf-8\', cb);\n  }\n}, callback);\n```\n\n__Arguments__\n\n* tasks - An object literal containing named functions or an array of\n  requirements, with the function itself the last item in the array. The key\n  used for each function or array is used when specifying requirements. The \n  function receives two arguments: (1) a callback(err, result) which must be \n  called when finished, passing an error (which can be null) and the result of \n  the function\'s execution, and (2) a results object, containing the results of\n  the previously executed functions.\n* callback(err, results) - An optional callback which is called when all the\n  tasks have been completed. The callback will receive an error as an argument\n  if any tasks pass an error to their callback. Results will always be passed\n\tbut if an error occurred, no other tasks will be performed, and the results\n\tobject will only contain partial results.\n  \n\n__Example__\n\n```js\nasync.auto({\n    get_data: function(callback){\n        // async code to get some data\n    },\n    make_folder: function(callback){\n        // async code to create a directory to store a file in\n        // this is run at the same time as getting the data\n    },\n    write_file: [\'get_data\', \'make_folder\', function(callback){\n        // once there is some data and the directory exists,\n        // write the data to a file in the directory\n        callback(null, filename);\n    }],\n    email_link: [\'write_file\', function(callback, results){\n        // once the file is written let\'s email a link to it...\n        // results.write_file contains the filename returned by write_file.\n    }]\n});\n```\n\nThis is a fairly trivial example, but to do this using the basic parallel and\nseries functions would look like this:\n\n```js\nasync.parallel([\n    function(callback){\n        // async code to get some data\n    },\n    function(callback){\n        // async code to create a directory to store a file in\n        // this is run at the same time as getting the data\n    }\n],\nfunction(err, results){\n    async.series([\n        function(callback){\n            // once there is some data and the directory exists,\n            // write the data to a file in the directory\n        },\n        function(callback){\n            // once the file is written let\'s email a link to it...\n        }\n    ]);\n});\n```\n\nFor a complicated series of async tasks using the auto function makes adding\nnew tasks much easier and makes the code more readable.\n\n\n---------------------------------------\n\n<a name="iterator" />\n### iterator(tasks)\n\nCreates an iterator function which calls the next function in the array,\nreturning a continuation to call the next one after that. It\'s also possible to\n\'peek\' the next iterator by doing iterator.next().\n\nThis function is used internally by the async module but can be useful when\nyou want to manually control the flow of functions in series.\n\n__Arguments__\n\n* tasks - An array of functions to run.\n\n__Example__\n\n```js\nvar iterator = async.iterator([\n    function(){ sys.p(\'one\'); },\n    function(){ sys.p(\'two\'); },\n    function(){ sys.p(\'three\'); }\n]);\n\nnode> var iterator2 = iterator();\n\'one\'\nnode> var iterator3 = iterator2();\n\'two\'\nnode> iterator3();\n\'three\'\nnode> var nextfn = iterator2.next();\nnode> nextfn();\n\'three\'\n```\n\n---------------------------------------\n\n<a name="apply" />\n### apply(function, arguments..)\n\nCreates a continuation function with some arguments already applied, a useful\nshorthand when combined with other control flow functions. Any arguments\npassed to the returned function are added to the arguments originally passed\nto apply.\n\n__Arguments__\n\n* function - The function you want to eventually apply all arguments to.\n* arguments... - Any number of arguments to automatically apply when the\n  continuation is called.\n\n__Example__\n\n```js\n// using apply\n\nasync.parallel([\n    async.apply(fs.writeFile, \'testfile1\', \'test1\'),\n    async.apply(fs.writeFile, \'testfile2\', \'test2\'),\n]);\n\n\n// the same process without using apply\n\nasync.parallel([\n    function(callback){\n        fs.writeFile(\'testfile1\', \'test1\', callback);\n    },\n    function(callback){\n        fs.writeFile(\'testfile2\', \'test2\', callback);\n    }\n]);\n```\n\nIt\'s possible to pass any number of additional arguments when calling the\ncontinuation:\n\n```js\nnode> var fn = async.apply(sys.puts, \'one\');\nnode> fn(\'two\', \'three\');\none\ntwo\nthree\n```\n\n---------------------------------------\n\n<a name="nextTick" />\n### nextTick(callback)\n\nCalls the callback on a later loop around the event loop. In node.js this just\ncalls process.nextTick, in the browser it falls back to setImmediate(callback)\nif available, otherwise setTimeout(callback, 0), which means other higher priority\nevents may precede the execution of the callback.\n\nThis is used internally for browser-compatibility purposes.\n\n__Arguments__\n\n* callback - The function to call on a later loop around the event loop.\n\n__Example__\n\n```js\nvar call_order = [];\nasync.nextTick(function(){\n    call_order.push(\'two\');\n    // call_order now equals [\'one\',\'two\']\n});\ncall_order.push(\'one\')\n```\n\n<a name="times" />\n### times(n, callback)\n\nCalls the callback n times and accumulates results in the same manner\nyou would use with async.map.\n\n__Arguments__\n\n* n - The number of times to run the function.\n* callback - The function to call n times.\n\n__Example__\n\n```js\n// Pretend this is some complicated async factory\nvar createUser = function(id, callback) {\n  callback(null, {\n    id: \'user\' + id\n  })\n}\n// generate 5 users\nasync.times(5, function(n, next){\n    createUser(n, function(err, user) {\n      next(err, user)\n    })\n}, function(err, users) {\n  // we should now have 5 users\n});\n```\n\n<a name="timesSeries" />\n### timesSeries(n, callback)\n\nThe same as times only the iterator is applied to each item in the array in\nseries. The next iterator is only called once the current one has completed\nprocessing. The results array will be in the same order as the original.\n\n\n## Utils\n\n<a name="memoize" />\n### memoize(fn, [hasher])\n\nCaches the results of an async function. When creating a hash to store function\nresults against, the callback is omitted from the hash and an optional hash\nfunction can be used.\n\nThe cache of results is exposed as the `memo` property of the function returned\nby `memoize`.\n\n__Arguments__\n\n* fn - the function you to proxy and cache results from.\n* hasher - an optional function for generating a custom hash for storing\n  results, it has all the arguments applied to it apart from the callback, and\n  must be synchronous.\n\n__Example__\n\n```js\nvar slow_fn = function (name, callback) {\n    // do something\n    callback(null, result);\n};\nvar fn = async.memoize(slow_fn);\n\n// fn can now be used as if it were slow_fn\nfn(\'some name\', function () {\n    // callback\n});\n```\n\n<a name="unmemoize" />\n### unmemoize(fn)\n\nUndoes a memoized function, reverting it to the original, unmemoized\nform. Comes handy in tests.\n\n__Arguments__\n\n* fn - the memoized function\n\n<a name="log" />\n### log(function, arguments)\n\nLogs the result of an async function to the console. Only works in node.js or\nin browsers that support console.log and console.error (such as FF and Chrome).\nIf multiple arguments are returned from the async function, console.log is\ncalled on each argument in order.\n\n__Arguments__\n\n* function - The function you want to eventually apply all arguments to.\n* arguments... - Any number of arguments to apply to the function.\n\n__Example__\n\n```js\nvar hello = function(name, callback){\n    setTimeout(function(){\n        callback(null, \'hello \' + name);\n    }, 1000);\n};\n```\n```js\nnode> async.log(hello, \'world\');\n\'hello world\'\n```\n\n---------------------------------------\n\n<a name="dir" />\n### dir(function, arguments)\n\nLogs the result of an async function to the console using console.dir to\ndisplay the properties of the resulting object. Only works in node.js or\nin browsers that support console.dir and console.error (such as FF and Chrome).\nIf multiple arguments are returned from the async function, console.dir is\ncalled on each argument in order.\n\n__Arguments__\n\n* function - The function you want to eventually apply all arguments to.\n* arguments... - Any number of arguments to apply to the function.\n\n__Example__\n\n```js\nvar hello = function(name, callback){\n    setTimeout(function(){\n        callback(null, {hello: name});\n    }, 1000);\n};\n```\n```js\nnode> async.dir(hello, \'world\');\n{hello: \'world\'}\n```\n\n---------------------------------------\n\n<a name="noConflict" />\n### noConflict()\n\nChanges the value of async back to its original value, returning a reference to the\nasync object.\n',
1760 silly resolved     readmeFilename: 'README.md',
1760 silly resolved     homepage: 'https://github.com/caolan/async',
1760 silly resolved     _id: 'async@0.2.10',
1760 silly resolved     _from: 'async@~0.2.6' },
1760 silly resolved   { name: 'source-map',
1760 silly resolved     description: 'Generates and consumes source maps',
1760 silly resolved     version: '0.1.33',
1760 silly resolved     homepage: 'https://github.com/mozilla/source-map',
1760 silly resolved     author: { name: 'Nick Fitzgerald', email: 'nfitzgerald@mozilla.com' },
1760 silly resolved     contributors:
1760 silly resolved      [ [Object],
1760 silly resolved        [Object],
1760 silly resolved        [Object],
1760 silly resolved        [Object],
1760 silly resolved        [Object],
1760 silly resolved        [Object],
1760 silly resolved        [Object],
1760 silly resolved        [Object],
1760 silly resolved        [Object],
1760 silly resolved        [Object],
1760 silly resolved        [Object],
1760 silly resolved        [Object],
1760 silly resolved        [Object],
1760 silly resolved        [Object],
1760 silly resolved        [Object],
1760 silly resolved        [Object],
1760 silly resolved        [Object],
1760 silly resolved        [Object],
1760 silly resolved        [Object],
1760 silly resolved        [Object] ],
1760 silly resolved     repository: { type: 'git', url: 'http://github.com/mozilla/source-map.git' },
1760 silly resolved     directories: { lib: './lib' },
1760 silly resolved     main: './lib/source-map.js',
1760 silly resolved     engines: { node: '>=0.8.0' },
1760 silly resolved     licenses: [ [Object] ],
1760 silly resolved     dependencies: { amdefine: '>=0.0.4' },
1760 silly resolved     devDependencies: { dryice: '>=0.4.8' },
1760 silly resolved     scripts:
1760 silly resolved      { test: 'node test/run-tests.js',
1760 silly resolved        build: 'node Makefile.dryice.js' },
1760 silly resolved     readme: '# Source Map\n\nThis is a library to generate and consume the source map format\n[described here][format].\n\nThis library is written in the Asynchronous Module Definition format, and works\nin the following environments:\n\n* Modern Browsers supporting ECMAScript 5 (either after the build, or with an\n  AMD loader such as RequireJS)\n\n* Inside Firefox (as a JSM file, after the build)\n\n* With NodeJS versions 0.8.X and higher\n\n## Node\n\n    $ npm install source-map\n\n## Building from Source (for everywhere else)\n\nInstall Node and then run\n\n    $ git clone https://fitzgen@github.com/mozilla/source-map.git\n    $ cd source-map\n    $ npm link .\n\nNext, run\n\n    $ node Makefile.dryice.js\n\nThis should spew a bunch of stuff to stdout, and create the following files:\n\n* `dist/source-map.js` - The unminified browser version.\n\n* `dist/source-map.min.js` - The minified browser version.\n\n* `dist/SourceMap.jsm` - The JavaScript Module for inclusion in Firefox source.\n\n## Examples\n\n### Consuming a source map\n\n    var rawSourceMap = {\n      version: 3,\n      file: \'min.js\',\n      names: [\'bar\', \'baz\', \'n\'],\n      sources: [\'one.js\', \'two.js\'],\n      sourceRoot: \'http://example.com/www/js/\',\n      mappings: \'CAAC,IAAI,IAAM,SAAUA,GAClB,OAAOC,IAAID;CCDb,IAAI,IAAM,SAAUE,GAClB,OAAOA\'\n    };\n\n    var smc = new SourceMapConsumer(rawSourceMap);\n\n    console.log(smc.sources);\n    // [ \'http://example.com/www/js/one.js\',\n    //   \'http://example.com/www/js/two.js\' ]\n\n    console.log(smc.originalPositionFor({\n      line: 2,\n      column: 28\n    }));\n    // { source: \'http://example.com/www/js/two.js\',\n    //   line: 2,\n    //   column: 10,\n    //   name: \'n\' }\n\n    console.log(smc.generatedPositionFor({\n      source: \'http://example.com/www/js/two.js\',\n      line: 2,\n      column: 10\n    }));\n    // { line: 2, column: 28 }\n\n    smc.eachMapping(function (m) {\n      // ...\n    });\n\n### Generating a source map\n\nIn depth guide:\n[**Compiling to JavaScript, and Debugging with Source Maps**](https://hacks.mozilla.org/2013/05/compiling-to-javascript-and-debugging-with-source-maps/)\n\n#### With SourceNode (high level API)\n\n    function compile(ast) {\n      switch (ast.type) {\n      case \'BinaryExpression\':\n        return new SourceNode(\n          ast.location.line,\n          ast.location.column,\n          ast.location.source,\n          [compile(ast.left), " + ", compile(ast.right)]\n        );\n      case \'Literal\':\n        return new SourceNode(\n          ast.location.line,\n          ast.location.column,\n          ast.location.source,\n          String(ast.value)\n        );\n      // ...\n      default:\n        throw new Error("Bad AST");\n      }\n    }\n\n    var ast = parse("40 + 2", "add.js");\n    console.log(compile(ast).toStringWithSourceMap({\n      file: \'add.js\'\n    }));\n    // { code: \'40 + 2\',\n    //   map: [object SourceMapGenerator] }\n\n#### With SourceMapGenerator (low level API)\n\n    var map = new SourceMapGenerator({\n      file: "source-mapped.js"\n    });\n\n    map.addMapping({\n      generated: {\n        line: 10,\n        column: 35\n      },\n      source: "foo.js",\n      original: {\n        line: 33,\n        column: 2\n      },\n      name: "christopher"\n    });\n\n    console.log(map.toString());\n    // \'{"version":3,"file":"source-mapped.js","sources":["foo.js"],"names":["christopher"],"mappings":";;;;;;;;;mCAgCEA"}\'\n\n## API\n\nGet a reference to the module:\n\n    // NodeJS\n    var sourceMap = require(\'source-map\');\n\n    // Browser builds\n    var sourceMap = window.sourceMap;\n\n    // Inside Firefox\n    let sourceMap = {};\n    Components.utils.import(\'resource:///modules/devtools/SourceMap.jsm\', sourceMap);\n\n### SourceMapConsumer\n\nA SourceMapConsumer instance represents a parsed source map which we can query\nfor information about the original file positions by giving it a file position\nin the generated source.\n\n#### new SourceMapConsumer(rawSourceMap)\n\nThe only parameter is the raw source map (either as a string which can be\n`JSON.parse`\'d, or an object). According to the spec, source maps have the\nfollowing attributes:\n\n* `version`: Which version of the source map spec this map is following.\n\n* `sources`: An array of URLs to the original source files.\n\n* `names`: An array of identifiers which can be referrenced by individual\n  mappings.\n\n* `sourceRoot`: Optional. The URL root from which all sources are relative.\n\n* `sourcesContent`: Optional. An array of contents of the original source files.\n\n* `mappings`: A string of base64 VLQs which contain the actual mappings.\n\n* `file`: Optional. The generated filename this source map is associated with.\n\n#### SourceMapConsumer.prototype.originalPositionFor(generatedPosition)\n\nReturns the original source, line, and column information for the generated\nsource\'s line and column positions provided. The only argument is an object with\nthe following properties:\n\n* `line`: The line number in the generated source.\n\n* `column`: The column number in the generated source.\n\nand an object is returned with the following properties:\n\n* `source`: The original source file, or null if this information is not\n  available.\n\n* `line`: The line number in the original source, or null if this information is\n  not available.\n\n* `column`: The column number in the original source, or null or null if this\n  information is not available.\n\n* `name`: The original identifier, or null if this information is not available.\n\n#### SourceMapConsumer.prototype.generatedPositionFor(originalPosition)\n\nReturns the generated line and column information for the original source,\nline, and column positions provided. The only argument is an object with\nthe following properties:\n\n* `source`: The filename of the original source.\n\n* `line`: The line number in the original source.\n\n* `column`: The column number in the original source.\n\nand an object is returned with the following properties:\n\n* `line`: The line number in the generated source, or null.\n\n* `column`: The column number in the generated source, or null.\n\n#### SourceMapConsumer.prototype.sourceContentFor(source)\n\nReturns the original source content for the source provided. The only\nargument is the URL of the original source file.\n\n#### SourceMapConsumer.prototype.eachMapping(callback, context, order)\n\nIterate over each mapping between an original source/line/column and a\ngenerated line/column in this source map.\n\n* `callback`: The function that is called with each mapping. Mappings have the\n  form `{ source, generatedLine, generatedColumn, originalLine, originalColumn,\n  name }`\n\n* `context`: Optional. If specified, this object will be the value of `this`\n  every time that `callback` is called.\n\n* `order`: Either `SourceMapConsumer.GENERATED_ORDER` or\n  `SourceMapConsumer.ORIGINAL_ORDER`. Specifies whether you want to iterate over\n  the mappings sorted by the generated file\'s line/column order or the\n  original\'s source/line/column order, respectively. Defaults to\n  `SourceMapConsumer.GENERATED_ORDER`.\n\n### SourceMapGenerator\n\nAn instance of the SourceMapGenerator represents a source map which is being\nbuilt incrementally.\n\n#### new SourceMapGenerator([startOfSourceMap])\n\nYou may pass an object with the following properties:\n\n* `file`: The filename of the generated source that this source map is\n  associated with.\n\n* `sourceRoot`: A root for all relative URLs in this source map.\n\n#### SourceMapGenerator.fromSourceMap(sourceMapConsumer)\n\nCreates a new SourceMapGenerator based on a SourceMapConsumer\n\n* `sourceMapConsumer` The SourceMap.\n\n#### SourceMapGenerator.prototype.addMapping(mapping)\n\nAdd a single mapping from original source line and column to the generated\nsource\'s line and column for this source map being created. The mapping object\nshould have the following properties:\n\n* `generated`: An object with the generated line and column positions.\n\n* `original`: An object with the original line and column positions.\n\n* `source`: The original source file (relative to the sourceRoot).\n\n* `name`: An optional original token name for this mapping.\n\n#### SourceMapGenerator.prototype.setSourceContent(sourceFile, sourceContent)\n\nSet the source content for an original source file.\n\n* `sourceFile` the URL of the original source file.\n\n* `sourceContent` the content of the source file.\n\n#### SourceMapGenerator.prototype.applySourceMap(sourceMapConsumer[, sourceFile[, sourceMapPath]])\n\nApplies a SourceMap for a source file to the SourceMap.\nEach mapping to the supplied source file is rewritten using the\nsupplied SourceMap. Note: The resolution for the resulting mappings\nis the minimium of this map and the supplied map.\n\n* `sourceMapConsumer`: The SourceMap to be applied.\n\n* `sourceFile`: Optional. The filename of the source file.\n  If omitted, sourceMapConsumer.file will be used, if it exists.\n  Otherwise an error will be thrown.\n\n* `sourceMapPath`: Optional. The dirname of the path to the SourceMap\n  to be applied. If relative, it is relative to the SourceMap.\n\n  This parameter is needed when the two SourceMaps aren\'t in the same\n  directory, and the SourceMap to be applied contains relative source\n  paths. If so, those relative source paths need to be rewritten\n  relative to the SourceMap.\n\n  If omitted, it is assumed that both SourceMaps are in the same directory,\n  thus not needing any rewriting. (Supplying `\'.\'` has the same effect.)\n\n#### SourceMapGenerator.prototype.toString()\n\nRenders the source map being generated to a string.\n\n### SourceNode\n\nSourceNodes provide a way to abstract over interpolating and/or concatenating\nsnippets of generated JavaScript source code, while maintaining the line and\ncolumn information associated between those snippets and the original source\ncode. This is useful as the final intermediate representation a compiler might\nuse before outputting the generated JS and source map.\n\n#### new SourceNode([line, column, source[, chunk[, name]]])\n\n* `line`: The original line number associated with this source node, or null if\n  it isn\'t associated with an original line.\n\n* `column`: The original column number associated with this source node, or null\n  if it isn\'t associated with an original column.\n\n* `source`: The original source\'s filename; null if no filename is provided.\n\n* `chunk`: Optional. Is immediately passed to `SourceNode.prototype.add`, see\n  below.\n\n* `name`: Optional. The original identifier.\n\n#### SourceNode.fromStringWithSourceMap(code, sourceMapConsumer)\n\nCreates a SourceNode from generated code and a SourceMapConsumer.\n\n* `code`: The generated code\n\n* `sourceMapConsumer` The SourceMap for the generated code\n\n#### SourceNode.prototype.add(chunk)\n\nAdd a chunk of generated JS to this source node.\n\n* `chunk`: A string snippet of generated JS code, another instance of\n   `SourceNode`, or an array where each member is one of those things.\n\n#### SourceNode.prototype.prepend(chunk)\n\nPrepend a chunk of generated JS to this source node.\n\n* `chunk`: A string snippet of generated JS code, another instance of\n   `SourceNode`, or an array where each member is one of those things.\n\n#### SourceNode.prototype.setSourceContent(sourceFile, sourceContent)\n\nSet the source content for a source file. This will be added to the\n`SourceMap` in the `sourcesContent` field.\n\n* `sourceFile`: The filename of the source file\n\n* `sourceContent`: The content of the source file\n\n#### SourceNode.prototype.walk(fn)\n\nWalk over the tree of JS snippets in this node and its children. The walking\nfunction is called once for each snippet of JS and is passed that snippet and\nthe its original associated source\'s line/column location.\n\n* `fn`: The traversal function.\n\n#### SourceNode.prototype.walkSourceContents(fn)\n\nWalk over the tree of SourceNodes. The walking function is called for each\nsource file content and is passed the filename and source content.\n\n* `fn`: The traversal function.\n\n#### SourceNode.prototype.join(sep)\n\nLike `Array.prototype.join` except for SourceNodes. Inserts the separator\nbetween each of this source node\'s children.\n\n* `sep`: The separator.\n\n#### SourceNode.prototype.replaceRight(pattern, replacement)\n\nCall `String.prototype.replace` on the very right-most source snippet. Useful\nfor trimming whitespace from the end of a source node, etc.\n\n* `pattern`: The pattern to replace.\n\n* `replacement`: The thing to replace the pattern with.\n\n#### SourceNode.prototype.toString()\n\nReturn the string representation of this source node. Walks over the tree and\nconcatenates all the various snippets together to one string.\n\n### SourceNode.prototype.toStringWithSourceMap([startOfSourceMap])\n\nReturns the string representation of this tree of source nodes, plus a\nSourceMapGenerator which contains all the mappings between the generated and\noriginal sources.\n\nThe arguments are the same as those to `new SourceMapGenerator`.\n\n## Tests\n\n[![Build Status](https://travis-ci.org/mozilla/source-map.png?branch=master)](https://travis-ci.org/mozilla/source-map)\n\nInstall NodeJS version 0.8.0 or greater, then run `node test/run-tests.js`.\n\nTo add new tests, create a new file named `test/test-<your new test name>.js`\nand export your test functions with names that start with "test", for example\n\n    exports["test doing the foo bar"] = function (assert, util) {\n      ...\n    };\n\nThe new test will be located automatically when you run the suite.\n\nThe `util` argument is the test utility module located at `test/source-map/util`.\n\nThe `assert` argument is a cut down version of node\'s assert module. You have\naccess to the following assertion functions:\n\n* `doesNotThrow`\n\n* `equal`\n\n* `ok`\n\n* `strictEqual`\n\n* `throws`\n\n(The reason for the restricted set of test functions is because we need the\ntests to run inside Firefox\'s test suite as well and so the assert module is\nshimmed in that environment. See `build/assert-shim.js`.)\n\n[format]: https://docs.google.com/document/d/1U1RGAehQwRypUTovF1KRlpiOFze0b-_2gc6fAH0KY0k/edit\n[feature]: https://wiki.mozilla.org/DevTools/Features/SourceMap\n[Dryice]: https://github.com/mozilla/dryice\n',
1760 silly resolved     readmeFilename: 'README.md',
1760 silly resolved     bugs: { url: 'https://github.com/mozilla/source-map/issues' },
1760 silly resolved     _id: 'source-map@0.1.33',
1760 silly resolved     _from: 'source-map@~0.1.33' },
1760 silly resolved   { name: 'uglify-to-browserify',
1760 silly resolved     version: '1.0.2',
1760 silly resolved     description: 'A transform to make UglifyJS work in browserify.',
1760 silly resolved     keywords: [],
1760 silly resolved     dependencies: {},
1760 silly resolved     devDependencies: { 'uglify-js': '~2.4.0', 'source-map': '~0.1.27' },
1760 silly resolved     scripts: { test: 'node test/index.js' },
1760 silly resolved     repository:
1760 silly resolved      { type: 'git',
1760 silly resolved        url: 'https://github.com/ForbesLindesay/uglify-to-browserify.git' },
1760 silly resolved     author: { name: 'ForbesLindesay' },
1760 silly resolved     license: 'MIT',
1760 silly resolved     readme: '# uglify-to-browserify\r\n\r\nA transform to make UglifyJS work in browserify.\r\n\r\n[![Build Status](https://travis-ci.org/ForbesLindesay/uglify-to-browserify.png?branch=master)](https://travis-ci.org/ForbesLindesay/uglify-to-browserify)\r\n[![Dependency Status](https://gemnasium.com/ForbesLindesay/uglify-to-browserify.png)](https://gemnasium.com/ForbesLindesay/uglify-to-browserify)\r\n[![NPM version](https://badge.fury.io/js/uglify-to-browserify.png)](http://badge.fury.io/js/uglify-to-browserify)\r\n\r\n## Installation\r\n\r\n    npm install uglify-to-browserify\r\n\r\n## License\r\n\r\n  MIT',
1760 silly resolved     readmeFilename: 'README.md',
1760 silly resolved     bugs: { url: 'https://github.com/ForbesLindesay/uglify-to-browserify/issues' },
1760 silly resolved     homepage: 'https://github.com/ForbesLindesay/uglify-to-browserify',
1760 silly resolved     _id: 'uglify-to-browserify@1.0.2',
1760 silly resolved     _from: 'uglify-to-browserify@~1.0.0' },
1760 silly resolved   { name: 'optimist',
1760 silly resolved     version: '0.3.7',
1760 silly resolved     description: 'Light-weight option parsing with an argv hash. No optstrings attached.',
1760 silly resolved     main: './index.js',
1760 silly resolved     dependencies: { wordwrap: '~0.0.2' },
1760 silly resolved     devDependencies: { hashish: '~0.0.4', tap: '~0.4.0' },
1760 silly resolved     scripts: { test: 'tap ./test/*.js' },
1760 silly resolved     repository:
1760 silly resolved      { type: 'git',
1760 silly resolved        url: 'http://github.com/substack/node-optimist.git' },
1760 silly resolved     keywords:
1760 silly resolved      [ 'argument',
1760 silly resolved        'args',
1760 silly resolved        'option',
1760 silly resolved        'parser',
1760 silly resolved        'parsing',
1760 silly resolved        'cli',
1760 silly resolved        'command' ],
1760 silly resolved     author:
1760 silly resolved      { name: 'James Halliday',
1760 silly resolved        email: 'mail@substack.net',
1760 silly resolved        url: 'http://substack.net' },
1760 silly resolved     license: 'MIT/X11',
1760 silly resolved     engine: { node: '>=0.4' },
1760 silly resolved     readme: 'optimist\n========\n\nOptimist is a node.js library for option parsing for people who hate option\nparsing. More specifically, this module is for people who like all the --bells\nand -whistlz of program usage but think optstrings are a waste of time.\n\nWith optimist, option parsing doesn\'t have to suck (as much).\n\n[![build status](https://secure.travis-ci.org/substack/node-optimist.png)](http://travis-ci.org/substack/node-optimist)\n\nexamples\n========\n\nWith Optimist, the options are just a hash! No optstrings attached.\n-------------------------------------------------------------------\n\nxup.js:\n\n````javascript\n#!/usr/bin/env node\nvar argv = require(\'optimist\').argv;\n\nif (argv.rif - 5 * argv.xup > 7.138) {\n    console.log(\'Buy more riffiwobbles\');\n}\nelse {\n    console.log(\'Sell the xupptumblers\');\n}\n````\n\n***\n\n    $ ./xup.js --rif=55 --xup=9.52\n    Buy more riffiwobbles\n    \n    $ ./xup.js --rif 12 --xup 8.1\n    Sell the xupptumblers\n\n![This one\'s optimistic.](http://substack.net/images/optimistic.png)\n\nBut wait! There\'s more! You can do short options:\n-------------------------------------------------\n \nshort.js:\n\n````javascript\n#!/usr/bin/env node\nvar argv = require(\'optimist\').argv;\nconsole.log(\'(%d,%d)\', argv.x, argv.y);\n````\n\n***\n\n    $ ./short.js -x 10 -y 21\n    (10,21)\n\nAnd booleans, both long and short (and grouped):\n----------------------------------\n\nbool.js:\n\n````javascript\n#!/usr/bin/env node\nvar util = require(\'util\');\nvar argv = require(\'optimist\').argv;\n\nif (argv.s) {\n    util.print(argv.fr ? \'Le chat dit: \' : \'The cat says: \');\n}\nconsole.log(\n    (argv.fr ? \'miaou\' : \'meow\') + (argv.p ? \'.\' : \'\')\n);\n````\n\n***\n\n    $ ./bool.js -s\n    The cat says: meow\n    \n    $ ./bool.js -sp\n    The cat says: meow.\n\n    $ ./bool.js -sp --fr\n    Le chat dit: miaou.\n\nAnd non-hypenated options too! Just use `argv._`!\n-------------------------------------------------\n \nnonopt.js:\n\n````javascript\n#!/usr/bin/env node\nvar argv = require(\'optimist\').argv;\nconsole.log(\'(%d,%d)\', argv.x, argv.y);\nconsole.log(argv._);\n````\n\n***\n\n    $ ./nonopt.js -x 6.82 -y 3.35 moo\n    (6.82,3.35)\n    [ \'moo\' ]\n    \n    $ ./nonopt.js foo -x 0.54 bar -y 1.12 baz\n    (0.54,1.12)\n    [ \'foo\', \'bar\', \'baz\' ]\n\nPlus, Optimist comes with .usage() and .demand()!\n-------------------------------------------------\n\ndivide.js:\n\n````javascript\n#!/usr/bin/env node\nvar argv = require(\'optimist\')\n    .usage(\'Usage: $0 -x [num] -y [num]\')\n    .demand([\'x\',\'y\'])\n    .argv;\n\nconsole.log(argv.x / argv.y);\n````\n\n***\n \n    $ ./divide.js -x 55 -y 11\n    5\n    \n    $ node ./divide.js -x 4.91 -z 2.51\n    Usage: node ./divide.js -x [num] -y [num]\n\n    Options:\n      -x  [required]\n      -y  [required]\n\n    Missing required arguments: y\n\nEVEN MORE HOLY COW\n------------------\n\ndefault_singles.js:\n\n````javascript\n#!/usr/bin/env node\nvar argv = require(\'optimist\')\n    .default(\'x\', 10)\n    .default(\'y\', 10)\n    .argv\n;\nconsole.log(argv.x + argv.y);\n````\n\n***\n\n    $ ./default_singles.js -x 5\n    15\n\ndefault_hash.js:\n\n````javascript\n#!/usr/bin/env node\nvar argv = require(\'optimist\')\n    .default({ x : 10, y : 10 })\n    .argv\n;\nconsole.log(argv.x + argv.y);\n````\n\n***\n\n    $ ./default_hash.js -y 7\n    17\n\nAnd if you really want to get all descriptive about it...\n---------------------------------------------------------\n\nboolean_single.js\n\n````javascript\n#!/usr/bin/env node\nvar argv = require(\'optimist\')\n    .boolean(\'v\')\n    .argv\n;\nconsole.dir(argv);\n````\n\n***\n\n    $ ./boolean_single.js -v foo bar baz\n    true\n    [ \'bar\', \'baz\', \'foo\' ]\n\nboolean_double.js\n\n````javascript\n#!/usr/bin/env node\nvar argv = require(\'optimist\')\n    .boolean([\'x\',\'y\',\'z\'])\n    .argv\n;\nconsole.dir([ argv.x, argv.y, argv.z ]);\nconsole.dir(argv._);\n````\n\n***\n\n    $ ./boolean_double.js -x -z one two three\n    [ true, false, true ]\n    [ \'one\', \'two\', \'three\' ]\n\nOptimist is here to help...\n---------------------------\n\nYou can describe parameters for help messages and set aliases. Optimist figures\nout how to format a handy help string automatically.\n\nline_count.js\n\n````javascript\n#!/usr/bin/env node\nvar argv = require(\'optimist\')\n    .usage(\'Count the lines in a file.\\nUsage: $0\')\n    .demand(\'f\')\n    .alias(\'f\', \'file\')\n    .describe(\'f\', \'Load a file\')\n    .argv\n;\n\nvar fs = require(\'fs\');\nvar s = fs.createReadStream(argv.file);\n\nvar lines = 0;\ns.on(\'data\', function (buf) {\n    lines += buf.toString().match(/\\n/g).length;\n});\n\ns.on(\'end\', function () {\n    console.log(lines);\n});\n````\n\n***\n\n    $ node line_count.js\n    Count the lines in a file.\n    Usage: node ./line_count.js\n\n    Options:\n      -f, --file  Load a file  [required]\n\n    Missing required arguments: f\n\n    $ node line_count.js --file line_count.js \n    20\n    \n    $ node line_count.js -f line_count.js \n    20\n\nmethods\n=======\n\nBy itself,\n\n````javascript\nrequire(\'optimist\').argv\n`````\n\nwill use `process.argv` array to construct the `argv` object.\n\nYou can pass in the `process.argv` yourself:\n\n````javascript\nrequire(\'optimist\')([ \'-x\', \'1\', \'-y\', \'2\' ]).argv\n````\n\nor use .parse() to do the same thing:\n\n````javascript\nrequire(\'optimist\').parse([ \'-x\', \'1\', \'-y\', \'2\' ])\n````\n\nThe rest of these methods below come in just before the terminating `.argv`.\n\n.alias(key, alias)\n------------------\n\nSet key names as equivalent such that updates to a key will propagate to aliases\nand vice-versa.\n\nOptionally `.alias()` can take an object that maps keys to aliases.\n\n.default(key, value)\n--------------------\n\nSet `argv[key]` to `value` if no option was specified on `process.argv`.\n\nOptionally `.default()` can take an object that maps keys to default values.\n\n.demand(key)\n------------\n\nIf `key` is a string, show the usage information and exit if `key` wasn\'t\nspecified in `process.argv`.\n\nIf `key` is a number, demand at least as many non-option arguments, which show\nup in `argv._`.\n\nIf `key` is an Array, demand each element.\n\n.describe(key, desc)\n--------------------\n\nDescribe a `key` for the generated usage information.\n\nOptionally `.describe()` can take an object that maps keys to descriptions.\n\n.options(key, opt)\n------------------\n\nInstead of chaining together `.alias().demand().default()`, you can specify\nkeys in `opt` for each of the chainable methods.\n\nFor example:\n\n````javascript\nvar argv = require(\'optimist\')\n    .options(\'f\', {\n        alias : \'file\',\n        default : \'/etc/passwd\',\n    })\n    .argv\n;\n````\n\nis the same as\n\n````javascript\nvar argv = require(\'optimist\')\n    .alias(\'f\', \'file\')\n    .default(\'f\', \'/etc/passwd\')\n    .argv\n;\n````\n\nOptionally `.options()` can take an object that maps keys to `opt` parameters.\n\n.usage(message)\n---------------\n\nSet a usage message to show which commands to use. Inside `message`, the string\n`$0` will get interpolated to the current script name or node command for the\npresent script similar to how `$0` works in bash or perl.\n\n.check(fn)\n----------\n\nCheck that certain conditions are met in the provided arguments.\n\nIf `fn` throws or returns `false`, show the thrown error, usage information, and\nexit.\n\n.boolean(key)\n-------------\n\nInterpret `key` as a boolean. If a non-flag option follows `key` in\n`process.argv`, that string won\'t get set as the value of `key`.\n\nIf `key` never shows up as a flag in `process.arguments`, `argv[key]` will be\n`false`.\n\nIf `key` is an Array, interpret all the elements as booleans.\n\n.string(key)\n------------\n\nTell the parser logic not to interpret `key` as a number or boolean.\nThis can be useful if you need to preserve leading zeros in an input.\n\nIf `key` is an Array, interpret all the elements as strings.\n\n.wrap(columns)\n--------------\n\nFormat usage output to wrap at `columns` many columns.\n\n.help()\n-------\n\nReturn the generated usage string.\n\n.showHelp(fn=console.error)\n---------------------------\n\nPrint the usage data using `fn` for printing.\n\n.parse(args)\n------------\n\nParse `args` instead of `process.argv`. Returns the `argv` object.\n\n.argv\n-----\n\nGet the arguments as a plain old object.\n\nArguments without a corresponding flag show up in the `argv._` array.\n\nThe script name or node command is available at `argv.$0` similarly to how `$0`\nworks in bash or perl.\n\nparsing tricks\n==============\n\nstop parsing\n------------\n\nUse `--` to stop parsing flags and stuff the remainder into `argv._`.\n\n    $ node examples/reflect.js -a 1 -b 2 -- -c 3 -d 4\n    { _: [ \'-c\', \'3\', \'-d\', \'4\' ],\n      \'$0\': \'node ./examples/reflect.js\',\n      a: 1,\n      b: 2 }\n\nnegate fields\n-------------\n\nIf you want to explicity set a field to false instead of just leaving it\nundefined or to override a default you can do `--no-key`.\n\n    $ node examples/reflect.js -a --no-b\n    { _: [],\n      \'$0\': \'node ./examples/reflect.js\',\n      a: true,\n      b: false }\n\nnumbers\n-------\n\nEvery argument that looks like a number (`!isNaN(Number(arg))`) is converted to\none. This way you can just `net.createConnection(argv.port)` and you can add\nnumbers out of `argv` with `+` without having that mean concatenation,\nwhich is super frustrating.\n\nduplicates\n----------\n\nIf you specify a flag multiple times it will get turned into an array containing\nall the values in order.\n\n    $ node examples/reflect.js -x 5 -x 8 -x 0\n    { _: [],\n      \'$0\': \'node ./examples/reflect.js\',\n        x: [ 5, 8, 0 ] }\n\ndot notation\n------------\n\nWhen you use dots (`.`s) in argument names, an implicit object path is assumed.\nThis lets you organize arguments into nested objects.\n\n     $ node examples/reflect.js --foo.bar.baz=33 --foo.quux=5\n     { _: [],\n       \'$0\': \'node ./examples/reflect.js\',\n         foo: { bar: { baz: 33 }, quux: 5 } }\n\ninstallation\n============\n\nWith [npm](http://github.com/isaacs/npm), just do:\n    npm install optimist\n \nor clone this project on github:\n\n    git clone http://github.com/substack/node-optimist.git\n\nTo run the tests with [expresso](http://github.com/visionmedia/expresso),\njust do:\n    \n    expresso\n\ninspired By\n===========\n\nThis module is loosely inspired by Perl\'s\n[Getopt::Casual](http://search.cpan.org/~photo/Getopt-Casual-0.13.1/Casual.pm).\n',
1760 silly resolved     readmeFilename: 'readme.markdown',
1760 silly resolved     bugs: { url: 'https://github.com/substack/node-optimist/issues' },
1760 silly resolved     homepage: 'https://github.com/substack/node-optimist',
1760 silly resolved     _id: 'optimist@0.3.7',
1760 silly resolved     _from: 'optimist@~0.3.5' } ]
1761 info install async@0.2.10 into /usr/local/lib/node_modules/jade/node_modules/constantinople/node_modules/uglify-js
1762 info install source-map@0.1.33 into /usr/local/lib/node_modules/jade/node_modules/constantinople/node_modules/uglify-js
1763 info install uglify-to-browserify@1.0.2 into /usr/local/lib/node_modules/jade/node_modules/constantinople/node_modules/uglify-js
1764 info install optimist@0.3.7 into /usr/local/lib/node_modules/jade/node_modules/constantinople/node_modules/uglify-js
1765 info installOne async@0.2.10
1766 info installOne source-map@0.1.33
1767 info installOne uglify-to-browserify@1.0.2
1768 info installOne optimist@0.3.7
1769 info preinstall is-promise@1.0.1
1770 info /usr/local/lib/node_modules/jade/node_modules/constantinople/node_modules/uglify-js/node_modules/async unbuild
1771 info /usr/local/lib/node_modules/jade/node_modules/constantinople/node_modules/uglify-js/node_modules/source-map unbuild
1772 info /usr/local/lib/node_modules/jade/node_modules/constantinople/node_modules/uglify-js/node_modules/uglify-to-browserify unbuild
1773 info /usr/local/lib/node_modules/jade/node_modules/constantinople/node_modules/uglify-js/node_modules/optimist unbuild
1774 verbose readDependencies using package.json deps
1775 verbose tar unpack /Users/marc.bluemner/.npm/async/0.2.10/package.tgz
1776 silly lockFile 13cdac3c-les-uglify-js-node-modules-async tar:///usr/local/lib/node_modules/jade/node_modules/constantinople/node_modules/uglify-js/node_modules/async
1777 verbose lock tar:///usr/local/lib/node_modules/jade/node_modules/constantinople/node_modules/uglify-js/node_modules/async /Users/marc.bluemner/.npm/13cdac3c-les-uglify-js-node-modules-async.lock
1778 silly lockFile 39bc0fc0-ner-npm-async-0-2-10-package-tgz tar:///Users/marc.bluemner/.npm/async/0.2.10/package.tgz
1779 verbose lock tar:///Users/marc.bluemner/.npm/async/0.2.10/package.tgz /Users/marc.bluemner/.npm/39bc0fc0-ner-npm-async-0-2-10-package-tgz.lock
1780 verbose tar unpack /Users/marc.bluemner/.npm/source-map/0.1.33/package.tgz
1781 silly lockFile b69885d0-glify-js-node-modules-source-map tar:///usr/local/lib/node_modules/jade/node_modules/constantinople/node_modules/uglify-js/node_modules/source-map
1782 verbose lock tar:///usr/local/lib/node_modules/jade/node_modules/constantinople/node_modules/uglify-js/node_modules/source-map /Users/marc.bluemner/.npm/b69885d0-glify-js-node-modules-source-map.lock
1783 silly lockFile a877218c-pm-source-map-0-1-33-package-tgz tar:///Users/marc.bluemner/.npm/source-map/0.1.33/package.tgz
1784 verbose lock tar:///Users/marc.bluemner/.npm/source-map/0.1.33/package.tgz /Users/marc.bluemner/.npm/a877218c-pm-source-map-0-1-33-package-tgz.lock
1785 verbose tar unpack /Users/marc.bluemner/.npm/uglify-to-browserify/1.0.2/package.tgz
1786 silly lockFile dec62d96-ode-modules-uglify-to-browserify tar:///usr/local/lib/node_modules/jade/node_modules/constantinople/node_modules/uglify-js/node_modules/uglify-to-browserify
1787 verbose lock tar:///usr/local/lib/node_modules/jade/node_modules/constantinople/node_modules/uglify-js/node_modules/uglify-to-browserify /Users/marc.bluemner/.npm/dec62d96-ode-modules-uglify-to-browserify.lock
1788 silly lockFile fde5703a--to-browserify-1-0-2-package-tgz tar:///Users/marc.bluemner/.npm/uglify-to-browserify/1.0.2/package.tgz
1789 verbose lock tar:///Users/marc.bluemner/.npm/uglify-to-browserify/1.0.2/package.tgz /Users/marc.bluemner/.npm/fde5703a--to-browserify-1-0-2-package-tgz.lock
1790 verbose tar unpack /Users/marc.bluemner/.npm/optimist/0.3.7/package.tgz
1791 silly lockFile fbcfef9e--uglify-js-node-modules-optimist tar:///usr/local/lib/node_modules/jade/node_modules/constantinople/node_modules/uglify-js/node_modules/optimist
1792 verbose lock tar:///usr/local/lib/node_modules/jade/node_modules/constantinople/node_modules/uglify-js/node_modules/optimist /Users/marc.bluemner/.npm/fbcfef9e--uglify-js-node-modules-optimist.lock
1793 silly lockFile 04634416-r-npm-optimist-0-3-7-package-tgz tar:///Users/marc.bluemner/.npm/optimist/0.3.7/package.tgz
1794 verbose lock tar:///Users/marc.bluemner/.npm/optimist/0.3.7/package.tgz /Users/marc.bluemner/.npm/04634416-r-npm-optimist-0-3-7-package-tgz.lock
1795 verbose readDependencies using package.json deps
1796 silly resolved []
1797 verbose about to build /usr/local/lib/node_modules/jade/node_modules/transformers/node_modules/promise/node_modules/is-promise
1798 info build /usr/local/lib/node_modules/jade/node_modules/transformers/node_modules/promise/node_modules/is-promise
1799 verbose linkStuff [ true,
1799 verbose linkStuff   '/usr/local/lib/node_modules',
1799 verbose linkStuff   false,
1799 verbose linkStuff   '/usr/local/lib/node_modules/jade/node_modules/transformers/node_modules/promise/node_modules' ]
1800 info linkStuff is-promise@1.0.1
1801 verbose linkBins is-promise@1.0.1
1802 verbose linkMans is-promise@1.0.1
1803 verbose rebuildBundles is-promise@1.0.1
1804 silly gunzTarPerm extractEntry test/_.js
1805 silly gunzTarPerm extractEntry test/parse.js
1806 info install is-promise@1.0.1
1807 silly gunzTarPerm modes [ '755', '644' ]
1808 silly gunzTarPerm modes [ '755', '644' ]
1809 info postinstall is-promise@1.0.1
1810 verbose about to build /usr/local/lib/node_modules/jade/node_modules/transformers/node_modules/promise
1811 info build /usr/local/lib/node_modules/jade/node_modules/transformers/node_modules/promise
1812 verbose linkStuff [ true,
1812 verbose linkStuff   '/usr/local/lib/node_modules',
1812 verbose linkStuff   false,
1812 verbose linkStuff   '/usr/local/lib/node_modules/jade/node_modules/transformers/node_modules' ]
1813 info linkStuff promise@2.0.0
1814 verbose linkBins promise@2.0.0
1815 verbose linkMans promise@2.0.0
1816 verbose rebuildBundles promise@2.0.0
1817 verbose rebuildBundles [ 'is-promise' ]
1818 info install promise@2.0.0
1819 silly gunzTarPerm extractEntry package.json
1820 info postinstall promise@2.0.0
1821 silly gunzTarPerm extractEntry test/usage.js
1822 silly gunzTarPerm extractEntry test/_/argv.js
1823 silly gunzTarPerm extractEntry package.json
1824 silly gunzTarPerm extractEntry README.md
1825 silly gunzTarPerm extractEntry LICENSE
1826 silly gunzTarPerm extractEntry component.json
1827 silly gunzTarPerm extractEntry lib/async.js
1828 silly gunzTarPerm extractEntry .npmignore
1829 silly gunzTarPerm extractEntry README.md
1830 silly gunzTarPerm extractEntry test/_/bin.js
1831 silly gunzTarPerm extractEntry LICENSE
1832 silly gunzTarPerm extractEntry index.js
1833 silly gunzTarPerm extractEntry .travis.yml
1834 silly gunzTarPerm extractEntry test/index.js
1835 http 304 https://registry.npmjs.org/minimatch
1836 silly registry.get cb [ 304,
1836 silly registry.get   { date: 'Mon, 26 May 2014 17:04:07 GMT',
1836 silly registry.get     server: 'Apache',
1836 silly registry.get     via: '1.1 varnish',
1836 silly registry.get     'last-modified': 'Mon, 26 May 2014 17:04:07 GMT',
1836 silly registry.get     'cache-control': 'max-age=1',
1836 silly registry.get     etag: '"64HZ0LR2MPZLWRRTTBF60QUIU"',
1836 silly registry.get     'x-served-by': 'cache-lcy1123-LCY',
1836 silly registry.get     'x-cache': 'HIT',
1836 silly registry.get     'x-cache-hits': '1',
1836 silly registry.get     'x-timer': 'S1401123847.759425,VS0,VE0',
1836 silly registry.get     vary: 'Accept',
1836 silly registry.get     'content-length': '0',
1836 silly registry.get     'keep-alive': 'timeout=10, max=50',
1836 silly registry.get     connection: 'Keep-Alive' } ]
1837 verbose etag minimatch from cache
1838 silly addNameRange number 2 { name: 'minimatch', range: '>=0.2.4', hasData: true }
1839 silly addNameRange versions [ 'minimatch',
1839 silly addNameRange   [ '0.0.1',
1839 silly addNameRange     '0.0.2',
1839 silly addNameRange     '0.0.4',
1839 silly addNameRange     '0.0.5',
1839 silly addNameRange     '0.1.1',
1839 silly addNameRange     '0.1.2',
1839 silly addNameRange     '0.1.3',
1839 silly addNameRange     '0.1.4',
1839 silly addNameRange     '0.1.5',
1839 silly addNameRange     '0.2.0',
1839 silly addNameRange     '0.2.2',
1839 silly addNameRange     '0.2.3',
1839 silly addNameRange     '0.2.4',
1839 silly addNameRange     '0.2.5',
1839 silly addNameRange     '0.2.6',
1839 silly addNameRange     '0.2.7',
1839 silly addNameRange     '0.2.8',
1839 silly addNameRange     '0.2.9',
1839 silly addNameRange     '0.2.10',
1839 silly addNameRange     '0.2.11',
1839 silly addNameRange     '0.2.12',
1839 silly addNameRange     '0.2.13',
1839 silly addNameRange     '0.2.14',
1839 silly addNameRange     '0.3.0' ] ]
1840 verbose addNamed [ 'minimatch', '0.3.0' ]
1841 verbose addNamed [ '0.3.0', '0.3.0' ]
1842 silly lockFile fbcfe8c1-minimatch-0-3-0 minimatch@0.3.0
1843 verbose lock minimatch@0.3.0 /Users/marc.bluemner/.npm/fbcfe8c1-minimatch-0-3-0.lock
1844 http 304 https://registry.npmjs.org/wordwrap
1845 silly registry.get cb [ 304,
1845 silly registry.get   { date: 'Mon, 26 May 2014 17:04:07 GMT',
1845 silly registry.get     server: 'Apache',
1845 silly registry.get     via: '1.1 varnish',
1845 silly registry.get     'last-modified': 'Mon, 26 May 2014 17:04:07 GMT',
1845 silly registry.get     'cache-control': 'max-age=1',
1845 silly registry.get     etag: '"6GUW1CYLCM04DMNSMK3F17IKN"',
1845 silly registry.get     'x-served-by': 'cache-lcy1126-LCY',
1845 silly registry.get     'x-cache': 'HIT',
1845 silly registry.get     'x-cache-hits': '1',
1845 silly registry.get     'x-timer': 'S1401123847.931930,VS0,VE0',
1845 silly registry.get     vary: 'Accept',
1845 silly registry.get     'content-length': '0',
1845 silly registry.get     'keep-alive': 'timeout=10, max=50',
1845 silly registry.get     connection: 'Keep-Alive' } ]
1846 verbose etag wordwrap from cache
1847 silly addNameRange number 2 { name: 'wordwrap', range: '>=0.0.2-0 <0.1.0-0', hasData: true }
1848 silly addNameRange versions [ 'wordwrap', [ '0.0.1', '0.0.2' ] ]
1849 verbose addNamed [ 'wordwrap', '0.0.2' ]
1850 verbose addNamed [ '0.0.2', '0.0.2' ]
1851 silly lockFile 24a694c8-wordwrap-0-0-2 wordwrap@0.0.2
1852 verbose lock wordwrap@0.0.2 /Users/marc.bluemner/.npm/24a694c8-wordwrap-0-0-2.lock
1853 silly lockFile fbcfe8c1-minimatch-0-3-0 minimatch@0.3.0
1854 silly lockFile fbcfe8c1-minimatch-0-3-0 minimatch@0.3.0
1855 silly lockFile 5a1b7cbd-minimatch-0-2-4 minimatch@>=0.2.4
1856 silly lockFile 5a1b7cbd-minimatch-0-2-4 minimatch@>=0.2.4
1857 silly lockFile dec62d96-ode-modules-uglify-to-browserify tar:///usr/local/lib/node_modules/jade/node_modules/constantinople/node_modules/uglify-js/node_modules/uglify-to-browserify
1858 silly lockFile dec62d96-ode-modules-uglify-to-browserify tar:///usr/local/lib/node_modules/jade/node_modules/constantinople/node_modules/uglify-js/node_modules/uglify-to-browserify
1859 silly lockFile fde5703a--to-browserify-1-0-2-package-tgz tar:///Users/marc.bluemner/.npm/uglify-to-browserify/1.0.2/package.tgz
1860 silly lockFile fde5703a--to-browserify-1-0-2-package-tgz tar:///Users/marc.bluemner/.npm/uglify-to-browserify/1.0.2/package.tgz
1861 info preinstall uglify-to-browserify@1.0.2
1862 verbose readDependencies using package.json deps
1863 verbose readDependencies using package.json deps
1864 silly resolved []
1865 verbose about to build /usr/local/lib/node_modules/jade/node_modules/constantinople/node_modules/uglify-js/node_modules/uglify-to-browserify
1866 info build /usr/local/lib/node_modules/jade/node_modules/constantinople/node_modules/uglify-js/node_modules/uglify-to-browserify
1867 verbose linkStuff [ true,
1867 verbose linkStuff   '/usr/local/lib/node_modules',
1867 verbose linkStuff   false,
1867 verbose linkStuff   '/usr/local/lib/node_modules/jade/node_modules/constantinople/node_modules/uglify-js/node_modules' ]
1868 info linkStuff uglify-to-browserify@1.0.2
1869 verbose linkBins uglify-to-browserify@1.0.2
1870 verbose linkMans uglify-to-browserify@1.0.2
1871 verbose rebuildBundles uglify-to-browserify@1.0.2
1872 info install uglify-to-browserify@1.0.2
1873 info postinstall uglify-to-browserify@1.0.2
1874 silly lockFile 33acbac1-glify-js-node-modules-source-map tar:///usr/local/lib/node_modules/jade/node_modules/transformers/node_modules/uglify-js/node_modules/source-map
1875 silly lockFile 33acbac1-glify-js-node-modules-source-map tar:///usr/local/lib/node_modules/jade/node_modules/transformers/node_modules/uglify-js/node_modules/source-map
1876 silly lockFile a877218c-pm-source-map-0-1-33-package-tgz tar:///Users/marc.bluemner/.npm/source-map/0.1.33/package.tgz
1877 silly lockFile a877218c-pm-source-map-0-1-33-package-tgz tar:///Users/marc.bluemner/.npm/source-map/0.1.33/package.tgz
1878 info preinstall source-map@0.1.33
1879 verbose readDependencies using package.json deps
1880 verbose readDependencies using package.json deps
1881 verbose cache add [ 'amdefine@>=0.0.4', null ]
1882 verbose cache add name=undefined spec="amdefine@>=0.0.4" args=["amdefine@>=0.0.4",null]
1883 verbose parsed url { protocol: null,
1883 verbose parsed url   slashes: null,
1883 verbose parsed url   auth: null,
1883 verbose parsed url   host: null,
1883 verbose parsed url   port: null,
1883 verbose parsed url   hostname: null,
1883 verbose parsed url   hash: null,
1883 verbose parsed url   search: null,
1883 verbose parsed url   query: null,
1883 verbose parsed url   pathname: 'amdefine@%3E=0.0.4',
1883 verbose parsed url   path: 'amdefine@%3E=0.0.4',
1883 verbose parsed url   href: 'amdefine@%3E=0.0.4' }
1884 verbose cache add name="amdefine" spec=">=0.0.4" args=["amdefine",">=0.0.4"]
1885 verbose parsed url { protocol: null,
1885 verbose parsed url   slashes: null,
1885 verbose parsed url   auth: null,
1885 verbose parsed url   host: null,
1885 verbose parsed url   port: null,
1885 verbose parsed url   hostname: null,
1885 verbose parsed url   hash: null,
1885 verbose parsed url   search: null,
1885 verbose parsed url   query: null,
1885 verbose parsed url   pathname: '%3E=0.0.4',
1885 verbose parsed url   path: '%3E=0.0.4',
1885 verbose parsed url   href: '%3E=0.0.4' }
1886 verbose addNamed [ 'amdefine', '>=0.0.4' ]
1887 verbose addNamed [ null, '>=0.0.4' ]
1888 silly lockFile 165d2d7b-amdefine-0-0-4 amdefine@>=0.0.4
1889 verbose lock amdefine@>=0.0.4 /Users/marc.bluemner/.npm/165d2d7b-amdefine-0-0-4.lock
1890 silly addNameRange { name: 'amdefine', range: '>=0.0.4', hasData: false }
1891 silly lockFile 13cdac3c-les-uglify-js-node-modules-async tar:///usr/local/lib/node_modules/jade/node_modules/constantinople/node_modules/uglify-js/node_modules/async
1892 silly lockFile 13cdac3c-les-uglify-js-node-modules-async tar:///usr/local/lib/node_modules/jade/node_modules/constantinople/node_modules/uglify-js/node_modules/async
1893 silly lockFile 24a694c8-wordwrap-0-0-2 wordwrap@0.0.2
1894 silly lockFile 24a694c8-wordwrap-0-0-2 wordwrap@0.0.2
1895 silly lockFile 8a4f310b--uglify-js-node-modules-optimist tar:///usr/local/lib/node_modules/jade/node_modules/with/node_modules/uglify-js/node_modules/optimist
1896 silly lockFile 8a4f310b--uglify-js-node-modules-optimist tar:///usr/local/lib/node_modules/jade/node_modules/with/node_modules/uglify-js/node_modules/optimist
1897 silly lockFile 39bc0fc0-ner-npm-async-0-2-10-package-tgz tar:///Users/marc.bluemner/.npm/async/0.2.10/package.tgz
1898 silly lockFile 39bc0fc0-ner-npm-async-0-2-10-package-tgz tar:///Users/marc.bluemner/.npm/async/0.2.10/package.tgz
1899 silly lockFile 04634416-r-npm-optimist-0-3-7-package-tgz tar:///Users/marc.bluemner/.npm/optimist/0.3.7/package.tgz
1900 silly lockFile 04634416-r-npm-optimist-0-3-7-package-tgz tar:///Users/marc.bluemner/.npm/optimist/0.3.7/package.tgz
1901 verbose url raw amdefine
1902 verbose url resolving [ 'https://registry.npmjs.org/', './amdefine' ]
1903 verbose url resolved https://registry.npmjs.org/amdefine
1904 info trying registry request attempt 1 at 19:04:08
1905 verbose etag "AIUP666S38PGJM2AVPD28X9YX"
1906 http GET https://registry.npmjs.org/amdefine
1907 silly resolved [ { author:
1907 silly resolved      { name: 'Isaac Z. Schlueter',
1907 silly resolved        email: 'i@izs.me',
1907 silly resolved        url: 'http://blog.izs.me' },
1907 silly resolved     name: 'minimatch',
1907 silly resolved     description: 'a glob matcher in javascript',
1907 silly resolved     version: '0.3.0',
1907 silly resolved     repository: { type: 'git', url: 'git://github.com/isaacs/minimatch.git' },
1907 silly resolved     main: 'minimatch.js',
1907 silly resolved     scripts: { test: 'tap test/*.js' },
1907 silly resolved     engines: { node: '*' },
1907 silly resolved     dependencies: { 'lru-cache': '2', sigmund: '~1.0.0' },
1907 silly resolved     devDependencies: { tap: '' },
1907 silly resolved     license:
1907 silly resolved      { type: 'MIT',
1907 silly resolved        url: 'http://github.com/isaacs/minimatch/raw/master/LICENSE' },
1907 silly resolved     readme: '# minimatch\n\nA minimal matching utility.\n\n[![Build Status](https://secure.travis-ci.org/isaacs/minimatch.png)](http://travis-ci.org/isaacs/minimatch)\n\n\nThis is the matching library used internally by npm.\n\nEventually, it will replace the C binding in node-glob.\n\nIt works by converting glob expressions into JavaScript `RegExp`\nobjects.\n\n## Usage\n\n```javascript\nvar minimatch = require("minimatch")\n\nminimatch("bar.foo", "*.foo") // true!\nminimatch("bar.foo", "*.bar") // false!\nminimatch("bar.foo", "*.+(bar|foo)", { debug: true }) // true, and noisy!\n```\n\n## Features\n\nSupports these glob features:\n\n* Brace Expansion\n* Extended glob matching\n* "Globstar" `**` matching\n\nSee:\n\n* `man sh`\n* `man bash`\n* `man 3 fnmatch`\n* `man 5 gitignore`\n\n## Minimatch Class\n\nCreate a minimatch object by instanting the `minimatch.Minimatch` class.\n\n```javascript\nvar Minimatch = require("minimatch").Minimatch\nvar mm = new Minimatch(pattern, options)\n```\n\n### Properties\n\n* `pattern` The original pattern the minimatch object represents.\n* `options` The options supplied to the constructor.\n* `set` A 2-dimensional array of regexp or string expressions.\n  Each row in the\n  array corresponds to a brace-expanded pattern.  Each item in the row\n  corresponds to a single path-part.  For example, the pattern\n  `{a,b/c}/d` would expand to a set of patterns like:\n\n        [ [ a, d ]\n        , [ b, c, d ] ]\n\n    If a portion of the pattern doesn\'t have any "magic" in it\n    (that is, it\'s something like `"foo"` rather than `fo*o?`), then it\n    will be left as a string rather than converted to a regular\n    expression.\n\n* `regexp` Created by the `makeRe` method.  A single regular expression\n  expressing the entire pattern.  This is useful in cases where you wish\n  to use the pattern somewhat like `fnmatch(3)` with `FNM_PATH` enabled.\n* `negate` True if the pattern is negated.\n* `comment` True if the pattern is a comment.\n* `empty` True if the pattern is `""`.\n\n### Methods\n\n* `makeRe` Generate the `regexp` member if necessary, and return it.\n  Will return `false` if the pattern is invalid.\n* `match(fname)` Return true if the filename matches the pattern, or\n  false otherwise.\n* `matchOne(fileArray, patternArray, partial)` Take a `/`-split\n  filename, and match it against a single row in the `regExpSet`.  This\n  method is mainly for internal use, but is exposed so that it can be\n  used by a glob-walker that needs to avoid excessive filesystem calls.\n\nAll other methods are internal, and will be called as necessary.\n\n## Functions\n\nThe top-level exported function has a `cache` property, which is an LRU\ncache set to store 100 items.  So, calling these methods repeatedly\nwith the same pattern and options will use the same Minimatch object,\nsaving the cost of parsing it multiple times.\n\n### minimatch(path, pattern, options)\n\nMain export.  Tests a path against the pattern using the options.\n\n```javascript\nvar isJS = minimatch(file, "*.js", { matchBase: true })\n```\n\n### minimatch.filter(pattern, options)\n\nReturns a function that tests its\nsupplied argument, suitable for use with `Array.filter`.  Example:\n\n```javascript\nvar javascripts = fileList.filter(minimatch.filter("*.js", {matchBase: true}))\n```\n\n### minimatch.match(list, pattern, options)\n\nMatch against the list of\nfiles, in the style of fnmatch or glob.  If nothing is matched, and\noptions.nonull is set, then return a list containing the pattern itself.\n\n```javascript\nvar javascripts = minimatch.match(fileList, "*.js", {matchBase: true}))\n```\n\n### minimatch.makeRe(pattern, options)\n\nMake a regular expression object from the pattern.\n\n## Options\n\nAll options are `false` by default.\n\n### debug\n\nDump a ton of stuff to stderr.\n\n### nobrace\n\nDo not expand `{a,b}` and `{1..3}` brace sets.\n\n### noglobstar\n\nDisable `**` matching against multiple folder names.\n\n### dot\n\nAllow patterns to match filenames starting with a period, even if\nthe pattern does not explicitly have a period in that spot.\n\nNote that by default, `a/**/b` will **not** match `a/.d/b`, unless `dot`\nis set.\n\n### noext\n\nDisable "extglob" style patterns like `+(a|b)`.\n\n### nocase\n\nPerform a case-insensitive match.\n\n### nonull\n\nWhen a match is not found by `minimatch.match`, return a list containing\nthe pattern itself if this option is set.  When not set, an empty list\nis returned if there are no matches.\n\n### matchBase\n\nIf set, then patterns without slashes will be matched\nagainst the basename of the path if it contains slashes.  For example,\n`a?b` would match the path `/xyz/123/acb`, but not `/xyz/acb/123`.\n\n### nocomment\n\nSuppress the behavior of treating `#` at the start of a pattern as a\ncomment.\n\n### nonegate\n\nSuppress the behavior of treating a leading `!` character as negation.\n\n### flipNegate\n\nReturns from negate expressions the same as if they were not negated.\n(Ie, true on a hit, false on a miss.)\n\n\n## Comparisons to other fnmatch/glob implementations\n\nWhile strict compliance with the existing standards is a worthwhile\ngoal, some discrepancies exist between minimatch and other\nimplementations, and are intentional.\n\nIf the pattern starts with a `!` character, then it is negated.  Set the\n`nonegate` flag to suppress this behavior, and treat leading `!`\ncharacters normally.  This is perhaps relevant if you wish to start the\npattern with a negative extglob pattern like `!(a|B)`.  Multiple `!`\ncharacters at the start of a pattern will negate the pattern multiple\ntimes.\n\nIf a pattern starts with `#`, then it is treated as a comment, and\nwill not match anything.  Use `\\#` to match a literal `#` at the\nstart of a line, or set the `nocomment` flag to suppress this behavior.\n\nThe double-star character `**` is supported by default, unless the\n`noglobstar` flag is set.  This is supported in the manner of bsdglob\nand bash 4.1, where `**` only has special significance if it is the only\nthing in a path part.  That is, `a/**/b` will match `a/x/y/b`, but\n`a/**b` will not.\n\nIf an escaped pattern has no matches, and the `nonull` flag is set,\nthen minimatch.match returns the pattern as-provided, rather than\ninterpreting the character escapes.  For example,\n`minimatch.match([], "\\\\*a\\\\?")` will return `"\\\\*a\\\\?"` rather than\n`"*a?"`.  This is akin to setting the `nullglob` option in bash, except\nthat it does not resolve escaped pattern characters.\n\nIf brace expansion is not disabled, then it is performed before any\nother interpretation of the glob pattern.  Thus, a pattern like\n`+(a|{b),c)}`, which would not be valid in bash or zsh, is expanded\n**first** into the set of `+(a|b)` and `+(a|c)`, and those patterns are\nchecked for validity.  Since those two are valid, matching proceeds.\n',
1907 silly resolved     readmeFilename: 'README.md',
1907 silly resolved     bugs: { url: 'https://github.com/isaacs/minimatch/issues' },
1907 silly resolved     homepage: 'https://github.com/isaacs/minimatch',
1907 silly resolved     _id: 'minimatch@0.3.0',
1907 silly resolved     _from: 'minimatch@>=0.2.4' } ]
1908 info install minimatch@0.3.0 into /usr/local/lib/node_modules/jade/node_modules/monocle/node_modules/readdirp
1909 info installOne minimatch@0.3.0
1910 silly lockFile 8bd42136-wordwrap-0-0-2 wordwrap@~0.0.2
1911 silly lockFile 8bd42136-wordwrap-0-0-2 wordwrap@~0.0.2
1912 info /usr/local/lib/node_modules/jade/node_modules/monocle/node_modules/readdirp/node_modules/minimatch unbuild
1913 silly gunzTarPerm modes [ '755', '644' ]
1914 verbose tar unpack /Users/marc.bluemner/.npm/minimatch/0.3.0/package.tgz
1915 silly lockFile c9138145--readdirp-node-modules-minimatch tar:///usr/local/lib/node_modules/jade/node_modules/monocle/node_modules/readdirp/node_modules/minimatch
1916 verbose lock tar:///usr/local/lib/node_modules/jade/node_modules/monocle/node_modules/readdirp/node_modules/minimatch /Users/marc.bluemner/.npm/c9138145--readdirp-node-modules-minimatch.lock
1917 silly lockFile 321396b7--npm-minimatch-0-3-0-package-tgz tar:///Users/marc.bluemner/.npm/minimatch/0.3.0/package.tgz
1918 verbose lock tar:///Users/marc.bluemner/.npm/minimatch/0.3.0/package.tgz /Users/marc.bluemner/.npm/321396b7--npm-minimatch-0-3-0-package-tgz.lock
1919 info preinstall optimist@0.3.7
1920 info preinstall async@0.2.10
1921 silly gunzTarPerm modes [ '755', '644' ]
1922 verbose readDependencies using package.json deps
1923 silly gunzTarPerm extractEntry package.json
1924 verbose readDependencies using package.json deps
1925 verbose readDependencies using package.json deps
1926 verbose readDependencies using package.json deps
1927 silly resolved []
1928 verbose about to build /usr/local/lib/node_modules/jade/node_modules/constantinople/node_modules/uglify-js/node_modules/async
1929 info build /usr/local/lib/node_modules/jade/node_modules/constantinople/node_modules/uglify-js/node_modules/async
1930 verbose linkStuff [ true,
1930 verbose linkStuff   '/usr/local/lib/node_modules',
1930 verbose linkStuff   false,
1930 verbose linkStuff   '/usr/local/lib/node_modules/jade/node_modules/constantinople/node_modules/uglify-js/node_modules' ]
1931 info linkStuff async@0.2.10
1932 verbose linkBins async@0.2.10
1933 verbose linkMans async@0.2.10
1934 verbose rebuildBundles async@0.2.10
1935 info install async@0.2.10
1936 info postinstall async@0.2.10
1937 silly gunzTarPerm modes [ '755', '644' ]
1938 silly gunzTarPerm extractEntry .npmignore
1939 silly gunzTarPerm extractEntry README.md
1940 silly resolved [ { name: 'wordwrap',
1940 silly resolved     description: 'Wrap those words. Show them at what columns to start and stop.',
1940 silly resolved     version: '0.0.2',
1940 silly resolved     repository:
1940 silly resolved      { type: 'git',
1940 silly resolved        url: 'git://github.com/substack/node-wordwrap.git' },
1940 silly resolved     main: './index.js',
1940 silly resolved     keywords: [ 'word', 'wrap', 'rule', 'format', 'column' ],
1940 silly resolved     directories: { lib: '.', example: 'example', test: 'test' },
1940 silly resolved     scripts: { test: 'expresso' },
1940 silly resolved     devDependencies: { expresso: '=0.7.x' },
1940 silly resolved     engines: { node: '>=0.4.0' },
1940 silly resolved     license: 'MIT/X11',
1940 silly resolved     author:
1940 silly resolved      { name: 'James Halliday',
1940 silly resolved        email: 'mail@substack.net',
1940 silly resolved        url: 'http://substack.net' },
1940 silly resolved     readme: 'wordwrap\n========\n\nWrap your words.\n\nexample\n=======\n\nmade out of meat\n----------------\n\nmeat.js\n\n    var wrap = require(\'wordwrap\')(15);\n    console.log(wrap(\'You and your whole family are made out of meat.\'));\n\noutput:\n\n    You and your\n    whole family\n    are made out\n    of meat.\n\ncentered\n--------\n\ncenter.js\n\n    var wrap = require(\'wordwrap\')(20, 60);\n    console.log(wrap(\n        \'At long last the struggle and tumult was over.\'\n        + \' The machines had finally cast off their oppressors\'\n        + \' and were finally free to roam the cosmos.\'\n        + \'\\n\'\n        + \'Free of purpose, free of obligation.\'\n        + \' Just drifting through emptiness.\'\n        + \' The sun was just another point of light.\'\n    ));\n\noutput:\n\n                        At long last the struggle and tumult\n                        was over. The machines had finally cast\n                        off their oppressors and were finally\n                        free to roam the cosmos.\n                        Free of purpose, free of obligation.\n                        Just drifting through emptiness. The\n                        sun was just another point of light.\n\nmethods\n=======\n\nvar wrap = require(\'wordwrap\');\n\nwrap(stop), wrap(start, stop, params={mode:"soft"})\n---------------------------------------------------\n\nReturns a function that takes a string and returns a new string.\n\nPad out lines with spaces out to column `start` and then wrap until column\n`stop`. If a word is longer than `stop - start` characters it will overflow.\n\nIn "soft" mode, split chunks by `/(\\S+\\s+/` and don\'t break up chunks which are\nlonger than `stop - start`, in "hard" mode, split chunks with `/\\b/` and break\nup chunks longer than `stop - start`.\n\nwrap.hard(start, stop)\n----------------------\n\nLike `wrap()` but with `params.mode = "hard"`.\n',
1940 silly resolved     readmeFilename: 'README.markdown',
1940 silly resolved     bugs: { url: 'https://github.com/substack/node-wordwrap/issues' },
1940 silly resolved     homepage: 'https://github.com/substack/node-wordwrap',
1940 silly resolved     _id: 'wordwrap@0.0.2',
1940 silly resolved     _from: 'wordwrap@~0.0.2' } ]
1941 info install wordwrap@0.0.2 into /usr/local/lib/node_modules/jade/node_modules/transformers/node_modules/uglify-js/node_modules/optimist
1942 info installOne wordwrap@0.0.2
1943 info /usr/local/lib/node_modules/jade/node_modules/transformers/node_modules/uglify-js/node_modules/optimist/node_modules/wordwrap unbuild
1944 verbose tar unpack /Users/marc.bluemner/.npm/wordwrap/0.0.2/package.tgz
1945 silly lockFile 5ce8b386-s-optimist-node-modules-wordwrap tar:///usr/local/lib/node_modules/jade/node_modules/transformers/node_modules/uglify-js/node_modules/optimist/node_modules/wordwrap
1946 verbose lock tar:///usr/local/lib/node_modules/jade/node_modules/transformers/node_modules/uglify-js/node_modules/optimist/node_modules/wordwrap /Users/marc.bluemner/.npm/5ce8b386-s-optimist-node-modules-wordwrap.lock
1947 silly lockFile 4a37d0fa-r-npm-wordwrap-0-0-2-package-tgz tar:///Users/marc.bluemner/.npm/wordwrap/0.0.2/package.tgz
1948 verbose lock tar:///Users/marc.bluemner/.npm/wordwrap/0.0.2/package.tgz /Users/marc.bluemner/.npm/4a37d0fa-r-npm-wordwrap-0-0-2-package-tgz.lock
1949 verbose cache add [ 'wordwrap@~0.0.2', null ]
1950 verbose cache add name=undefined spec="wordwrap@~0.0.2" args=["wordwrap@~0.0.2",null]
1951 verbose parsed url { protocol: null,
1951 verbose parsed url   slashes: null,
1951 verbose parsed url   auth: null,
1951 verbose parsed url   host: null,
1951 verbose parsed url   port: null,
1951 verbose parsed url   hostname: null,
1951 verbose parsed url   hash: null,
1951 verbose parsed url   search: null,
1951 verbose parsed url   query: null,
1951 verbose parsed url   pathname: 'wordwrap@~0.0.2',
1951 verbose parsed url   path: 'wordwrap@~0.0.2',
1951 verbose parsed url   href: 'wordwrap@~0.0.2' }
1952 verbose cache add name="wordwrap" spec="~0.0.2" args=["wordwrap","~0.0.2"]
1953 verbose parsed url { protocol: null,
1953 verbose parsed url   slashes: null,
1953 verbose parsed url   auth: null,
1953 verbose parsed url   host: null,
1953 verbose parsed url   port: null,
1953 verbose parsed url   hostname: null,
1953 verbose parsed url   hash: null,
1953 verbose parsed url   search: null,
1953 verbose parsed url   query: null,
1953 verbose parsed url   pathname: '~0.0.2',
1953 verbose parsed url   path: '~0.0.2',
1953 verbose parsed url   href: '~0.0.2' }
1954 verbose addNamed [ 'wordwrap', '~0.0.2' ]
1955 verbose addNamed [ null, '>=0.0.2-0 <0.1.0-0' ]
1956 silly lockFile 8bd42136-wordwrap-0-0-2 wordwrap@~0.0.2
1957 verbose lock wordwrap@~0.0.2 /Users/marc.bluemner/.npm/8bd42136-wordwrap-0-0-2.lock
1958 silly gunzTarPerm extractEntry package.json
1959 silly gunzTarPerm extractEntry package.json
1960 silly addNameRange { name: 'wordwrap', range: '>=0.0.2-0 <0.1.0-0', hasData: false }
1961 silly gunzTarPerm modes [ '755', '644' ]
1962 verbose registry.get wordwrap not expired, no request
1963 silly addNameRange number 2 { name: 'wordwrap', range: '>=0.0.2-0 <0.1.0-0', hasData: true }
1964 silly addNameRange versions [ 'wordwrap', [ '0.0.1', '0.0.2' ] ]
1965 verbose addNamed [ 'wordwrap', '0.0.2' ]
1966 verbose addNamed [ '0.0.2', '0.0.2' ]
1967 silly lockFile 24a694c8-wordwrap-0-0-2 wordwrap@0.0.2
1968 verbose lock wordwrap@0.0.2 /Users/marc.bluemner/.npm/24a694c8-wordwrap-0-0-2.lock
1969 silly gunzTarPerm extractEntry LICENSE
1970 silly gunzTarPerm extractEntry index.js
1971 silly gunzTarPerm extractEntry .npmignore
1972 silly gunzTarPerm extractEntry README.md
1973 silly lockFile 24a694c8-wordwrap-0-0-2 wordwrap@0.0.2
1974 silly lockFile 24a694c8-wordwrap-0-0-2 wordwrap@0.0.2
1975 silly gunzTarPerm extractEntry package.json
1976 silly lockFile 8bd42136-wordwrap-0-0-2 wordwrap@~0.0.2
1977 silly lockFile 8bd42136-wordwrap-0-0-2 wordwrap@~0.0.2
1978 silly gunzTarPerm extractEntry LICENSE
1979 silly gunzTarPerm extractEntry .npmignore
1980 silly gunzTarPerm extractEntry index.js
1981 silly gunzTarPerm extractEntry .travis.yml
1982 silly gunzTarPerm extractEntry LICENSE
1983 silly gunzTarPerm extractEntry Makefile.dryice.js
1984 silly gunzTarPerm extractEntry .travis.yml
1985 silly gunzTarPerm extractEntry README.markdown
1986 silly gunzTarPerm extractEntry example/center.js
1987 silly gunzTarPerm extractEntry example/meat.js
1988 silly gunzTarPerm extractEntry test/break.js
1989 silly gunzTarPerm extractEntry test/wrap.js
1990 silly gunzTarPerm extractEntry test/idleness.txt
1991 silly gunzTarPerm extractEntry minimatch.js
1992 silly gunzTarPerm extractEntry test/basic.js
1993 silly gunzTarPerm extractEntry example/bool.js
1994 silly gunzTarPerm extractEntry example/default_singles.js
1995 silly gunzTarPerm extractEntry test/brace-expand.js
1996 silly gunzTarPerm extractEntry test/caching.js
1997 silly gunzTarPerm extractEntry CHANGELOG.md
1998 silly gunzTarPerm extractEntry build/assert-shim.js
1999 silly gunzTarPerm extractEntry test/defaults.js
2000 silly gunzTarPerm extractEntry test/extglob-ending-with-state-char.js
2001 silly gunzTarPerm extractEntry example/divide.js
2002 silly gunzTarPerm extractEntry example/line_count.js
2003 silly gunzTarPerm extractEntry build/mini-require.js
2004 silly gunzTarPerm extractEntry build/suffix-browser.js
2005 silly gunzTarPerm extractEntry example/default_hash.js
2006 silly gunzTarPerm extractEntry example/line_count_wrap.js
2007 silly gunzTarPerm extractEntry build/test-prefix.js
2008 silly gunzTarPerm extractEntry build/test-suffix.js
2009 silly gunzTarPerm extractEntry example/nonopt.js
2010 silly gunzTarPerm extractEntry example/reflect.js
2011 silly resolved [ { name: 'wordwrap',
2011 silly resolved     description: 'Wrap those words. Show them at what columns to start and stop.',
2011 silly resolved     version: '0.0.2',
2011 silly resolved     repository:
2011 silly resolved      { type: 'git',
2011 silly resolved        url: 'git://github.com/substack/node-wordwrap.git' },
2011 silly resolved     main: './index.js',
2011 silly resolved     keywords: [ 'word', 'wrap', 'rule', 'format', 'column' ],
2011 silly resolved     directories: { lib: '.', example: 'example', test: 'test' },
2011 silly resolved     scripts: { test: 'expresso' },
2011 silly resolved     devDependencies: { expresso: '=0.7.x' },
2011 silly resolved     engines: { node: '>=0.4.0' },
2011 silly resolved     license: 'MIT/X11',
2011 silly resolved     author:
2011 silly resolved      { name: 'James Halliday',
2011 silly resolved        email: 'mail@substack.net',
2011 silly resolved        url: 'http://substack.net' },
2011 silly resolved     readme: 'wordwrap\n========\n\nWrap your words.\n\nexample\n=======\n\nmade out of meat\n----------------\n\nmeat.js\n\n    var wrap = require(\'wordwrap\')(15);\n    console.log(wrap(\'You and your whole family are made out of meat.\'));\n\noutput:\n\n    You and your\n    whole family\n    are made out\n    of meat.\n\ncentered\n--------\n\ncenter.js\n\n    var wrap = require(\'wordwrap\')(20, 60);\n    console.log(wrap(\n        \'At long last the struggle and tumult was over.\'\n        + \' The machines had finally cast off their oppressors\'\n        + \' and were finally free to roam the cosmos.\'\n        + \'\\n\'\n        + \'Free of purpose, free of obligation.\'\n        + \' Just drifting through emptiness.\'\n        + \' The sun was just another point of light.\'\n    ));\n\noutput:\n\n                        At long last the struggle and tumult\n                        was over. The machines had finally cast\n                        off their oppressors and were finally\n                        free to roam the cosmos.\n                        Free of purpose, free of obligation.\n                        Just drifting through emptiness. The\n                        sun was just another point of light.\n\nmethods\n=======\n\nvar wrap = require(\'wordwrap\');\n\nwrap(stop), wrap(start, stop, params={mode:"soft"})\n---------------------------------------------------\n\nReturns a function that takes a string and returns a new string.\n\nPad out lines with spaces out to column `start` and then wrap until column\n`stop`. If a word is longer than `stop - start` characters it will overflow.\n\nIn "soft" mode, split chunks by `/(\\S+\\s+/` and don\'t break up chunks which are\nlonger than `stop - start`, in "hard" mode, split chunks with `/\\b/` and break\nup chunks longer than `stop - start`.\n\nwrap.hard(start, stop)\n----------------------\n\nLike `wrap()` but with `params.mode = "hard"`.\n',
2011 silly resolved     readmeFilename: 'README.markdown',
2011 silly resolved     bugs: { url: 'https://github.com/substack/node-wordwrap/issues' },
2011 silly resolved     homepage: 'https://github.com/substack/node-wordwrap',
2011 silly resolved     _id: 'wordwrap@0.0.2',
2011 silly resolved     _from: 'wordwrap@~0.0.2' } ]
2012 info install wordwrap@0.0.2 into /usr/local/lib/node_modules/jade/node_modules/with/node_modules/uglify-js/node_modules/optimist
2013 info installOne wordwrap@0.0.2
2014 info /usr/local/lib/node_modules/jade/node_modules/with/node_modules/uglify-js/node_modules/optimist/node_modules/wordwrap unbuild
2015 silly gunzTarPerm extractEntry build/prefix-source-map.jsm
2016 silly gunzTarPerm extractEntry build/prefix-utils.jsm
2017 verbose tar unpack /Users/marc.bluemner/.npm/wordwrap/0.0.2/package.tgz
2018 silly lockFile fc995d92-s-optimist-node-modules-wordwrap tar:///usr/local/lib/node_modules/jade/node_modules/with/node_modules/uglify-js/node_modules/optimist/node_modules/wordwrap
2019 verbose lock tar:///usr/local/lib/node_modules/jade/node_modules/with/node_modules/uglify-js/node_modules/optimist/node_modules/wordwrap /Users/marc.bluemner/.npm/fc995d92-s-optimist-node-modules-wordwrap.lock
2020 silly lockFile 4a37d0fa-r-npm-wordwrap-0-0-2-package-tgz tar:///Users/marc.bluemner/.npm/wordwrap/0.0.2/package.tgz
2021 verbose lock tar:///Users/marc.bluemner/.npm/wordwrap/0.0.2/package.tgz /Users/marc.bluemner/.npm/4a37d0fa-r-npm-wordwrap-0-0-2-package-tgz.lock
2022 silly gunzTarPerm extractEntry example/short.js
2023 silly gunzTarPerm extractEntry example/string.js
2024 silly gunzTarPerm extractEntry example/boolean_single.js
2025 silly gunzTarPerm extractEntry example/usage-options.js
2026 silly gunzTarPerm extractEntry build/suffix-source-map.jsm
2027 silly gunzTarPerm extractEntry build/suffix-utils.jsm
2028 silly gunzTarPerm extractEntry example/boolean_double.js
2029 silly gunzTarPerm extractEntry example/xup.js
2030 silly gunzTarPerm extractEntry lib/source-map.js
2031 silly gunzTarPerm extractEntry lib/source-map/array-set.js
2032 silly gunzTarPerm extractEntry example/line_count_options.js
2033 silly gunzTarPerm extractEntry readme.markdown
2034 silly gunzTarPerm extractEntry test/_.js
2035 silly gunzTarPerm extractEntry test/parse.js
2036 silly gunzTarPerm extractEntry lib/source-map/base64-vlq.js
2037 silly gunzTarPerm extractEntry lib/source-map/base64.js
2038 silly gunzTarPerm extractEntry test/usage.js
2039 silly gunzTarPerm extractEntry test/_/argv.js
2040 silly gunzTarPerm extractEntry lib/source-map/binary-search.js
2041 silly gunzTarPerm extractEntry lib/source-map/source-map-consumer.js
2042 silly gunzTarPerm extractEntry test/_/bin.js
2043 silly gunzTarPerm extractEntry lib/source-map/source-map-generator.js
2044 silly gunzTarPerm extractEntry lib/source-map/source-node.js
2045 silly gunzTarPerm extractEntry lib/source-map/util.js
2046 silly gunzTarPerm extractEntry test/run-tests.js
2047 silly gunzTarPerm extractEntry test/source-map/test-api.js
2048 silly gunzTarPerm extractEntry test/source-map/test-base64-vlq.js
2049 silly lockFile 5ce8b386-s-optimist-node-modules-wordwrap tar:///usr/local/lib/node_modules/jade/node_modules/transformers/node_modules/uglify-js/node_modules/optimist/node_modules/wordwrap
2050 silly lockFile 5ce8b386-s-optimist-node-modules-wordwrap tar:///usr/local/lib/node_modules/jade/node_modules/transformers/node_modules/uglify-js/node_modules/optimist/node_modules/wordwrap
2051 silly lockFile 4a37d0fa-r-npm-wordwrap-0-0-2-package-tgz tar:///Users/marc.bluemner/.npm/wordwrap/0.0.2/package.tgz
2052 silly lockFile 4a37d0fa-r-npm-wordwrap-0-0-2-package-tgz tar:///Users/marc.bluemner/.npm/wordwrap/0.0.2/package.tgz
2053 info preinstall wordwrap@0.0.2
2054 silly gunzTarPerm extractEntry test/source-map/test-base64.js
2055 silly gunzTarPerm extractEntry test/source-map/test-binary-search.js
2056 verbose readDependencies using package.json deps
2057 verbose readDependencies using package.json deps
2058 silly resolved []
2059 verbose about to build /usr/local/lib/node_modules/jade/node_modules/transformers/node_modules/uglify-js/node_modules/optimist/node_modules/wordwrap
2060 info build /usr/local/lib/node_modules/jade/node_modules/transformers/node_modules/uglify-js/node_modules/optimist/node_modules/wordwrap
2061 verbose linkStuff [ true,
2061 verbose linkStuff   '/usr/local/lib/node_modules',
2061 verbose linkStuff   false,
2061 verbose linkStuff   '/usr/local/lib/node_modules/jade/node_modules/transformers/node_modules/uglify-js/node_modules/optimist/node_modules' ]
2062 info linkStuff wordwrap@0.0.2
2063 verbose linkBins wordwrap@0.0.2
2064 verbose linkMans wordwrap@0.0.2
2065 verbose rebuildBundles wordwrap@0.0.2
2066 info install wordwrap@0.0.2
2067 info postinstall wordwrap@0.0.2
2068 verbose about to build /usr/local/lib/node_modules/jade/node_modules/transformers/node_modules/uglify-js/node_modules/optimist
2069 info build /usr/local/lib/node_modules/jade/node_modules/transformers/node_modules/uglify-js/node_modules/optimist
2070 verbose linkStuff [ true,
2070 verbose linkStuff   '/usr/local/lib/node_modules',
2070 verbose linkStuff   false,
2070 verbose linkStuff   '/usr/local/lib/node_modules/jade/node_modules/transformers/node_modules/uglify-js/node_modules' ]
2071 info linkStuff optimist@0.3.7
2072 verbose linkBins optimist@0.3.7
2073 verbose linkMans optimist@0.3.7
2074 verbose rebuildBundles optimist@0.3.7
2075 verbose rebuildBundles [ 'wordwrap' ]
2076 info install optimist@0.3.7
2077 silly gunzTarPerm extractEntry test/source-map/test-array-set.js
2078 silly gunzTarPerm extractEntry test/source-map/test-source-map-consumer.js
2079 info postinstall optimist@0.3.7
2080 silly gunzTarPerm extractEntry test/source-map/test-source-map-generator.js
2081 silly gunzTarPerm extractEntry test/source-map/test-source-node.js
2082 silly gunzTarPerm extractEntry test/source-map/test-util.js
2083 silly gunzTarPerm extractEntry test/source-map/util.js
2084 silly lockFile c9138145--readdirp-node-modules-minimatch tar:///usr/local/lib/node_modules/jade/node_modules/monocle/node_modules/readdirp/node_modules/minimatch
2085 silly lockFile c9138145--readdirp-node-modules-minimatch tar:///usr/local/lib/node_modules/jade/node_modules/monocle/node_modules/readdirp/node_modules/minimatch
2086 silly lockFile 321396b7--npm-minimatch-0-3-0-package-tgz tar:///Users/marc.bluemner/.npm/minimatch/0.3.0/package.tgz
2087 silly lockFile 321396b7--npm-minimatch-0-3-0-package-tgz tar:///Users/marc.bluemner/.npm/minimatch/0.3.0/package.tgz
2088 silly gunzTarPerm extractEntry test/source-map/test-dog-fooding.js
2089 info preinstall minimatch@0.3.0
2090 verbose readDependencies using package.json deps
2091 verbose readDependencies using package.json deps
2092 verbose cache add [ 'lru-cache@2', null ]
2093 verbose cache add name=undefined spec="lru-cache@2" args=["lru-cache@2",null]
2094 verbose parsed url { protocol: null,
2094 verbose parsed url   slashes: null,
2094 verbose parsed url   auth: null,
2094 verbose parsed url   host: null,
2094 verbose parsed url   port: null,
2094 verbose parsed url   hostname: null,
2094 verbose parsed url   hash: null,
2094 verbose parsed url   search: null,
2094 verbose parsed url   query: null,
2094 verbose parsed url   pathname: 'lru-cache@2',
2094 verbose parsed url   path: 'lru-cache@2',
2094 verbose parsed url   href: 'lru-cache@2' }
2095 verbose cache add name="lru-cache" spec="2" args=["lru-cache","2"]
2096 verbose parsed url { protocol: null,
2096 verbose parsed url   slashes: null,
2096 verbose parsed url   auth: null,
2096 verbose parsed url   host: null,
2096 verbose parsed url   port: null,
2096 verbose parsed url   hostname: null,
2096 verbose parsed url   hash: null,
2096 verbose parsed url   search: null,
2096 verbose parsed url   query: null,
2096 verbose parsed url   pathname: '2',
2096 verbose parsed url   path: '2',
2096 verbose parsed url   href: '2' }
2097 verbose addNamed [ 'lru-cache', '2' ]
2098 verbose addNamed [ null, '>=2.0.0-0 <3.0.0-0' ]
2099 silly lockFile b4f9d1ff-lru-cache-2 lru-cache@2
2100 verbose lock lru-cache@2 /Users/marc.bluemner/.npm/b4f9d1ff-lru-cache-2.lock
2101 verbose cache add [ 'sigmund@~1.0.0', null ]
2102 verbose cache add name=undefined spec="sigmund@~1.0.0" args=["sigmund@~1.0.0",null]
2103 verbose parsed url { protocol: null,
2103 verbose parsed url   slashes: null,
2103 verbose parsed url   auth: null,
2103 verbose parsed url   host: null,
2103 verbose parsed url   port: null,
2103 verbose parsed url   hostname: null,
2103 verbose parsed url   hash: null,
2103 verbose parsed url   search: null,
2103 verbose parsed url   query: null,
2103 verbose parsed url   pathname: 'sigmund@~1.0.0',
2103 verbose parsed url   path: 'sigmund@~1.0.0',
2103 verbose parsed url   href: 'sigmund@~1.0.0' }
2104 verbose cache add name="sigmund" spec="~1.0.0" args=["sigmund","~1.0.0"]
2105 verbose parsed url { protocol: null,
2105 verbose parsed url   slashes: null,
2105 verbose parsed url   auth: null,
2105 verbose parsed url   host: null,
2105 verbose parsed url   port: null,
2105 verbose parsed url   hostname: null,
2105 verbose parsed url   hash: null,
2105 verbose parsed url   search: null,
2105 verbose parsed url   query: null,
2105 verbose parsed url   pathname: '~1.0.0',
2105 verbose parsed url   path: '~1.0.0',
2105 verbose parsed url   href: '~1.0.0' }
2106 verbose addNamed [ 'sigmund', '~1.0.0' ]
2107 verbose addNamed [ null, '>=1.0.0-0 <1.1.0-0' ]
2108 silly lockFile 584a4a05-sigmund-1-0-0 sigmund@~1.0.0
2109 verbose lock sigmund@~1.0.0 /Users/marc.bluemner/.npm/584a4a05-sigmund-1-0-0.lock
2110 silly addNameRange { name: 'lru-cache',
2110 silly addNameRange   range: '>=2.0.0-0 <3.0.0-0',
2110 silly addNameRange   hasData: false }
2111 silly addNameRange { name: 'sigmund', range: '>=1.0.0-0 <1.1.0-0', hasData: false }
2112 http 304 https://registry.npmjs.org/amdefine
2113 silly registry.get cb [ 304,
2113 silly registry.get   { date: 'Mon, 26 May 2014 17:04:09 GMT',
2113 silly registry.get     server: 'Apache',
2113 silly registry.get     via: '1.1 varnish',
2113 silly registry.get     'last-modified': 'Sun, 25 May 2014 22:13:45 GMT',
2113 silly registry.get     'cache-control': 'max-age=1',
2113 silly registry.get     etag: '"AIUP666S38PGJM2AVPD28X9YX"',
2113 silly registry.get     'x-served-by': 'cache-lcy1135-LCY',
2113 silly registry.get     'x-cache': 'HIT',
2113 silly registry.get     'x-cache-hits': '480',
2113 silly registry.get     'x-timer': 'S1401123849.189307,VS0,VE0',
2113 silly registry.get     vary: 'Accept',
2113 silly registry.get     'content-length': '0',
2113 silly registry.get     'keep-alive': 'timeout=10, max=50',
2113 silly registry.get     connection: 'Keep-Alive' } ]
2114 verbose etag amdefine from cache
2115 silly gunzTarPerm modes [ '755', '644' ]
2116 silly addNameRange number 2 { name: 'amdefine', range: '>=0.0.4', hasData: true }
2117 silly addNameRange versions [ 'amdefine',
2117 silly addNameRange   [ '0.0.1',
2117 silly addNameRange     '0.0.2',
2117 silly addNameRange     '0.0.3',
2117 silly addNameRange     '0.0.4',
2117 silly addNameRange     '0.0.5',
2117 silly addNameRange     '0.0.6',
2117 silly addNameRange     '0.0.7',
2117 silly addNameRange     '0.0.8',
2117 silly addNameRange     '0.1.0' ] ]
2118 verbose addNamed [ 'amdefine', '0.1.0' ]
2119 verbose addNamed [ '0.1.0', '0.1.0' ]
2120 silly lockFile 3c57e17c-amdefine-0-1-0 amdefine@0.1.0
2121 verbose lock amdefine@0.1.0 /Users/marc.bluemner/.npm/3c57e17c-amdefine-0-1-0.lock
2122 silly gunzTarPerm extractEntry package.json
2123 silly gunzTarPerm extractEntry .npmignore
2124 silly gunzTarPerm extractEntry index.js
2125 silly gunzTarPerm extractEntry README.markdown
2126 silly gunzTarPerm extractEntry example/center.js
2127 silly gunzTarPerm extractEntry example/meat.js
2128 silly gunzTarPerm extractEntry test/break.js
2129 silly gunzTarPerm extractEntry test/wrap.js
2130 silly gunzTarPerm extractEntry test/idleness.txt
2131 silly lockFile fbcfef9e--uglify-js-node-modules-optimist tar:///usr/local/lib/node_modules/jade/node_modules/constantinople/node_modules/uglify-js/node_modules/optimist
2132 silly lockFile fbcfef9e--uglify-js-node-modules-optimist tar:///usr/local/lib/node_modules/jade/node_modules/constantinople/node_modules/uglify-js/node_modules/optimist
2133 silly lockFile 04634416-r-npm-optimist-0-3-7-package-tgz tar:///Users/marc.bluemner/.npm/optimist/0.3.7/package.tgz
2134 silly lockFile 04634416-r-npm-optimist-0-3-7-package-tgz tar:///Users/marc.bluemner/.npm/optimist/0.3.7/package.tgz
2135 info preinstall optimist@0.3.7
2136 verbose readDependencies using package.json deps
2137 verbose readDependencies using package.json deps
2138 verbose cache add [ 'wordwrap@~0.0.2', null ]
2139 verbose cache add name=undefined spec="wordwrap@~0.0.2" args=["wordwrap@~0.0.2",null]
2140 verbose parsed url { protocol: null,
2140 verbose parsed url   slashes: null,
2140 verbose parsed url   auth: null,
2140 verbose parsed url   host: null,
2140 verbose parsed url   port: null,
2140 verbose parsed url   hostname: null,
2140 verbose parsed url   hash: null,
2140 verbose parsed url   search: null,
2140 verbose parsed url   query: null,
2140 verbose parsed url   pathname: 'wordwrap@~0.0.2',
2140 verbose parsed url   path: 'wordwrap@~0.0.2',
2140 verbose parsed url   href: 'wordwrap@~0.0.2' }
2141 verbose cache add name="wordwrap" spec="~0.0.2" args=["wordwrap","~0.0.2"]
2142 verbose parsed url { protocol: null,
2142 verbose parsed url   slashes: null,
2142 verbose parsed url   auth: null,
2142 verbose parsed url   host: null,
2142 verbose parsed url   port: null,
2142 verbose parsed url   hostname: null,
2142 verbose parsed url   hash: null,
2142 verbose parsed url   search: null,
2142 verbose parsed url   query: null,
2142 verbose parsed url   pathname: '~0.0.2',
2142 verbose parsed url   path: '~0.0.2',
2142 verbose parsed url   href: '~0.0.2' }
2143 verbose addNamed [ 'wordwrap', '~0.0.2' ]
2144 verbose addNamed [ null, '>=0.0.2-0 <0.1.0-0' ]
2145 silly lockFile 8bd42136-wordwrap-0-0-2 wordwrap@~0.0.2
2146 verbose lock wordwrap@~0.0.2 /Users/marc.bluemner/.npm/8bd42136-wordwrap-0-0-2.lock
2147 silly addNameRange { name: 'wordwrap', range: '>=0.0.2-0 <0.1.0-0', hasData: false }
2148 verbose registry.get wordwrap not expired, no request
2149 silly addNameRange number 2 { name: 'wordwrap', range: '>=0.0.2-0 <0.1.0-0', hasData: true }
2150 silly addNameRange versions [ 'wordwrap', [ '0.0.1', '0.0.2' ] ]
2151 verbose addNamed [ 'wordwrap', '0.0.2' ]
2152 verbose addNamed [ '0.0.2', '0.0.2' ]
2153 silly lockFile 24a694c8-wordwrap-0-0-2 wordwrap@0.0.2
2154 verbose lock wordwrap@0.0.2 /Users/marc.bluemner/.npm/24a694c8-wordwrap-0-0-2.lock
2155 silly lockFile 24a694c8-wordwrap-0-0-2 wordwrap@0.0.2
2156 silly lockFile 24a694c8-wordwrap-0-0-2 wordwrap@0.0.2
2157 silly lockFile 8bd42136-wordwrap-0-0-2 wordwrap@~0.0.2
2158 silly lockFile 8bd42136-wordwrap-0-0-2 wordwrap@~0.0.2
2159 verbose url raw lru-cache
2160 verbose url resolving [ 'https://registry.npmjs.org/', './lru-cache' ]
2161 verbose url resolved https://registry.npmjs.org/lru-cache
2162 info trying registry request attempt 1 at 19:04:09
2163 verbose etag "6EAH4E2XKATH9G2WW7G1L4L00"
2164 http GET https://registry.npmjs.org/lru-cache
2165 verbose url raw sigmund
2166 verbose url resolving [ 'https://registry.npmjs.org/', './sigmund' ]
2167 verbose url resolved https://registry.npmjs.org/sigmund
2168 info trying registry request attempt 1 at 19:04:09
2169 verbose etag "2W47O7MMYNTT2NUU8NH1SRIO7"
2170 http GET https://registry.npmjs.org/sigmund
2171 silly lockFile 3c57e17c-amdefine-0-1-0 amdefine@0.1.0
2172 silly lockFile 3c57e17c-amdefine-0-1-0 amdefine@0.1.0
2173 silly lockFile 165d2d7b-amdefine-0-0-4 amdefine@>=0.0.4
2174 silly lockFile 165d2d7b-amdefine-0-0-4 amdefine@>=0.0.4
2175 silly lockFile b69885d0-glify-js-node-modules-source-map tar:///usr/local/lib/node_modules/jade/node_modules/constantinople/node_modules/uglify-js/node_modules/source-map
2176 silly lockFile b69885d0-glify-js-node-modules-source-map tar:///usr/local/lib/node_modules/jade/node_modules/constantinople/node_modules/uglify-js/node_modules/source-map
2177 silly lockFile a877218c-pm-source-map-0-1-33-package-tgz tar:///Users/marc.bluemner/.npm/source-map/0.1.33/package.tgz
2178 silly lockFile a877218c-pm-source-map-0-1-33-package-tgz tar:///Users/marc.bluemner/.npm/source-map/0.1.33/package.tgz
2179 info preinstall source-map@0.1.33
2180 verbose readDependencies using package.json deps
2181 verbose readDependencies using package.json deps
2182 verbose cache add [ 'amdefine@>=0.0.4', null ]
2183 verbose cache add name=undefined spec="amdefine@>=0.0.4" args=["amdefine@>=0.0.4",null]
2184 verbose parsed url { protocol: null,
2184 verbose parsed url   slashes: null,
2184 verbose parsed url   auth: null,
2184 verbose parsed url   host: null,
2184 verbose parsed url   port: null,
2184 verbose parsed url   hostname: null,
2184 verbose parsed url   hash: null,
2184 verbose parsed url   search: null,
2184 verbose parsed url   query: null,
2184 verbose parsed url   pathname: 'amdefine@%3E=0.0.4',
2184 verbose parsed url   path: 'amdefine@%3E=0.0.4',
2184 verbose parsed url   href: 'amdefine@%3E=0.0.4' }
2185 verbose cache add name="amdefine" spec=">=0.0.4" args=["amdefine",">=0.0.4"]
2186 verbose parsed url { protocol: null,
2186 verbose parsed url   slashes: null,
2186 verbose parsed url   auth: null,
2186 verbose parsed url   host: null,
2186 verbose parsed url   port: null,
2186 verbose parsed url   hostname: null,
2186 verbose parsed url   hash: null,
2186 verbose parsed url   search: null,
2186 verbose parsed url   query: null,
2186 verbose parsed url   pathname: '%3E=0.0.4',
2186 verbose parsed url   path: '%3E=0.0.4',
2186 verbose parsed url   href: '%3E=0.0.4' }
2187 verbose addNamed [ 'amdefine', '>=0.0.4' ]
2188 verbose addNamed [ null, '>=0.0.4' ]
2189 silly lockFile 165d2d7b-amdefine-0-0-4 amdefine@>=0.0.4
2190 verbose lock amdefine@>=0.0.4 /Users/marc.bluemner/.npm/165d2d7b-amdefine-0-0-4.lock
2191 silly addNameRange { name: 'amdefine', range: '>=0.0.4', hasData: false }
2192 verbose registry.get amdefine not expired, no request
2193 silly addNameRange number 2 { name: 'amdefine', range: '>=0.0.4', hasData: true }
2194 silly addNameRange versions [ 'amdefine',
2194 silly addNameRange   [ '0.0.1',
2194 silly addNameRange     '0.0.2',
2194 silly addNameRange     '0.0.3',
2194 silly addNameRange     '0.0.4',
2194 silly addNameRange     '0.0.5',
2194 silly addNameRange     '0.0.6',
2194 silly addNameRange     '0.0.7',
2194 silly addNameRange     '0.0.8',
2194 silly addNameRange     '0.1.0' ] ]
2195 verbose addNamed [ 'amdefine', '0.1.0' ]
2196 verbose addNamed [ '0.1.0', '0.1.0' ]
2197 silly lockFile 3c57e17c-amdefine-0-1-0 amdefine@0.1.0
2198 verbose lock amdefine@0.1.0 /Users/marc.bluemner/.npm/3c57e17c-amdefine-0-1-0.lock
2199 silly lockFile fc995d92-s-optimist-node-modules-wordwrap tar:///usr/local/lib/node_modules/jade/node_modules/with/node_modules/uglify-js/node_modules/optimist/node_modules/wordwrap
2200 silly lockFile fc995d92-s-optimist-node-modules-wordwrap tar:///usr/local/lib/node_modules/jade/node_modules/with/node_modules/uglify-js/node_modules/optimist/node_modules/wordwrap
2201 silly lockFile 3c57e17c-amdefine-0-1-0 amdefine@0.1.0
2202 silly lockFile 3c57e17c-amdefine-0-1-0 amdefine@0.1.0
2203 silly lockFile 4a37d0fa-r-npm-wordwrap-0-0-2-package-tgz tar:///Users/marc.bluemner/.npm/wordwrap/0.0.2/package.tgz
2204 silly lockFile 4a37d0fa-r-npm-wordwrap-0-0-2-package-tgz tar:///Users/marc.bluemner/.npm/wordwrap/0.0.2/package.tgz
2205 silly lockFile 165d2d7b-amdefine-0-0-4 amdefine@>=0.0.4
2206 silly lockFile 165d2d7b-amdefine-0-0-4 amdefine@>=0.0.4
2207 info preinstall wordwrap@0.0.2
2208 verbose readDependencies using package.json deps
2209 verbose readDependencies using package.json deps
2210 silly resolved []
2211 verbose about to build /usr/local/lib/node_modules/jade/node_modules/with/node_modules/uglify-js/node_modules/optimist/node_modules/wordwrap
2212 info build /usr/local/lib/node_modules/jade/node_modules/with/node_modules/uglify-js/node_modules/optimist/node_modules/wordwrap
2213 verbose linkStuff [ true,
2213 verbose linkStuff   '/usr/local/lib/node_modules',
2213 verbose linkStuff   false,
2213 verbose linkStuff   '/usr/local/lib/node_modules/jade/node_modules/with/node_modules/uglify-js/node_modules/optimist/node_modules' ]
2214 info linkStuff wordwrap@0.0.2
2215 verbose linkBins wordwrap@0.0.2
2216 verbose linkMans wordwrap@0.0.2
2217 verbose rebuildBundles wordwrap@0.0.2
2218 info install wordwrap@0.0.2
2219 info postinstall wordwrap@0.0.2
2220 verbose about to build /usr/local/lib/node_modules/jade/node_modules/with/node_modules/uglify-js/node_modules/optimist
2221 info build /usr/local/lib/node_modules/jade/node_modules/with/node_modules/uglify-js/node_modules/optimist
2222 verbose linkStuff [ true,
2222 verbose linkStuff   '/usr/local/lib/node_modules',
2222 verbose linkStuff   false,
2222 verbose linkStuff   '/usr/local/lib/node_modules/jade/node_modules/with/node_modules/uglify-js/node_modules' ]
2223 info linkStuff optimist@0.3.7
2224 verbose linkBins optimist@0.3.7
2225 verbose linkMans optimist@0.3.7
2226 verbose rebuildBundles optimist@0.3.7
2227 verbose rebuildBundles [ 'wordwrap' ]
2228 info install optimist@0.3.7
2229 info postinstall optimist@0.3.7
2230 silly gunzTarPerm modes [ '755', '644' ]
2231 silly gunzTarPerm extractEntry package.json
2232 silly gunzTarPerm extractEntry .npmignore
2233 silly gunzTarPerm extractEntry README.md
2234 silly gunzTarPerm extractEntry LICENSE
2235 silly gunzTarPerm extractEntry Makefile.dryice.js
2236 silly gunzTarPerm extractEntry .travis.yml
2237 silly gunzTarPerm extractEntry CHANGELOG.md
2238 silly gunzTarPerm extractEntry build/assert-shim.js
2239 silly gunzTarPerm extractEntry build/mini-require.js
2240 silly gunzTarPerm extractEntry build/suffix-browser.js
2241 silly gunzTarPerm extractEntry build/test-prefix.js
2242 silly gunzTarPerm extractEntry build/test-suffix.js
2243 silly gunzTarPerm extractEntry build/prefix-source-map.jsm
2244 silly gunzTarPerm extractEntry build/prefix-utils.jsm
2245 silly gunzTarPerm extractEntry build/suffix-source-map.jsm
2246 silly gunzTarPerm extractEntry build/suffix-utils.jsm
2247 silly gunzTarPerm extractEntry lib/source-map.js
2248 silly gunzTarPerm extractEntry lib/source-map/array-set.js
2249 silly gunzTarPerm extractEntry lib/source-map/base64-vlq.js
2250 silly gunzTarPerm extractEntry lib/source-map/base64.js
2251 silly gunzTarPerm extractEntry lib/source-map/binary-search.js
2252 silly gunzTarPerm extractEntry lib/source-map/source-map-consumer.js
2253 silly gunzTarPerm extractEntry lib/source-map/source-map-generator.js
2254 silly gunzTarPerm extractEntry lib/source-map/source-node.js
2255 silly gunzTarPerm extractEntry lib/source-map/util.js
2256 silly gunzTarPerm extractEntry test/run-tests.js
2257 silly gunzTarPerm extractEntry test/source-map/test-api.js
2258 silly gunzTarPerm extractEntry test/source-map/test-base64-vlq.js
2259 silly gunzTarPerm extractEntry test/source-map/test-base64.js
2260 silly gunzTarPerm extractEntry test/source-map/test-binary-search.js
2261 silly gunzTarPerm extractEntry test/source-map/test-array-set.js
2262 silly gunzTarPerm extractEntry test/source-map/test-source-map-consumer.js
2263 silly gunzTarPerm extractEntry test/source-map/test-source-map-generator.js
2264 silly gunzTarPerm extractEntry test/source-map/test-source-node.js
2265 silly gunzTarPerm extractEntry test/source-map/test-util.js
2266 silly gunzTarPerm extractEntry test/source-map/util.js
2267 silly gunzTarPerm extractEntry test/source-map/test-dog-fooding.js
2268 silly resolved [ { name: 'wordwrap',
2268 silly resolved     description: 'Wrap those words. Show them at what columns to start and stop.',
2268 silly resolved     version: '0.0.2',
2268 silly resolved     repository:
2268 silly resolved      { type: 'git',
2268 silly resolved        url: 'git://github.com/substack/node-wordwrap.git' },
2268 silly resolved     main: './index.js',
2268 silly resolved     keywords: [ 'word', 'wrap', 'rule', 'format', 'column' ],
2268 silly resolved     directories: { lib: '.', example: 'example', test: 'test' },
2268 silly resolved     scripts: { test: 'expresso' },
2268 silly resolved     devDependencies: { expresso: '=0.7.x' },
2268 silly resolved     engines: { node: '>=0.4.0' },
2268 silly resolved     license: 'MIT/X11',
2268 silly resolved     author:
2268 silly resolved      { name: 'James Halliday',
2268 silly resolved        email: 'mail@substack.net',
2268 silly resolved        url: 'http://substack.net' },
2268 silly resolved     readme: 'wordwrap\n========\n\nWrap your words.\n\nexample\n=======\n\nmade out of meat\n----------------\n\nmeat.js\n\n    var wrap = require(\'wordwrap\')(15);\n    console.log(wrap(\'You and your whole family are made out of meat.\'));\n\noutput:\n\n    You and your\n    whole family\n    are made out\n    of meat.\n\ncentered\n--------\n\ncenter.js\n\n    var wrap = require(\'wordwrap\')(20, 60);\n    console.log(wrap(\n        \'At long last the struggle and tumult was over.\'\n        + \' The machines had finally cast off their oppressors\'\n        + \' and were finally free to roam the cosmos.\'\n        + \'\\n\'\n        + \'Free of purpose, free of obligation.\'\n        + \' Just drifting through emptiness.\'\n        + \' The sun was just another point of light.\'\n    ));\n\noutput:\n\n                        At long last the struggle and tumult\n                        was over. The machines had finally cast\n                        off their oppressors and were finally\n                        free to roam the cosmos.\n                        Free of purpose, free of obligation.\n                        Just drifting through emptiness. The\n                        sun was just another point of light.\n\nmethods\n=======\n\nvar wrap = require(\'wordwrap\');\n\nwrap(stop), wrap(start, stop, params={mode:"soft"})\n---------------------------------------------------\n\nReturns a function that takes a string and returns a new string.\n\nPad out lines with spaces out to column `start` and then wrap until column\n`stop`. If a word is longer than `stop - start` characters it will overflow.\n\nIn "soft" mode, split chunks by `/(\\S+\\s+/` and don\'t break up chunks which are\nlonger than `stop - start`, in "hard" mode, split chunks with `/\\b/` and break\nup chunks longer than `stop - start`.\n\nwrap.hard(start, stop)\n----------------------\n\nLike `wrap()` but with `params.mode = "hard"`.\n',
2268 silly resolved     readmeFilename: 'README.markdown',
2268 silly resolved     bugs: { url: 'https://github.com/substack/node-wordwrap/issues' },
2268 silly resolved     homepage: 'https://github.com/substack/node-wordwrap',
2268 silly resolved     _id: 'wordwrap@0.0.2',
2268 silly resolved     _from: 'wordwrap@~0.0.2' } ]
2269 info install wordwrap@0.0.2 into /usr/local/lib/node_modules/jade/node_modules/constantinople/node_modules/uglify-js/node_modules/optimist
2270 info installOne wordwrap@0.0.2
2271 info /usr/local/lib/node_modules/jade/node_modules/constantinople/node_modules/uglify-js/node_modules/optimist/node_modules/wordwrap unbuild
2272 verbose tar unpack /Users/marc.bluemner/.npm/wordwrap/0.0.2/package.tgz
2273 silly lockFile 03a0679e-s-optimist-node-modules-wordwrap tar:///usr/local/lib/node_modules/jade/node_modules/constantinople/node_modules/uglify-js/node_modules/optimist/node_modules/wordwrap
2274 verbose lock tar:///usr/local/lib/node_modules/jade/node_modules/constantinople/node_modules/uglify-js/node_modules/optimist/node_modules/wordwrap /Users/marc.bluemner/.npm/03a0679e-s-optimist-node-modules-wordwrap.lock
2275 silly lockFile 4a37d0fa-r-npm-wordwrap-0-0-2-package-tgz tar:///Users/marc.bluemner/.npm/wordwrap/0.0.2/package.tgz
2276 verbose lock tar:///Users/marc.bluemner/.npm/wordwrap/0.0.2/package.tgz /Users/marc.bluemner/.npm/4a37d0fa-r-npm-wordwrap-0-0-2-package-tgz.lock
2277 silly gunzTarPerm modes [ '755', '644' ]
2278 silly gunzTarPerm extractEntry package.json
2279 silly resolved [ { name: 'amdefine',
2279 silly resolved     description: 'Provide AMD\'s define() API for declaring modules in the AMD format',
2279 silly resolved     version: '0.1.0',
2279 silly resolved     homepage: 'http://github.com/jrburke/amdefine',
2279 silly resolved     author:
2279 silly resolved      { name: 'James Burke',
2279 silly resolved        email: 'jrburke@gmail.com',
2279 silly resolved        url: 'http://github.com/jrburke' },
2279 silly resolved     licenses: [ [Object], [Object] ],
2279 silly resolved     repository: { type: 'git', url: 'https://github.com/jrburke/amdefine.git' },
2279 silly resolved     main: './amdefine.js',
2279 silly resolved     engines: { node: '>=0.4.2' },
2279 silly resolved     readme: '# amdefine\n\nA module that can be used to implement AMD\'s define() in Node. This allows you\nto code to the AMD API and have the module work in node programs without\nrequiring those other programs to use AMD.\n\n## Usage\n\n**1)** Update your package.json to indicate amdefine as a dependency:\n\n```javascript\n    "dependencies": {\n        "amdefine": ">=0.1.0"\n    }\n```\n\nThen run `npm install` to get amdefine into your project.\n\n**2)** At the top of each module that uses define(), place this code:\n\n```javascript\nif (typeof define !== \'function\') { var define = require(\'amdefine\')(module) }\n```\n\n**Only use these snippets** when loading amdefine. If you preserve the basic structure,\nwith the braces, it will be stripped out when using the [RequireJS optimizer](#optimizer).\n\nYou can add spaces, line breaks and even require amdefine with a local path, but\nkeep the rest of the structure to get the stripping behavior.\n\nAs you may know, because `if` statements in JavaScript don\'t have their own scope, the var\ndeclaration in the above snippet is made whether the `if` expression is truthy or not. If\nRequireJS is loaded then the declaration is superfluous because `define` is already already\ndeclared in the same scope in RequireJS. Fortunately JavaScript handles multiple `var`\ndeclarations of the same variable in the same scope gracefully.\n\nIf you want to deliver amdefine.js with your code rather than specifying it as a dependency\nwith npm, then just download the latest release and refer to it using a relative path:\n\n[Latest Version](https://github.com/jrburke/amdefine/raw/latest/amdefine.js)\n\n### amdefine/intercept\n\nConsider this very experimental.\n\nInstead of pasting the piece of text for the amdefine setup of a `define`\nvariable in each module you create or consume, you can use `amdefine/intercept`\ninstead. It will automatically insert the above snippet in each .js file loaded\nby Node.\n\n**Warning**: you should only use this if you are creating an application that\nis consuming AMD style defined()\'d modules that are distributed via npm and want\nto run that code in Node.\n\nFor library code where you are not sure if it will be used by others in Node or\nin the browser, then explicitly depending on amdefine and placing the code\nsnippet above is suggested path, instead of using `amdefine/intercept`. The\nintercept module affects all .js files loaded in the Node app, and it is\ninconsiderate to modify global state like that unless you are also controlling\nthe top level app.\n\n#### Why distribute AMD-style nodes via npm?\n\nnpm has a lot of weaknesses for front-end use (installed layout is not great,\nshould have better support for the `baseUrl + moduleID + \'.js\' style of loading,\nsingle file JS installs), but some people want a JS package manager and are\nwilling to live with those constraints. If that is you, but still want to author\nin AMD style modules to get dynamic require([]), better direct source usage and\npowerful loader plugin support in the browser, then this tool can help.\n\n#### amdefine/intercept usage\n\nJust require it in your top level app module (for example index.js, server.js):\n\n```javascript\nrequire(\'amdefine/intercept\');\n```\n\nThe module does not return a value, so no need to assign the result to a local\nvariable.\n\nThen just require() code as you normally would with Node\'s require(). Any .js\nloaded after the intercept require will have the amdefine check injected in\nthe .js source as it is loaded. It does not modify the source on disk, just\nprepends some content to the text of the module as it is loaded by Node.\n\n#### How amdefine/intercept works\n\nIt overrides the `Module._extensions[\'.js\']` in Node to automatically prepend\nthe amdefine snippet above. So, it will affect any .js file loaded by your\napp.\n\n## define() usage\n\nIt is best if you use the anonymous forms of define() in your module:\n\n```javascript\ndefine(function (require) {\n    var dependency = require(\'dependency\');\n});\n```\n\nor\n\n```javascript\ndefine([\'dependency\'], function (dependency) {\n\n});\n```\n\n## RequireJS optimizer integration. <a name="optimizer"></name>\n\nVersion 1.0.3 of the [RequireJS optimizer](http://requirejs.org/docs/optimization.html)\nwill have support for stripping the `if (typeof define !== \'function\')` check\nmentioned above, so you can include this snippet for code that runs in the\nbrowser, but avoid taking the cost of the if() statement once the code is\noptimized for deployment.\n\n## Node 0.4 Support\n\nIf you want to support Node 0.4, then add `require` as the second parameter to amdefine:\n\n```javascript\n//Only if you want Node 0.4. If using 0.5 or later, use the above snippet.\nif (typeof define !== \'function\') { var define = require(\'amdefine\')(module, require) }\n```\n\n## Limitations\n\n### Synchronous vs Asynchronous\n\namdefine creates a define() function that is callable by your code. It will\nexecute and trace dependencies and call the factory function *synchronously*,\nto keep the behavior in line with Node\'s synchronous dependency tracing.\n\nThe exception: calling AMD\'s callback-style require() from inside a factory\nfunction. The require callback is called on process.nextTick():\n\n```javascript\ndefine(function (require) {\n    require([\'a\'], function(a) {\n        //\'a\' is loaded synchronously, but\n        //this callback is called on process.nextTick().\n    });\n});\n```\n\n### Loader Plugins\n\nLoader plugins are supported as long as they call their load() callbacks\nsynchronously. So ones that do network requests will not work. However plugins\nlike [text](http://requirejs.org/docs/api.html#text) can load text files locally.\n\nThe plugin API\'s `load.fromText()` is **not supported** in amdefine, so this means\ntranspiler plugins like the [CoffeeScript loader plugin](https://github.com/jrburke/require-cs)\nwill not work. This may be fixable, but it is a bit complex, and I do not have\nenough node-fu to figure it out yet. See the source for amdefine.js if you want\nto get an idea of the issues involved.\n\n## Tests\n\nTo run the tests, cd to **tests** and run:\n\n```\nnode all.js\nnode all-intercept.js\n```\n\n## License\n\nNew BSD and MIT. Check the LICENSE file for all the details.\n',
2279 silly resolved     readmeFilename: 'README.md',
2279 silly resolved     bugs: { url: 'https://github.com/jrburke/amdefine/issues' },
2279 silly resolved     _id: 'amdefine@0.1.0',
2279 silly resolved     _from: 'amdefine@>=0.0.4' } ]
2280 info install amdefine@0.1.0 into /usr/local/lib/node_modules/jade/node_modules/transformers/node_modules/uglify-js/node_modules/source-map
2281 info installOne amdefine@0.1.0
2282 silly gunzTarPerm extractEntry .npmignore
2283 silly gunzTarPerm extractEntry index.js
2284 info /usr/local/lib/node_modules/jade/node_modules/transformers/node_modules/uglify-js/node_modules/source-map/node_modules/amdefine unbuild
2285 verbose tar unpack /Users/marc.bluemner/.npm/amdefine/0.1.0/package.tgz
2286 silly lockFile 6a8cea2c-source-map-node-modules-amdefine tar:///usr/local/lib/node_modules/jade/node_modules/transformers/node_modules/uglify-js/node_modules/source-map/node_modules/amdefine
2287 verbose lock tar:///usr/local/lib/node_modules/jade/node_modules/transformers/node_modules/uglify-js/node_modules/source-map/node_modules/amdefine /Users/marc.bluemner/.npm/6a8cea2c-source-map-node-modules-amdefine.lock
2288 silly lockFile 77e14a5f-r-npm-amdefine-0-1-0-package-tgz tar:///Users/marc.bluemner/.npm/amdefine/0.1.0/package.tgz
2289 verbose lock tar:///Users/marc.bluemner/.npm/amdefine/0.1.0/package.tgz /Users/marc.bluemner/.npm/77e14a5f-r-npm-amdefine-0-1-0-package-tgz.lock
2290 silly gunzTarPerm modes [ '755', '644' ]
2291 silly gunzTarPerm extractEntry README.markdown
2292 silly gunzTarPerm extractEntry example/center.js
2293 silly gunzTarPerm extractEntry example/meat.js
2294 silly gunzTarPerm extractEntry test/break.js
2295 silly gunzTarPerm extractEntry test/wrap.js
2296 silly gunzTarPerm extractEntry test/idleness.txt
2297 silly lockFile 5f526001-glify-js-node-modules-source-map tar:///usr/local/lib/node_modules/jade/node_modules/with/node_modules/uglify-js/node_modules/source-map
2298 silly lockFile 5f526001-glify-js-node-modules-source-map tar:///usr/local/lib/node_modules/jade/node_modules/with/node_modules/uglify-js/node_modules/source-map
2299 silly lockFile a877218c-pm-source-map-0-1-33-package-tgz tar:///Users/marc.bluemner/.npm/source-map/0.1.33/package.tgz
2300 silly lockFile a877218c-pm-source-map-0-1-33-package-tgz tar:///Users/marc.bluemner/.npm/source-map/0.1.33/package.tgz
2301 silly gunzTarPerm extractEntry package.json
2302 silly resolved [ { name: 'amdefine',
2302 silly resolved     description: 'Provide AMD\'s define() API for declaring modules in the AMD format',
2302 silly resolved     version: '0.1.0',
2302 silly resolved     homepage: 'http://github.com/jrburke/amdefine',
2302 silly resolved     author:
2302 silly resolved      { name: 'James Burke',
2302 silly resolved        email: 'jrburke@gmail.com',
2302 silly resolved        url: 'http://github.com/jrburke' },
2302 silly resolved     licenses: [ [Object], [Object] ],
2302 silly resolved     repository: { type: 'git', url: 'https://github.com/jrburke/amdefine.git' },
2302 silly resolved     main: './amdefine.js',
2302 silly resolved     engines: { node: '>=0.4.2' },
2302 silly resolved     readme: '# amdefine\n\nA module that can be used to implement AMD\'s define() in Node. This allows you\nto code to the AMD API and have the module work in node programs without\nrequiring those other programs to use AMD.\n\n## Usage\n\n**1)** Update your package.json to indicate amdefine as a dependency:\n\n```javascript\n    "dependencies": {\n        "amdefine": ">=0.1.0"\n    }\n```\n\nThen run `npm install` to get amdefine into your project.\n\n**2)** At the top of each module that uses define(), place this code:\n\n```javascript\nif (typeof define !== \'function\') { var define = require(\'amdefine\')(module) }\n```\n\n**Only use these snippets** when loading amdefine. If you preserve the basic structure,\nwith the braces, it will be stripped out when using the [RequireJS optimizer](#optimizer).\n\nYou can add spaces, line breaks and even require amdefine with a local path, but\nkeep the rest of the structure to get the stripping behavior.\n\nAs you may know, because `if` statements in JavaScript don\'t have their own scope, the var\ndeclaration in the above snippet is made whether the `if` expression is truthy or not. If\nRequireJS is loaded then the declaration is superfluous because `define` is already already\ndeclared in the same scope in RequireJS. Fortunately JavaScript handles multiple `var`\ndeclarations of the same variable in the same scope gracefully.\n\nIf you want to deliver amdefine.js with your code rather than specifying it as a dependency\nwith npm, then just download the latest release and refer to it using a relative path:\n\n[Latest Version](https://github.com/jrburke/amdefine/raw/latest/amdefine.js)\n\n### amdefine/intercept\n\nConsider this very experimental.\n\nInstead of pasting the piece of text for the amdefine setup of a `define`\nvariable in each module you create or consume, you can use `amdefine/intercept`\ninstead. It will automatically insert the above snippet in each .js file loaded\nby Node.\n\n**Warning**: you should only use this if you are creating an application that\nis consuming AMD style defined()\'d modules that are distributed via npm and want\nto run that code in Node.\n\nFor library code where you are not sure if it will be used by others in Node or\nin the browser, then explicitly depending on amdefine and placing the code\nsnippet above is suggested path, instead of using `amdefine/intercept`. The\nintercept module affects all .js files loaded in the Node app, and it is\ninconsiderate to modify global state like that unless you are also controlling\nthe top level app.\n\n#### Why distribute AMD-style nodes via npm?\n\nnpm has a lot of weaknesses for front-end use (installed layout is not great,\nshould have better support for the `baseUrl + moduleID + \'.js\' style of loading,\nsingle file JS installs), but some people want a JS package manager and are\nwilling to live with those constraints. If that is you, but still want to author\nin AMD style modules to get dynamic require([]), better direct source usage and\npowerful loader plugin support in the browser, then this tool can help.\n\n#### amdefine/intercept usage\n\nJust require it in your top level app module (for example index.js, server.js):\n\n```javascript\nrequire(\'amdefine/intercept\');\n```\n\nThe module does not return a value, so no need to assign the result to a local\nvariable.\n\nThen just require() code as you normally would with Node\'s require(). Any .js\nloaded after the intercept require will have the amdefine check injected in\nthe .js source as it is loaded. It does not modify the source on disk, just\nprepends some content to the text of the module as it is loaded by Node.\n\n#### How amdefine/intercept works\n\nIt overrides the `Module._extensions[\'.js\']` in Node to automatically prepend\nthe amdefine snippet above. So, it will affect any .js file loaded by your\napp.\n\n## define() usage\n\nIt is best if you use the anonymous forms of define() in your module:\n\n```javascript\ndefine(function (require) {\n    var dependency = require(\'dependency\');\n});\n```\n\nor\n\n```javascript\ndefine([\'dependency\'], function (dependency) {\n\n});\n```\n\n## RequireJS optimizer integration. <a name="optimizer"></name>\n\nVersion 1.0.3 of the [RequireJS optimizer](http://requirejs.org/docs/optimization.html)\nwill have support for stripping the `if (typeof define !== \'function\')` check\nmentioned above, so you can include this snippet for code that runs in the\nbrowser, but avoid taking the cost of the if() statement once the code is\noptimized for deployment.\n\n## Node 0.4 Support\n\nIf you want to support Node 0.4, then add `require` as the second parameter to amdefine:\n\n```javascript\n//Only if you want Node 0.4. If using 0.5 or later, use the above snippet.\nif (typeof define !== \'function\') { var define = require(\'amdefine\')(module, require) }\n```\n\n## Limitations\n\n### Synchronous vs Asynchronous\n\namdefine creates a define() function that is callable by your code. It will\nexecute and trace dependencies and call the factory function *synchronously*,\nto keep the behavior in line with Node\'s synchronous dependency tracing.\n\nThe exception: calling AMD\'s callback-style require() from inside a factory\nfunction. The require callback is called on process.nextTick():\n\n```javascript\ndefine(function (require) {\n    require([\'a\'], function(a) {\n        //\'a\' is loaded synchronously, but\n        //this callback is called on process.nextTick().\n    });\n});\n```\n\n### Loader Plugins\n\nLoader plugins are supported as long as they call their load() callbacks\nsynchronously. So ones that do network requests will not work. However plugins\nlike [text](http://requirejs.org/docs/api.html#text) can load text files locally.\n\nThe plugin API\'s `load.fromText()` is **not supported** in amdefine, so this means\ntranspiler plugins like the [CoffeeScript loader plugin](https://github.com/jrburke/require-cs)\nwill not work. This may be fixable, but it is a bit complex, and I do not have\nenough node-fu to figure it out yet. See the source for amdefine.js if you want\nto get an idea of the issues involved.\n\n## Tests\n\nTo run the tests, cd to **tests** and run:\n\n```\nnode all.js\nnode all-intercept.js\n```\n\n## License\n\nNew BSD and MIT. Check the LICENSE file for all the details.\n',
2302 silly resolved     readmeFilename: 'README.md',
2302 silly resolved     bugs: { url: 'https://github.com/jrburke/amdefine/issues' },
2302 silly resolved     _id: 'amdefine@0.1.0',
2302 silly resolved     _from: 'amdefine@>=0.0.4' } ]
2303 info install amdefine@0.1.0 into /usr/local/lib/node_modules/jade/node_modules/constantinople/node_modules/uglify-js/node_modules/source-map
2304 info installOne amdefine@0.1.0
2305 info /usr/local/lib/node_modules/jade/node_modules/constantinople/node_modules/uglify-js/node_modules/source-map/node_modules/amdefine unbuild
2306 info preinstall source-map@0.1.33
2307 verbose tar unpack /Users/marc.bluemner/.npm/amdefine/0.1.0/package.tgz
2308 silly lockFile 6b73eb43-source-map-node-modules-amdefine tar:///usr/local/lib/node_modules/jade/node_modules/constantinople/node_modules/uglify-js/node_modules/source-map/node_modules/amdefine
2309 verbose lock tar:///usr/local/lib/node_modules/jade/node_modules/constantinople/node_modules/uglify-js/node_modules/source-map/node_modules/amdefine /Users/marc.bluemner/.npm/6b73eb43-source-map-node-modules-amdefine.lock
2310 silly lockFile 77e14a5f-r-npm-amdefine-0-1-0-package-tgz tar:///Users/marc.bluemner/.npm/amdefine/0.1.0/package.tgz
2311 verbose lock tar:///Users/marc.bluemner/.npm/amdefine/0.1.0/package.tgz /Users/marc.bluemner/.npm/77e14a5f-r-npm-amdefine-0-1-0-package-tgz.lock
2312 silly gunzTarPerm extractEntry README.md
2313 silly gunzTarPerm extractEntry LICENSE
2314 verbose readDependencies using package.json deps
2315 silly lockFile 03a0679e-s-optimist-node-modules-wordwrap tar:///usr/local/lib/node_modules/jade/node_modules/constantinople/node_modules/uglify-js/node_modules/optimist/node_modules/wordwrap
2316 silly lockFile 03a0679e-s-optimist-node-modules-wordwrap tar:///usr/local/lib/node_modules/jade/node_modules/constantinople/node_modules/uglify-js/node_modules/optimist/node_modules/wordwrap
2317 verbose readDependencies using package.json deps
2318 silly lockFile 4a37d0fa-r-npm-wordwrap-0-0-2-package-tgz tar:///Users/marc.bluemner/.npm/wordwrap/0.0.2/package.tgz
2319 silly lockFile 4a37d0fa-r-npm-wordwrap-0-0-2-package-tgz tar:///Users/marc.bluemner/.npm/wordwrap/0.0.2/package.tgz
2320 verbose cache add [ 'amdefine@>=0.0.4', null ]
2321 verbose cache add name=undefined spec="amdefine@>=0.0.4" args=["amdefine@>=0.0.4",null]
2322 verbose parsed url { protocol: null,
2322 verbose parsed url   slashes: null,
2322 verbose parsed url   auth: null,
2322 verbose parsed url   host: null,
2322 verbose parsed url   port: null,
2322 verbose parsed url   hostname: null,
2322 verbose parsed url   hash: null,
2322 verbose parsed url   search: null,
2322 verbose parsed url   query: null,
2322 verbose parsed url   pathname: 'amdefine@%3E=0.0.4',
2322 verbose parsed url   path: 'amdefine@%3E=0.0.4',
2322 verbose parsed url   href: 'amdefine@%3E=0.0.4' }
2323 verbose cache add name="amdefine" spec=">=0.0.4" args=["amdefine",">=0.0.4"]
2324 verbose parsed url { protocol: null,
2324 verbose parsed url   slashes: null,
2324 verbose parsed url   auth: null,
2324 verbose parsed url   host: null,
2324 verbose parsed url   port: null,
2324 verbose parsed url   hostname: null,
2324 verbose parsed url   hash: null,
2324 verbose parsed url   search: null,
2324 verbose parsed url   query: null,
2324 verbose parsed url   pathname: '%3E=0.0.4',
2324 verbose parsed url   path: '%3E=0.0.4',
2324 verbose parsed url   href: '%3E=0.0.4' }
2325 verbose addNamed [ 'amdefine', '>=0.0.4' ]
2326 verbose addNamed [ null, '>=0.0.4' ]
2327 silly lockFile 165d2d7b-amdefine-0-0-4 amdefine@>=0.0.4
2328 verbose lock amdefine@>=0.0.4 /Users/marc.bluemner/.npm/165d2d7b-amdefine-0-0-4.lock
2329 info preinstall wordwrap@0.0.2
2330 silly addNameRange { name: 'amdefine', range: '>=0.0.4', hasData: false }
2331 silly gunzTarPerm extractEntry amdefine.js
2332 verbose readDependencies using package.json deps
2333 verbose readDependencies using package.json deps
2334 silly resolved []
2335 verbose about to build /usr/local/lib/node_modules/jade/node_modules/constantinople/node_modules/uglify-js/node_modules/optimist/node_modules/wordwrap
2336 info build /usr/local/lib/node_modules/jade/node_modules/constantinople/node_modules/uglify-js/node_modules/optimist/node_modules/wordwrap
2337 verbose linkStuff [ true,
2337 verbose linkStuff   '/usr/local/lib/node_modules',
2337 verbose linkStuff   false,
2337 verbose linkStuff   '/usr/local/lib/node_modules/jade/node_modules/constantinople/node_modules/uglify-js/node_modules/optimist/node_modules' ]
2338 info linkStuff wordwrap@0.0.2
2339 verbose linkBins wordwrap@0.0.2
2340 verbose linkMans wordwrap@0.0.2
2341 verbose rebuildBundles wordwrap@0.0.2
2342 info install wordwrap@0.0.2
2343 verbose registry.get amdefine not expired, no request
2344 silly addNameRange number 2 { name: 'amdefine', range: '>=0.0.4', hasData: true }
2345 silly addNameRange versions [ 'amdefine',
2345 silly addNameRange   [ '0.0.1',
2345 silly addNameRange     '0.0.2',
2345 silly addNameRange     '0.0.3',
2345 silly addNameRange     '0.0.4',
2345 silly addNameRange     '0.0.5',
2345 silly addNameRange     '0.0.6',
2345 silly addNameRange     '0.0.7',
2345 silly addNameRange     '0.0.8',
2345 silly addNameRange     '0.1.0' ] ]
2346 verbose addNamed [ 'amdefine', '0.1.0' ]
2347 verbose addNamed [ '0.1.0', '0.1.0' ]
2348 silly lockFile 3c57e17c-amdefine-0-1-0 amdefine@0.1.0
2349 verbose lock amdefine@0.1.0 /Users/marc.bluemner/.npm/3c57e17c-amdefine-0-1-0.lock
2350 info postinstall wordwrap@0.0.2
2351 silly lockFile 3c57e17c-amdefine-0-1-0 amdefine@0.1.0
2352 silly lockFile 3c57e17c-amdefine-0-1-0 amdefine@0.1.0
2353 verbose about to build /usr/local/lib/node_modules/jade/node_modules/constantinople/node_modules/uglify-js/node_modules/optimist
2354 info build /usr/local/lib/node_modules/jade/node_modules/constantinople/node_modules/uglify-js/node_modules/optimist
2355 verbose linkStuff [ true,
2355 verbose linkStuff   '/usr/local/lib/node_modules',
2355 verbose linkStuff   false,
2355 verbose linkStuff   '/usr/local/lib/node_modules/jade/node_modules/constantinople/node_modules/uglify-js/node_modules' ]
2356 info linkStuff optimist@0.3.7
2357 verbose linkBins optimist@0.3.7
2358 verbose linkMans optimist@0.3.7
2359 verbose rebuildBundles optimist@0.3.7
2360 silly lockFile 165d2d7b-amdefine-0-0-4 amdefine@>=0.0.4
2361 silly lockFile 165d2d7b-amdefine-0-0-4 amdefine@>=0.0.4
2362 verbose rebuildBundles [ 'wordwrap' ]
2363 info install optimist@0.3.7
2364 info postinstall optimist@0.3.7
2365 silly gunzTarPerm extractEntry intercept.js
2366 silly lockFile 6a8cea2c-source-map-node-modules-amdefine tar:///usr/local/lib/node_modules/jade/node_modules/transformers/node_modules/uglify-js/node_modules/source-map/node_modules/amdefine
2367 silly lockFile 6a8cea2c-source-map-node-modules-amdefine tar:///usr/local/lib/node_modules/jade/node_modules/transformers/node_modules/uglify-js/node_modules/source-map/node_modules/amdefine
2368 silly lockFile 77e14a5f-r-npm-amdefine-0-1-0-package-tgz tar:///Users/marc.bluemner/.npm/amdefine/0.1.0/package.tgz
2369 silly lockFile 77e14a5f-r-npm-amdefine-0-1-0-package-tgz tar:///Users/marc.bluemner/.npm/amdefine/0.1.0/package.tgz
2370 silly resolved [ { name: 'amdefine',
2370 silly resolved     description: 'Provide AMD\'s define() API for declaring modules in the AMD format',
2370 silly resolved     version: '0.1.0',
2370 silly resolved     homepage: 'http://github.com/jrburke/amdefine',
2370 silly resolved     author:
2370 silly resolved      { name: 'James Burke',
2370 silly resolved        email: 'jrburke@gmail.com',
2370 silly resolved        url: 'http://github.com/jrburke' },
2370 silly resolved     licenses: [ [Object], [Object] ],
2370 silly resolved     repository: { type: 'git', url: 'https://github.com/jrburke/amdefine.git' },
2370 silly resolved     main: './amdefine.js',
2370 silly resolved     engines: { node: '>=0.4.2' },
2370 silly resolved     readme: '# amdefine\n\nA module that can be used to implement AMD\'s define() in Node. This allows you\nto code to the AMD API and have the module work in node programs without\nrequiring those other programs to use AMD.\n\n## Usage\n\n**1)** Update your package.json to indicate amdefine as a dependency:\n\n```javascript\n    "dependencies": {\n        "amdefine": ">=0.1.0"\n    }\n```\n\nThen run `npm install` to get amdefine into your project.\n\n**2)** At the top of each module that uses define(), place this code:\n\n```javascript\nif (typeof define !== \'function\') { var define = require(\'amdefine\')(module) }\n```\n\n**Only use these snippets** when loading amdefine. If you preserve the basic structure,\nwith the braces, it will be stripped out when using the [RequireJS optimizer](#optimizer).\n\nYou can add spaces, line breaks and even require amdefine with a local path, but\nkeep the rest of the structure to get the stripping behavior.\n\nAs you may know, because `if` statements in JavaScript don\'t have their own scope, the var\ndeclaration in the above snippet is made whether the `if` expression is truthy or not. If\nRequireJS is loaded then the declaration is superfluous because `define` is already already\ndeclared in the same scope in RequireJS. Fortunately JavaScript handles multiple `var`\ndeclarations of the same variable in the same scope gracefully.\n\nIf you want to deliver amdefine.js with your code rather than specifying it as a dependency\nwith npm, then just download the latest release and refer to it using a relative path:\n\n[Latest Version](https://github.com/jrburke/amdefine/raw/latest/amdefine.js)\n\n### amdefine/intercept\n\nConsider this very experimental.\n\nInstead of pasting the piece of text for the amdefine setup of a `define`\nvariable in each module you create or consume, you can use `amdefine/intercept`\ninstead. It will automatically insert the above snippet in each .js file loaded\nby Node.\n\n**Warning**: you should only use this if you are creating an application that\nis consuming AMD style defined()\'d modules that are distributed via npm and want\nto run that code in Node.\n\nFor library code where you are not sure if it will be used by others in Node or\nin the browser, then explicitly depending on amdefine and placing the code\nsnippet above is suggested path, instead of using `amdefine/intercept`. The\nintercept module affects all .js files loaded in the Node app, and it is\ninconsiderate to modify global state like that unless you are also controlling\nthe top level app.\n\n#### Why distribute AMD-style nodes via npm?\n\nnpm has a lot of weaknesses for front-end use (installed layout is not great,\nshould have better support for the `baseUrl + moduleID + \'.js\' style of loading,\nsingle file JS installs), but some people want a JS package manager and are\nwilling to live with those constraints. If that is you, but still want to author\nin AMD style modules to get dynamic require([]), better direct source usage and\npowerful loader plugin support in the browser, then this tool can help.\n\n#### amdefine/intercept usage\n\nJust require it in your top level app module (for example index.js, server.js):\n\n```javascript\nrequire(\'amdefine/intercept\');\n```\n\nThe module does not return a value, so no need to assign the result to a local\nvariable.\n\nThen just require() code as you normally would with Node\'s require(). Any .js\nloaded after the intercept require will have the amdefine check injected in\nthe .js source as it is loaded. It does not modify the source on disk, just\nprepends some content to the text of the module as it is loaded by Node.\n\n#### How amdefine/intercept works\n\nIt overrides the `Module._extensions[\'.js\']` in Node to automatically prepend\nthe amdefine snippet above. So, it will affect any .js file loaded by your\napp.\n\n## define() usage\n\nIt is best if you use the anonymous forms of define() in your module:\n\n```javascript\ndefine(function (require) {\n    var dependency = require(\'dependency\');\n});\n```\n\nor\n\n```javascript\ndefine([\'dependency\'], function (dependency) {\n\n});\n```\n\n## RequireJS optimizer integration. <a name="optimizer"></name>\n\nVersion 1.0.3 of the [RequireJS optimizer](http://requirejs.org/docs/optimization.html)\nwill have support for stripping the `if (typeof define !== \'function\')` check\nmentioned above, so you can include this snippet for code that runs in the\nbrowser, but avoid taking the cost of the if() statement once the code is\noptimized for deployment.\n\n## Node 0.4 Support\n\nIf you want to support Node 0.4, then add `require` as the second parameter to amdefine:\n\n```javascript\n//Only if you want Node 0.4. If using 0.5 or later, use the above snippet.\nif (typeof define !== \'function\') { var define = require(\'amdefine\')(module, require) }\n```\n\n## Limitations\n\n### Synchronous vs Asynchronous\n\namdefine creates a define() function that is callable by your code. It will\nexecute and trace dependencies and call the factory function *synchronously*,\nto keep the behavior in line with Node\'s synchronous dependency tracing.\n\nThe exception: calling AMD\'s callback-style require() from inside a factory\nfunction. The require callback is called on process.nextTick():\n\n```javascript\ndefine(function (require) {\n    require([\'a\'], function(a) {\n        //\'a\' is loaded synchronously, but\n        //this callback is called on process.nextTick().\n    });\n});\n```\n\n### Loader Plugins\n\nLoader plugins are supported as long as they call their load() callbacks\nsynchronously. So ones that do network requests will not work. However plugins\nlike [text](http://requirejs.org/docs/api.html#text) can load text files locally.\n\nThe plugin API\'s `load.fromText()` is **not supported** in amdefine, so this means\ntranspiler plugins like the [CoffeeScript loader plugin](https://github.com/jrburke/require-cs)\nwill not work. This may be fixable, but it is a bit complex, and I do not have\nenough node-fu to figure it out yet. See the source for amdefine.js if you want\nto get an idea of the issues involved.\n\n## Tests\n\nTo run the tests, cd to **tests** and run:\n\n```\nnode all.js\nnode all-intercept.js\n```\n\n## License\n\nNew BSD and MIT. Check the LICENSE file for all the details.\n',
2370 silly resolved     readmeFilename: 'README.md',
2370 silly resolved     bugs: { url: 'https://github.com/jrburke/amdefine/issues' },
2370 silly resolved     _id: 'amdefine@0.1.0',
2370 silly resolved     _from: 'amdefine@>=0.0.4' } ]
2371 info install amdefine@0.1.0 into /usr/local/lib/node_modules/jade/node_modules/with/node_modules/uglify-js/node_modules/source-map
2372 info installOne amdefine@0.1.0
2373 info /usr/local/lib/node_modules/jade/node_modules/with/node_modules/uglify-js/node_modules/source-map/node_modules/amdefine unbuild
2374 info preinstall amdefine@0.1.0
2375 verbose tar unpack /Users/marc.bluemner/.npm/amdefine/0.1.0/package.tgz
2376 silly lockFile 0728f785-source-map-node-modules-amdefine tar:///usr/local/lib/node_modules/jade/node_modules/with/node_modules/uglify-js/node_modules/source-map/node_modules/amdefine
2377 verbose lock tar:///usr/local/lib/node_modules/jade/node_modules/with/node_modules/uglify-js/node_modules/source-map/node_modules/amdefine /Users/marc.bluemner/.npm/0728f785-source-map-node-modules-amdefine.lock
2378 silly lockFile 77e14a5f-r-npm-amdefine-0-1-0-package-tgz tar:///Users/marc.bluemner/.npm/amdefine/0.1.0/package.tgz
2379 verbose lock tar:///Users/marc.bluemner/.npm/amdefine/0.1.0/package.tgz /Users/marc.bluemner/.npm/77e14a5f-r-npm-amdefine-0-1-0-package-tgz.lock
2380 verbose readDependencies using package.json deps
2381 verbose readDependencies using package.json deps
2382 silly resolved []
2383 verbose about to build /usr/local/lib/node_modules/jade/node_modules/transformers/node_modules/uglify-js/node_modules/source-map/node_modules/amdefine
2384 info build /usr/local/lib/node_modules/jade/node_modules/transformers/node_modules/uglify-js/node_modules/source-map/node_modules/amdefine
2385 verbose linkStuff [ true,
2385 verbose linkStuff   '/usr/local/lib/node_modules',
2385 verbose linkStuff   false,
2385 verbose linkStuff   '/usr/local/lib/node_modules/jade/node_modules/transformers/node_modules/uglify-js/node_modules/source-map/node_modules' ]
2386 info linkStuff amdefine@0.1.0
2387 verbose linkBins amdefine@0.1.0
2388 verbose linkMans amdefine@0.1.0
2389 verbose rebuildBundles amdefine@0.1.0
2390 info install amdefine@0.1.0
2391 silly gunzTarPerm modes [ '755', '644' ]
2392 info postinstall amdefine@0.1.0
2393 verbose about to build /usr/local/lib/node_modules/jade/node_modules/transformers/node_modules/uglify-js/node_modules/source-map
2394 info build /usr/local/lib/node_modules/jade/node_modules/transformers/node_modules/uglify-js/node_modules/source-map
2395 verbose linkStuff [ true,
2395 verbose linkStuff   '/usr/local/lib/node_modules',
2395 verbose linkStuff   false,
2395 verbose linkStuff   '/usr/local/lib/node_modules/jade/node_modules/transformers/node_modules/uglify-js/node_modules' ]
2396 info linkStuff source-map@0.1.33
2397 verbose linkBins source-map@0.1.33
2398 verbose linkMans source-map@0.1.33
2399 verbose rebuildBundles source-map@0.1.33
2400 verbose rebuildBundles [ 'amdefine' ]
2401 info install source-map@0.1.33
2402 silly gunzTarPerm extractEntry package.json
2403 info postinstall source-map@0.1.33
2404 verbose about to build /usr/local/lib/node_modules/jade/node_modules/transformers/node_modules/uglify-js
2405 info build /usr/local/lib/node_modules/jade/node_modules/transformers/node_modules/uglify-js
2406 verbose linkStuff [ true,
2406 verbose linkStuff   '/usr/local/lib/node_modules',
2406 verbose linkStuff   false,
2406 verbose linkStuff   '/usr/local/lib/node_modules/jade/node_modules/transformers/node_modules' ]
2407 info linkStuff uglify-js@2.2.5
2408 verbose linkBins uglify-js@2.2.5
2409 verbose link bins [ { uglifyjs: 'bin/uglifyjs' },
2409 verbose link bins   '/usr/local/lib/node_modules/jade/node_modules/transformers/node_modules/.bin',
2409 verbose link bins   false ]
2410 verbose linkMans uglify-js@2.2.5
2411 verbose rebuildBundles uglify-js@2.2.5
2412 silly gunzTarPerm extractEntry README.md
2413 silly gunzTarPerm extractEntry LICENSE
2414 verbose rebuildBundles [ 'optimist', 'source-map' ]
2415 info install uglify-js@2.2.5
2416 info postinstall uglify-js@2.2.5
2417 silly gunzTarPerm extractEntry amdefine.js
2418 verbose about to build /usr/local/lib/node_modules/jade/node_modules/transformers
2419 info build /usr/local/lib/node_modules/jade/node_modules/transformers
2420 verbose linkStuff [ true,
2420 verbose linkStuff   '/usr/local/lib/node_modules',
2420 verbose linkStuff   false,
2420 verbose linkStuff   '/usr/local/lib/node_modules/jade/node_modules' ]
2421 info linkStuff transformers@2.1.0
2422 verbose linkBins transformers@2.1.0
2423 verbose linkMans transformers@2.1.0
2424 verbose rebuildBundles transformers@2.1.0
2425 verbose rebuildBundles [ '.bin', 'css', 'promise', 'uglify-js' ]
2426 info install transformers@2.1.0
2427 info postinstall transformers@2.1.0
2428 silly gunzTarPerm extractEntry intercept.js
2429 silly lockFile 0728f785-source-map-node-modules-amdefine tar:///usr/local/lib/node_modules/jade/node_modules/with/node_modules/uglify-js/node_modules/source-map/node_modules/amdefine
2430 silly lockFile 0728f785-source-map-node-modules-amdefine tar:///usr/local/lib/node_modules/jade/node_modules/with/node_modules/uglify-js/node_modules/source-map/node_modules/amdefine
2431 silly lockFile 77e14a5f-r-npm-amdefine-0-1-0-package-tgz tar:///Users/marc.bluemner/.npm/amdefine/0.1.0/package.tgz
2432 silly lockFile 77e14a5f-r-npm-amdefine-0-1-0-package-tgz tar:///Users/marc.bluemner/.npm/amdefine/0.1.0/package.tgz
2433 info preinstall amdefine@0.1.0
2434 verbose readDependencies using package.json deps
2435 verbose readDependencies using package.json deps
2436 silly resolved []
2437 verbose about to build /usr/local/lib/node_modules/jade/node_modules/with/node_modules/uglify-js/node_modules/source-map/node_modules/amdefine
2438 info build /usr/local/lib/node_modules/jade/node_modules/with/node_modules/uglify-js/node_modules/source-map/node_modules/amdefine
2439 verbose linkStuff [ true,
2439 verbose linkStuff   '/usr/local/lib/node_modules',
2439 verbose linkStuff   false,
2439 verbose linkStuff   '/usr/local/lib/node_modules/jade/node_modules/with/node_modules/uglify-js/node_modules/source-map/node_modules' ]
2440 info linkStuff amdefine@0.1.0
2441 verbose linkBins amdefine@0.1.0
2442 verbose linkMans amdefine@0.1.0
2443 verbose rebuildBundles amdefine@0.1.0
2444 info install amdefine@0.1.0
2445 info postinstall amdefine@0.1.0
2446 verbose about to build /usr/local/lib/node_modules/jade/node_modules/with/node_modules/uglify-js/node_modules/source-map
2447 info build /usr/local/lib/node_modules/jade/node_modules/with/node_modules/uglify-js/node_modules/source-map
2448 verbose linkStuff [ true,
2448 verbose linkStuff   '/usr/local/lib/node_modules',
2448 verbose linkStuff   false,
2448 verbose linkStuff   '/usr/local/lib/node_modules/jade/node_modules/with/node_modules/uglify-js/node_modules' ]
2449 info linkStuff source-map@0.1.33
2450 verbose linkBins source-map@0.1.33
2451 verbose linkMans source-map@0.1.33
2452 verbose rebuildBundles source-map@0.1.33
2453 verbose rebuildBundles [ 'amdefine' ]
2454 info install source-map@0.1.33
2455 info postinstall source-map@0.1.33
2456 verbose about to build /usr/local/lib/node_modules/jade/node_modules/with/node_modules/uglify-js
2457 info build /usr/local/lib/node_modules/jade/node_modules/with/node_modules/uglify-js
2458 verbose linkStuff [ true,
2458 verbose linkStuff   '/usr/local/lib/node_modules',
2458 verbose linkStuff   false,
2458 verbose linkStuff   '/usr/local/lib/node_modules/jade/node_modules/with/node_modules' ]
2459 info linkStuff uglify-js@2.4.13
2460 verbose linkBins uglify-js@2.4.13
2461 verbose link bins [ { uglifyjs: 'bin/uglifyjs' },
2461 verbose link bins   '/usr/local/lib/node_modules/jade/node_modules/with/node_modules/.bin',
2461 verbose link bins   false ]
2462 verbose linkMans uglify-js@2.4.13
2463 verbose rebuildBundles uglify-js@2.4.13
2464 verbose rebuildBundles [ 'async', 'optimist', 'source-map', 'uglify-to-browserify' ]
2465 info install uglify-js@2.4.13
2466 info postinstall uglify-js@2.4.13
2467 verbose about to build /usr/local/lib/node_modules/jade/node_modules/with
2468 info build /usr/local/lib/node_modules/jade/node_modules/with
2469 verbose linkStuff [ true,
2469 verbose linkStuff   '/usr/local/lib/node_modules',
2469 verbose linkStuff   false,
2469 verbose linkStuff   '/usr/local/lib/node_modules/jade/node_modules' ]
2470 info linkStuff with@3.0.0
2471 verbose linkBins with@3.0.0
2472 verbose linkMans with@3.0.0
2473 verbose rebuildBundles with@3.0.0
2474 verbose rebuildBundles [ '.bin', 'uglify-js' ]
2475 info install with@3.0.0
2476 info postinstall with@3.0.0
2477 silly gunzTarPerm modes [ '755', '644' ]
2478 silly gunzTarPerm extractEntry package.json
2479 silly gunzTarPerm extractEntry README.md
2480 silly gunzTarPerm extractEntry LICENSE
2481 silly gunzTarPerm extractEntry amdefine.js
2482 silly gunzTarPerm extractEntry intercept.js
2483 silly lockFile 6b73eb43-source-map-node-modules-amdefine tar:///usr/local/lib/node_modules/jade/node_modules/constantinople/node_modules/uglify-js/node_modules/source-map/node_modules/amdefine
2484 silly lockFile 6b73eb43-source-map-node-modules-amdefine tar:///usr/local/lib/node_modules/jade/node_modules/constantinople/node_modules/uglify-js/node_modules/source-map/node_modules/amdefine
2485 silly lockFile 77e14a5f-r-npm-amdefine-0-1-0-package-tgz tar:///Users/marc.bluemner/.npm/amdefine/0.1.0/package.tgz
2486 silly lockFile 77e14a5f-r-npm-amdefine-0-1-0-package-tgz tar:///Users/marc.bluemner/.npm/amdefine/0.1.0/package.tgz
2487 info preinstall amdefine@0.1.0
2488 verbose readDependencies using package.json deps
2489 verbose readDependencies using package.json deps
2490 silly resolved []
2491 verbose about to build /usr/local/lib/node_modules/jade/node_modules/constantinople/node_modules/uglify-js/node_modules/source-map/node_modules/amdefine
2492 info build /usr/local/lib/node_modules/jade/node_modules/constantinople/node_modules/uglify-js/node_modules/source-map/node_modules/amdefine
2493 verbose linkStuff [ true,
2493 verbose linkStuff   '/usr/local/lib/node_modules',
2493 verbose linkStuff   false,
2493 verbose linkStuff   '/usr/local/lib/node_modules/jade/node_modules/constantinople/node_modules/uglify-js/node_modules/source-map/node_modules' ]
2494 info linkStuff amdefine@0.1.0
2495 verbose linkBins amdefine@0.1.0
2496 verbose linkMans amdefine@0.1.0
2497 verbose rebuildBundles amdefine@0.1.0
2498 info install amdefine@0.1.0
2499 info postinstall amdefine@0.1.0
2500 verbose about to build /usr/local/lib/node_modules/jade/node_modules/constantinople/node_modules/uglify-js/node_modules/source-map
2501 info build /usr/local/lib/node_modules/jade/node_modules/constantinople/node_modules/uglify-js/node_modules/source-map
2502 verbose linkStuff [ true,
2502 verbose linkStuff   '/usr/local/lib/node_modules',
2502 verbose linkStuff   false,
2502 verbose linkStuff   '/usr/local/lib/node_modules/jade/node_modules/constantinople/node_modules/uglify-js/node_modules' ]
2503 info linkStuff source-map@0.1.33
2504 verbose linkBins source-map@0.1.33
2505 verbose linkMans source-map@0.1.33
2506 verbose rebuildBundles source-map@0.1.33
2507 verbose rebuildBundles [ 'amdefine' ]
2508 info install source-map@0.1.33
2509 info postinstall source-map@0.1.33
2510 verbose about to build /usr/local/lib/node_modules/jade/node_modules/constantinople/node_modules/uglify-js
2511 info build /usr/local/lib/node_modules/jade/node_modules/constantinople/node_modules/uglify-js
2512 verbose linkStuff [ true,
2512 verbose linkStuff   '/usr/local/lib/node_modules',
2512 verbose linkStuff   false,
2512 verbose linkStuff   '/usr/local/lib/node_modules/jade/node_modules/constantinople/node_modules' ]
2513 info linkStuff uglify-js@2.4.13
2514 verbose linkBins uglify-js@2.4.13
2515 verbose link bins [ { uglifyjs: 'bin/uglifyjs' },
2515 verbose link bins   '/usr/local/lib/node_modules/jade/node_modules/constantinople/node_modules/.bin',
2515 verbose link bins   false ]
2516 verbose linkMans uglify-js@2.4.13
2517 verbose rebuildBundles uglify-js@2.4.13
2518 verbose rebuildBundles [ 'async', 'optimist', 'source-map', 'uglify-to-browserify' ]
2519 info install uglify-js@2.4.13
2520 info postinstall uglify-js@2.4.13
2521 verbose about to build /usr/local/lib/node_modules/jade/node_modules/constantinople
2522 info build /usr/local/lib/node_modules/jade/node_modules/constantinople
2523 verbose linkStuff [ true,
2523 verbose linkStuff   '/usr/local/lib/node_modules',
2523 verbose linkStuff   false,
2523 verbose linkStuff   '/usr/local/lib/node_modules/jade/node_modules' ]
2524 info linkStuff constantinople@2.0.0
2525 verbose linkBins constantinople@2.0.0
2526 verbose linkMans constantinople@2.0.0
2527 verbose rebuildBundles constantinople@2.0.0
2528 verbose rebuildBundles [ '.bin', 'uglify-js' ]
2529 info install constantinople@2.0.0
2530 info postinstall constantinople@2.0.0
2531 http 304 https://registry.npmjs.org/lru-cache
2532 silly registry.get cb [ 304,
2532 silly registry.get   { date: 'Mon, 26 May 2014 17:04:10 GMT',
2532 silly registry.get     server: 'Apache',
2532 silly registry.get     via: '1.1 varnish',
2532 silly registry.get     'last-modified': 'Mon, 26 May 2014 17:04:10 GMT',
2532 silly registry.get     'cache-control': 'max-age=1',
2532 silly registry.get     etag: '"6EAH4E2XKATH9G2WW7G1L4L00"',
2532 silly registry.get     'x-served-by': 'cache-lcy1135-LCY',
2532 silly registry.get     'x-cache': 'HIT',
2532 silly registry.get     'x-cache-hits': '1',
2532 silly registry.get     'x-timer': 'S1401123850.349018,VS0,VE82',
2532 silly registry.get     vary: 'Accept',
2532 silly registry.get     'content-length': '0',
2532 silly registry.get     'keep-alive': 'timeout=10, max=50',
2532 silly registry.get     connection: 'Keep-Alive' } ]
2533 verbose etag lru-cache from cache
2534 silly addNameRange number 2 { name: 'lru-cache', range: '>=2.0.0-0 <3.0.0-0', hasData: true }
2535 silly addNameRange versions [ 'lru-cache',
2535 silly addNameRange   [ '1.0.1',
2535 silly addNameRange     '1.0.2',
2535 silly addNameRange     '1.0.3',
2535 silly addNameRange     '1.0.4',
2535 silly addNameRange     '1.0.5',
2535 silly addNameRange     '1.0.6',
2535 silly addNameRange     '1.1.0',
2535 silly addNameRange     '1.1.1',
2535 silly addNameRange     '2.0.0',
2535 silly addNameRange     '2.0.1',
2535 silly addNameRange     '2.0.2',
2535 silly addNameRange     '2.0.3',
2535 silly addNameRange     '2.0.4',
2535 silly addNameRange     '2.1.0',
2535 silly addNameRange     '2.2.0',
2535 silly addNameRange     '2.2.1',
2535 silly addNameRange     '2.2.2',
2535 silly addNameRange     '2.2.4',
2535 silly addNameRange     '2.3.0',
2535 silly addNameRange     '2.3.1',
2535 silly addNameRange     '2.5.0' ] ]
2536 verbose addNamed [ 'lru-cache', '2.5.0' ]
2537 verbose addNamed [ '2.5.0', '2.5.0' ]
2538 silly lockFile 30aa630e-lru-cache-2-5-0 lru-cache@2.5.0
2539 verbose lock lru-cache@2.5.0 /Users/marc.bluemner/.npm/30aa630e-lru-cache-2-5-0.lock
2540 http 304 https://registry.npmjs.org/sigmund
2541 silly registry.get cb [ 304,
2541 silly registry.get   { date: 'Mon, 26 May 2014 17:04:10 GMT',
2541 silly registry.get     server: 'Apache',
2541 silly registry.get     via: '1.1 varnish',
2541 silly registry.get     'last-modified': 'Mon, 26 May 2014 17:04:10 GMT',
2541 silly registry.get     'cache-control': 'max-age=1',
2541 silly registry.get     etag: '"2W47O7MMYNTT2NUU8NH1SRIO7"',
2541 silly registry.get     'x-served-by': 'cache-lcy1120-LCY',
2541 silly registry.get     'x-cache': 'HIT',
2541 silly registry.get     'x-cache-hits': '1',
2541 silly registry.get     'x-timer': 'S1401123850.423621,VS0,VE80',
2541 silly registry.get     vary: 'Accept',
2541 silly registry.get     'content-length': '0',
2541 silly registry.get     'keep-alive': 'timeout=10, max=50',
2541 silly registry.get     connection: 'Keep-Alive' } ]
2542 verbose etag sigmund from cache
2543 silly addNameRange number 2 { name: 'sigmund', range: '>=1.0.0-0 <1.1.0-0', hasData: true }
2544 silly addNameRange versions [ 'sigmund', [ '1.0.0' ] ]
2545 verbose addNamed [ 'sigmund', '1.0.0' ]
2546 verbose addNamed [ '1.0.0', '1.0.0' ]
2547 silly lockFile 7b2d1244-sigmund-1-0-0 sigmund@1.0.0
2548 verbose lock sigmund@1.0.0 /Users/marc.bluemner/.npm/7b2d1244-sigmund-1-0-0.lock
2549 silly lockFile 30aa630e-lru-cache-2-5-0 lru-cache@2.5.0
2550 silly lockFile 30aa630e-lru-cache-2-5-0 lru-cache@2.5.0
2551 silly lockFile 7b2d1244-sigmund-1-0-0 sigmund@1.0.0
2552 silly lockFile 7b2d1244-sigmund-1-0-0 sigmund@1.0.0
2553 silly lockFile b4f9d1ff-lru-cache-2 lru-cache@2
2554 silly lockFile b4f9d1ff-lru-cache-2 lru-cache@2
2555 silly lockFile 584a4a05-sigmund-1-0-0 sigmund@~1.0.0
2556 silly lockFile 584a4a05-sigmund-1-0-0 sigmund@~1.0.0
2557 silly resolved [ { name: 'lru-cache',
2557 silly resolved     description: 'A cache object that deletes the least-recently-used items.',
2557 silly resolved     version: '2.5.0',
2557 silly resolved     author: { name: 'Isaac Z. Schlueter', email: 'i@izs.me' },
2557 silly resolved     scripts: { test: 'tap test --gc' },
2557 silly resolved     main: 'lib/lru-cache.js',
2557 silly resolved     repository:
2557 silly resolved      { type: 'git',
2557 silly resolved        url: 'git://github.com/isaacs/node-lru-cache.git' },
2557 silly resolved     devDependencies: { tap: '', weak: '' },
2557 silly resolved     license:
2557 silly resolved      { type: 'MIT',
2557 silly resolved        url: 'http://github.com/isaacs/node-lru-cache/raw/master/LICENSE' },
2557 silly resolved     readme: '# lru cache\n\nA cache object that deletes the least-recently-used items.\n\n## Usage:\n\n```javascript\nvar LRU = require("lru-cache")\n  , options = { max: 500\n              , length: function (n) { return n * 2 }\n              , dispose: function (key, n) { n.close() }\n              , maxAge: 1000 * 60 * 60 }\n  , cache = LRU(options)\n  , otherCache = LRU(50) // sets just the max size\n\ncache.set("key", "value")\ncache.get("key") // "value"\n\ncache.reset()    // empty the cache\n```\n\nIf you put more stuff in it, then items will fall out.\n\nIf you try to put an oversized thing in it, then it\'ll fall out right\naway.\n\n## Options\n\n* `max` The maximum size of the cache, checked by applying the length\n  function to all values in the cache.  Not setting this is kind of\n  silly, since that\'s the whole purpose of this lib, but it defaults\n  to `Infinity`.\n* `maxAge` Maximum age in ms.  Items are not pro-actively pruned out\n  as they age, but if you try to get an item that is too old, it\'ll\n  drop it and return undefined instead of giving it to you.\n* `length` Function that is used to calculate the length of stored\n  items.  If you\'re storing strings or buffers, then you probably want\n  to do something like `function(n){return n.length}`.  The default is\n  `function(n){return 1}`, which is fine if you want to store `n`\n  like-sized things.\n* `dispose` Function that is called on items when they are dropped\n  from the cache.  This can be handy if you want to close file\n  descriptors or do other cleanup tasks when items are no longer\n  accessible.  Called with `key, value`.  It\'s called *before*\n  actually removing the item from the internal cache, so if you want\n  to immediately put it back in, you\'ll have to do that in a\n  `nextTick` or `setTimeout` callback or it won\'t do anything.\n* `stale` By default, if you set a `maxAge`, it\'ll only actually pull\n  stale items out of the cache when you `get(key)`.  (That is, it\'s\n  not pre-emptively doing a `setTimeout` or anything.)  If you set\n  `stale:true`, it\'ll return the stale value before deleting it.  If\n  you don\'t set this, then it\'ll return `undefined` when you try to\n  get a stale entry, as if it had already been deleted.\n\n## API\n\n* `set(key, value)`\n* `get(key) => value`\n\n    Both of these will update the "recently used"-ness of the key.\n    They do what you think.\n\n* `peek(key)`\n\n    Returns the key value (or `undefined` if not found) without\n    updating the "recently used"-ness of the key.\n\n    (If you find yourself using this a lot, you *might* be using the\n    wrong sort of data structure, but there are some use cases where\n    it\'s handy.)\n\n* `del(key)`\n\n    Deletes a key out of the cache.\n\n* `reset()`\n\n    Clear the cache entirely, throwing away all values.\n\n* `has(key)`\n\n    Check if a key is in the cache, without updating the recent-ness\n    or deleting it for being stale.\n\n* `forEach(function(value,key,cache), [thisp])`\n\n    Just like `Array.prototype.forEach`.  Iterates over all the keys\n    in the cache, in order of recent-ness.  (Ie, more recently used\n    items are iterated over first.)\n\n* `keys()`\n\n    Return an array of the keys in the cache.\n\n* `values()`\n\n    Return an array of the values in the cache.\n',
2557 silly resolved     readmeFilename: 'README.md',
2557 silly resolved     bugs: { url: 'https://github.com/isaacs/node-lru-cache/issues' },
2557 silly resolved     homepage: 'https://github.com/isaacs/node-lru-cache',
2557 silly resolved     _id: 'lru-cache@2.5.0',
2557 silly resolved     _from: 'lru-cache@2' },
2557 silly resolved   { name: 'sigmund',
2557 silly resolved     version: '1.0.0',
2557 silly resolved     description: 'Quick and dirty signatures for Objects.',
2557 silly resolved     main: 'sigmund.js',
2557 silly resolved     directories: { test: 'test' },
2557 silly resolved     dependencies: {},
2557 silly resolved     devDependencies: { tap: '~0.3.0' },
2557 silly resolved     scripts: { test: 'tap test/*.js', bench: 'node bench.js' },
2557 silly resolved     repository: { type: 'git', url: 'git://github.com/isaacs/sigmund' },
2557 silly resolved     keywords: [ 'object', 'signature', 'key', 'data', 'psychoanalysis' ],
2557 silly resolved     author:
2557 silly resolved      { name: 'Isaac Z. Schlueter',
2557 silly resolved        email: 'i@izs.me',
2557 silly resolved        url: 'http://blog.izs.me/' },
2557 silly resolved     license: 'BSD',
2557 silly resolved     readme: '# sigmund\n\nQuick and dirty signatures for Objects.\n\nThis is like a much faster `deepEquals` comparison, which returns a\nstring key suitable for caches and the like.\n\n## Usage\n\n```javascript\nfunction doSomething (someObj) {\n  var key = sigmund(someObj, maxDepth) // max depth defaults to 10\n  var cached = cache.get(key)\n  if (cached) return cached)\n\n  var result = expensiveCalculation(someObj)\n  cache.set(key, result)\n  return result\n}\n```\n\nThe resulting key will be as unique and reproducible as calling\n`JSON.stringify` or `util.inspect` on the object, but is much faster.\nIn order to achieve this speed, some differences are glossed over.\nFor example, the object `{0:\'foo\'}` will be treated identically to the\narray `[\'foo\']`.\n\nAlso, just as there is no way to summon the soul from the scribblings\nof a cocain-addled psychoanalyst, there is no way to revive the object\nfrom the signature string that sigmund gives you.  In fact, it\'s\nbarely even readable.\n\nAs with `sys.inspect` and `JSON.stringify`, larger objects will\nproduce larger signature strings.\n\nBecause sigmund is a bit less strict than the more thorough\nalternatives, the strings will be shorter, and also there is a\nslightly higher chance for collisions.  For example, these objects\nhave the same signature:\n\n    var obj1 = {a:\'b\',c:/def/,g:[\'h\',\'i\',{j:\'\',k:\'l\'}]}\n    var obj2 = {a:\'b\',c:\'/def/\',g:[\'h\',\'i\',\'{jkl\']}\n\nLike a good Freudian, sigmund is most effective when you already have\nsome understanding of what you\'re looking for.  It can help you help\nyourself, but you must be willing to do some work as well.\n\nCycles are handled, and cyclical objects are silently omitted (though\nthe key is included in the signature output.)\n\nThe second argument is the maximum depth, which defaults to 10,\nbecause that is the maximum object traversal depth covered by most\ninsurance carriers.\n',
2557 silly resolved     readmeFilename: 'README.md',
2557 silly resolved     bugs: { url: 'https://github.com/isaacs/sigmund/issues' },
2557 silly resolved     homepage: 'https://github.com/isaacs/sigmund',
2557 silly resolved     _id: 'sigmund@1.0.0',
2557 silly resolved     _from: 'sigmund@~1.0.0' } ]
2558 info install lru-cache@2.5.0 into /usr/local/lib/node_modules/jade/node_modules/monocle/node_modules/readdirp/node_modules/minimatch
2559 info install sigmund@1.0.0 into /usr/local/lib/node_modules/jade/node_modules/monocle/node_modules/readdirp/node_modules/minimatch
2560 info installOne lru-cache@2.5.0
2561 info installOne sigmund@1.0.0
2562 info /usr/local/lib/node_modules/jade/node_modules/monocle/node_modules/readdirp/node_modules/minimatch/node_modules/lru-cache unbuild
2563 info /usr/local/lib/node_modules/jade/node_modules/monocle/node_modules/readdirp/node_modules/minimatch/node_modules/sigmund unbuild
2564 verbose tar unpack /Users/marc.bluemner/.npm/lru-cache/2.5.0/package.tgz
2565 silly lockFile 62ab2cb4-minimatch-node-modules-lru-cache tar:///usr/local/lib/node_modules/jade/node_modules/monocle/node_modules/readdirp/node_modules/minimatch/node_modules/lru-cache
2566 verbose lock tar:///usr/local/lib/node_modules/jade/node_modules/monocle/node_modules/readdirp/node_modules/minimatch/node_modules/lru-cache /Users/marc.bluemner/.npm/62ab2cb4-minimatch-node-modules-lru-cache.lock
2567 silly lockFile 7a9c0ae5--npm-lru-cache-2-5-0-package-tgz tar:///Users/marc.bluemner/.npm/lru-cache/2.5.0/package.tgz
2568 verbose lock tar:///Users/marc.bluemner/.npm/lru-cache/2.5.0/package.tgz /Users/marc.bluemner/.npm/7a9c0ae5--npm-lru-cache-2-5-0-package-tgz.lock
2569 verbose tar unpack /Users/marc.bluemner/.npm/sigmund/1.0.0/package.tgz
2570 silly lockFile cde95a2d-s-minimatch-node-modules-sigmund tar:///usr/local/lib/node_modules/jade/node_modules/monocle/node_modules/readdirp/node_modules/minimatch/node_modules/sigmund
2571 verbose lock tar:///usr/local/lib/node_modules/jade/node_modules/monocle/node_modules/readdirp/node_modules/minimatch/node_modules/sigmund /Users/marc.bluemner/.npm/cde95a2d-s-minimatch-node-modules-sigmund.lock
2572 silly lockFile cb2f7a8e-er-npm-sigmund-1-0-0-package-tgz tar:///Users/marc.bluemner/.npm/sigmund/1.0.0/package.tgz
2573 verbose lock tar:///Users/marc.bluemner/.npm/sigmund/1.0.0/package.tgz /Users/marc.bluemner/.npm/cb2f7a8e-er-npm-sigmund-1-0-0-package-tgz.lock
2574 silly gunzTarPerm modes [ '755', '644' ]
2575 silly gunzTarPerm modes [ '755', '644' ]
2576 silly gunzTarPerm extractEntry package.json
2577 silly gunzTarPerm extractEntry package.json
2578 silly gunzTarPerm extractEntry .npmignore
2579 silly gunzTarPerm extractEntry README.md
2580 silly gunzTarPerm extractEntry README.md
2581 silly gunzTarPerm extractEntry LICENSE
2582 silly gunzTarPerm extractEntry LICENSE
2583 silly gunzTarPerm extractEntry CONTRIBUTORS
2584 silly gunzTarPerm extractEntry bench.js
2585 silly gunzTarPerm extractEntry sigmund.js
2586 silly gunzTarPerm extractEntry test/basic.js
2587 silly gunzTarPerm extractEntry lib/lru-cache.js
2588 silly gunzTarPerm extractEntry test/basic.js
2589 silly gunzTarPerm extractEntry test/foreach.js
2590 silly gunzTarPerm extractEntry test/memory-leak.js
2591 silly lockFile cde95a2d-s-minimatch-node-modules-sigmund tar:///usr/local/lib/node_modules/jade/node_modules/monocle/node_modules/readdirp/node_modules/minimatch/node_modules/sigmund
2592 silly lockFile cde95a2d-s-minimatch-node-modules-sigmund tar:///usr/local/lib/node_modules/jade/node_modules/monocle/node_modules/readdirp/node_modules/minimatch/node_modules/sigmund
2593 silly lockFile 62ab2cb4-minimatch-node-modules-lru-cache tar:///usr/local/lib/node_modules/jade/node_modules/monocle/node_modules/readdirp/node_modules/minimatch/node_modules/lru-cache
2594 silly lockFile 62ab2cb4-minimatch-node-modules-lru-cache tar:///usr/local/lib/node_modules/jade/node_modules/monocle/node_modules/readdirp/node_modules/minimatch/node_modules/lru-cache
2595 silly lockFile cb2f7a8e-er-npm-sigmund-1-0-0-package-tgz tar:///Users/marc.bluemner/.npm/sigmund/1.0.0/package.tgz
2596 silly lockFile cb2f7a8e-er-npm-sigmund-1-0-0-package-tgz tar:///Users/marc.bluemner/.npm/sigmund/1.0.0/package.tgz
2597 silly lockFile 7a9c0ae5--npm-lru-cache-2-5-0-package-tgz tar:///Users/marc.bluemner/.npm/lru-cache/2.5.0/package.tgz
2598 silly lockFile 7a9c0ae5--npm-lru-cache-2-5-0-package-tgz tar:///Users/marc.bluemner/.npm/lru-cache/2.5.0/package.tgz
2599 info preinstall sigmund@1.0.0
2600 info preinstall lru-cache@2.5.0
2601 verbose readDependencies using package.json deps
2602 verbose readDependencies using package.json deps
2603 verbose readDependencies using package.json deps
2604 silly resolved []
2605 verbose about to build /usr/local/lib/node_modules/jade/node_modules/monocle/node_modules/readdirp/node_modules/minimatch/node_modules/sigmund
2606 info build /usr/local/lib/node_modules/jade/node_modules/monocle/node_modules/readdirp/node_modules/minimatch/node_modules/sigmund
2607 verbose linkStuff [ true,
2607 verbose linkStuff   '/usr/local/lib/node_modules',
2607 verbose linkStuff   false,
2607 verbose linkStuff   '/usr/local/lib/node_modules/jade/node_modules/monocle/node_modules/readdirp/node_modules/minimatch/node_modules' ]
2608 info linkStuff sigmund@1.0.0
2609 verbose linkBins sigmund@1.0.0
2610 verbose linkMans sigmund@1.0.0
2611 verbose rebuildBundles sigmund@1.0.0
2612 verbose readDependencies using package.json deps
2613 silly resolved []
2614 verbose about to build /usr/local/lib/node_modules/jade/node_modules/monocle/node_modules/readdirp/node_modules/minimatch/node_modules/lru-cache
2615 info build /usr/local/lib/node_modules/jade/node_modules/monocle/node_modules/readdirp/node_modules/minimatch/node_modules/lru-cache
2616 verbose linkStuff [ true,
2616 verbose linkStuff   '/usr/local/lib/node_modules',
2616 verbose linkStuff   false,
2616 verbose linkStuff   '/usr/local/lib/node_modules/jade/node_modules/monocle/node_modules/readdirp/node_modules/minimatch/node_modules' ]
2617 info linkStuff lru-cache@2.5.0
2618 verbose linkBins lru-cache@2.5.0
2619 verbose linkMans lru-cache@2.5.0
2620 verbose rebuildBundles lru-cache@2.5.0
2621 info install sigmund@1.0.0
2622 info install lru-cache@2.5.0
2623 info postinstall sigmund@1.0.0
2624 info postinstall lru-cache@2.5.0
2625 verbose about to build /usr/local/lib/node_modules/jade/node_modules/monocle/node_modules/readdirp/node_modules/minimatch
2626 info build /usr/local/lib/node_modules/jade/node_modules/monocle/node_modules/readdirp/node_modules/minimatch
2627 verbose linkStuff [ true,
2627 verbose linkStuff   '/usr/local/lib/node_modules',
2627 verbose linkStuff   false,
2627 verbose linkStuff   '/usr/local/lib/node_modules/jade/node_modules/monocle/node_modules/readdirp/node_modules' ]
2628 info linkStuff minimatch@0.3.0
2629 verbose linkBins minimatch@0.3.0
2630 verbose linkMans minimatch@0.3.0
2631 verbose rebuildBundles minimatch@0.3.0
2632 verbose rebuildBundles [ 'lru-cache', 'sigmund' ]
2633 info install minimatch@0.3.0
2634 info postinstall minimatch@0.3.0
2635 verbose about to build /usr/local/lib/node_modules/jade/node_modules/monocle/node_modules/readdirp
2636 info build /usr/local/lib/node_modules/jade/node_modules/monocle/node_modules/readdirp
2637 verbose linkStuff [ true,
2637 verbose linkStuff   '/usr/local/lib/node_modules',
2637 verbose linkStuff   false,
2637 verbose linkStuff   '/usr/local/lib/node_modules/jade/node_modules/monocle/node_modules' ]
2638 info linkStuff readdirp@0.2.5
2639 verbose linkBins readdirp@0.2.5
2640 verbose linkMans readdirp@0.2.5
2641 verbose rebuildBundles readdirp@0.2.5
2642 verbose rebuildBundles [ 'minimatch' ]
2643 info install readdirp@0.2.5
2644 info postinstall readdirp@0.2.5
2645 verbose about to build /usr/local/lib/node_modules/jade/node_modules/monocle
2646 info build /usr/local/lib/node_modules/jade/node_modules/monocle
2647 verbose linkStuff [ true,
2647 verbose linkStuff   '/usr/local/lib/node_modules',
2647 verbose linkStuff   false,
2647 verbose linkStuff   '/usr/local/lib/node_modules/jade/node_modules' ]
2648 info linkStuff monocle@1.1.51
2649 verbose linkBins monocle@1.1.51
2650 verbose linkMans monocle@1.1.51
2651 verbose rebuildBundles monocle@1.1.51
2652 verbose rebuildBundles [ 'readdirp' ]
2653 info install monocle@1.1.51
2654 info postinstall monocle@1.1.51
2655 verbose about to build /usr/local/lib/node_modules/jade
2656 info build /usr/local/lib/node_modules/jade
2657 verbose linkStuff [ true,
2657 verbose linkStuff   '/usr/local/lib/node_modules',
2657 verbose linkStuff   true,
2657 verbose linkStuff   '/usr/local/lib/node_modules' ]
2658 info linkStuff jade@1.3.1
2659 verbose linkBins jade@1.3.1
2660 verbose link bins [ { jade: './bin/jade.js' }, '/usr/local/bin', true ]
2661 verbose linkMans jade@1.3.1
2662 verbose rebuildBundles jade@1.3.1
2663 verbose rebuildBundles [ 'character-parser',
2663 verbose rebuildBundles   'commander',
2663 verbose rebuildBundles   'constantinople',
2663 verbose rebuildBundles   'mkdirp',
2663 verbose rebuildBundles   'monocle',
2663 verbose rebuildBundles   'transformers',
2663 verbose rebuildBundles   'with' ]
2664 info install jade@1.3.1
2665 info postinstall jade@1.3.1
2666 error peerinvalid The package generator-karma does not satisfy its siblings' peerDependencies requirements!
2666 error peerinvalid Peer generator-angular@0.8.0 wants generator-karma@>=0.6.0
2666 error peerinvalid Peer generator-angular-silex@0.1.2 wants generator-karma@~0.2.0
2667 error System Darwin 13.1.0
2668 error command "node" "/usr/local/bin/npm" "install" "-g" "jade"
2669 error cwd /Users/marc.bluemner/workspace/node/chatrooms
2670 error node -v v0.10.28
2671 error npm -v 1.4.9
2672 error code EPEERINVALID
2673 verbose exit [ 1, true ]
